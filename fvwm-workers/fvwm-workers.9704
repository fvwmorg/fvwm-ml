From owner-fvwm-workers@hpc.uh.edu  Thu Apr  3 05:16:05 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 03 Apr 1997 05:16:05 -0600 (CST)
Received: from etla.ml.org (hillres55-109.cc.purdue.edu [128.210.55.109]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id FAA20016 for <fvwm-workers@hpc.uh.edu>; Thu, 3 Apr 1997 05:15:43 -0600 (CST)
Received: (from willey@localhost) by etla.ml.org (8.7.5/8.6.9) id GAA23634 for fvwm-workers@hpc.uh.edu; Thu, 3 Apr 1997 06:15:41 -0500 (EST)
From: Mark Willey <willey@etla.ml.org>
Message-Id: <199704031115.GAA23634@etla.ml.org>
Subject: "Stroke" interface for FVWM!
To: fvwm-workers@hpc.uh.edu
Date: Thu, 3 Apr 1997 06:15:40 -0500 (EST)
X-Mailer: ELM [version 2.4 PL23]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1


Hello, FVWMers!

I have written a "Stroke" interface to FVWM.  Please check it out if it
seems interesting to you.  My hope is that my patches will be folded into
the main FVWM tree and that this is something that many people will be able
to use.  On the site listed below, I've got info about the stroke library
and a patch kit for fvwm2.0.45.  Enjoy!

The ANNOUNCE for the library:

------------CUT HERE------------8< 8< 8<------------CUT HERE-------------
Announcing the release of LibStroke 0.1
(http://etla.ml.org/libstroke)

LibStroke is an X Windows stroke interface library.  Strokes are motions
of the mouse that can be interpreted by a program as a command.  Strokes
are used extensively in CAD programs.  I fell in love with them when I was
using the Mentor Graphics CAD tools and the CAD tools internally developed
by Intel.  I am writing this library so that others can see how useful
strokes can be and so that more programs take advantage of this extremely
natural human-computer interface.

This library is intended to be used by programmers in their own
applications.  Good target applications are window managers and CAD tools.

Please visit the home page and give it a test drive.  This is a "hacker"
release and I would appreciate any and all feedback on the library.

There is a reference application available on the LibStroke home page:
http://etla.ml.org/libstroke

The reference application is FVWM2 (beta).  Try it, you'll like it.  :)

Enjoy!

Mark Willey
willey@etla.ml.org

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Mon Apr  7 16:38:18 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 07 Apr 1997 16:38:18 -0500 (CDT)
Received: from methow.cs.washington.edu (methow.cs.washington.edu [128.95.1.169]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id QAA11785 for <fvwm-workers@hpc.uh.edu>; Mon, 7 Apr 1997 16:38:07 -0500 (CDT)
Received: (gjb@localhost) by methow.cs.washington.edu (8.6.12/7.2ws+) id OAA06245; Mon, 7 Apr 1997 14:37:55 -0700
To: fvwm-workers@hpc.uh.edu
Cc: Chuck Hines <chuck_hines@VNET.IBM.COM>
Subject: Menu Code Improvements
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
From: Greg Badros <gjb@cs.washington.edu>
Date: 07 Apr 1997 14:37:54 -0700
Message-ID: <qrr7mieqzt9.fsf@methow.cs.washington.edu>
Lines: 926
X-Mailer: Gnus v5.4.11/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

The below is a patch which applies cleanly to FVWM2.0.45.  It improves
menus quite a bit, and adds some new features.  Specifically:

   Splitting of long (i.e. tall) menus into "More..." popup menus so
      that they the entries that don't fit are still available

   Fixed bugs w/ Escape leaving a menu item highlighted the next
      time it pops up

   Added Checking for reused hotkeys -- prints a warning message

   Integrated LEFT_MENUS compile-time option as a run-time option,
      and added new menu style "MWMLeft" to builtin.c

   Improved handling of keyboard-movement keystrokes --
      moves one item at a time, and for FVWM menus, does something
      reasonable w/ left and right

   Added SETENV command to change an environment variable for
      future-spawned child processes -- docs are the code right now.


(This is not guaranteed to work, and you use it at your own risk, etc.
I'm not responsible for anything bad that happens.)

But, it does work great for me.  Let me know about problems or if you
love it or hate it, etc.

Greg J. Badros
gjb@cs.washington.edu
Seattle, WA  USA
http://www.cs.washington.edu/homes/gjb



Index: fvwm/builtins.c
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/builtins.c,v
retrieving revision 1.1.1.3
retrieving revision 1.3
diff -u -r1.1.1.3 -r1.3
--- builtins.c	1997/04/06 18:15:23	1.1.1.3
+++ builtins.c	1997/04/07 08:04:45	1.3
@@ -472,6 +472,7 @@
 		      char *action, int *Module)
 {
   MenuRoot *mr;
+  MenuRoot *mrPrior;
 
   char *token, *rest,*item;
 
@@ -480,7 +481,7 @@
 #endif
 
   rest = GetNextToken(action,&token);
-  mr = FindPopup(token);
+  mr = FollowMenuContinuations(FindPopup(token),&mrPrior);
   if(mr == NULL)
     mr = NewMenuRoot(token, 0);
   if(last_menu != NULL)
@@ -496,22 +497,20 @@
 }
 
 
-#ifdef USEDECOR
 void add_another_item(XEvent *eventp,Window w,FvwmWindow *tmp_win,
 		      unsigned long context,
 		      char *action, int *Module)
 {
+#ifdef USEDECOR
   extern void AddToDecor(FvwmDecor *, char *);
+#endif
   MenuRoot *mr;
+  MenuRoot *mrPrior;
 
   char *rest,*item;
 
-  if((last_menu == NULL) && (last_decor == NULL))
-      return;
-
   if (last_menu != NULL) {
-      
-      mr = FindPopup(last_menu);
+      mr = FollowMenuContinuations(FindPopup(last_menu),&mrPrior);
       if(mr == NULL)
 	  return;
       rest = GetNextToken(action,&item);
@@ -521,6 +520,7 @@
       
       MakeMenu(mr);
   }
+#ifdef USEDECOR
   else if (last_decor != NULL) {
       FvwmDecor *tmp = &Scr.DefaultDecor;
       for (; tmp; tmp = tmp->next)
@@ -530,47 +530,28 @@
 	  return;
       AddToDecor(tmp, action);
   }
+#endif
 }
-#else /* ! USEDECOR */
-void add_another_item(XEvent *eventp,Window w,FvwmWindow *tmp_win,
-		      unsigned long context,
-		      char *action, int *Module)
-{
-  MenuRoot *mr;
-
-  char *rest,*item;
-
-  if(last_menu == NULL)
-    return;
-
-  mr = FindPopup(last_menu);
-  if(mr == NULL)
-    return;
-  rest = GetNextToken(action,&item);
-
-  AddToMenu(mr, item,rest);
-  free(item);
-  
-  MakeMenu(mr);
-  return;
-}
-#endif /* USEDECOR */
 
 void destroy_menu(XEvent *eventp,Window w,FvwmWindow *tmp_win,
                   unsigned long context,
                   char *action, int *Module)
 {
   MenuRoot *mr;
+  MenuRoot *mrContinuation;
 
   char *token, *rest;
 
   rest = GetNextToken(action,&token);
   mr = FindPopup(token);
-  if(mr == NULL)
-    return;
-  DestroyMenu(mr);
+  while (mr && (mrContinuation = mr->continuation))
+      {
+      DestroyMenu(mr);
+      mr = mrContinuation;
+      if (mr == NULL)
+	  break;
+      }
   return;
-
 }
 
 void add_item_to_func(XEvent *eventp,Window w,FvwmWindow *tmp_win,
@@ -1478,12 +1459,19 @@
   action = GetNextToken(action,&font);
   action = GetNextToken(action,&style);
 
-  if((style != NULL)&&(mystrncasecmp(style,"MWM",3)==0))
+  if((style != NULL)&&(mystrncasecmp(style,"MWM\0",4)==0))
   {
     Scr.flags |= MWMMenus;
   }
-  else
+  else if((style != NULL)&&(mystrncasecmp(style,"MWMLeft\0",8)==0))
+  {
+    Scr.flags |= MWMMenusLeft;
+    Scr.flags |= MWMMenus;
+  }
+  else {
     Scr.flags &= ~MWMMenus;
+    Scr.flags &= ~MWMMenusLeft;
+  }
 
   if(Scr.d_depth > 2)
   {
@@ -2834,6 +2822,29 @@
     }
 }
 #endif /* MULTISTYLE */
+
+
+
+void SetEnv(XEvent *eventp,Window junk,FvwmWindow *tmp_win,
+	    unsigned long context, char *action,int* Module)
+{
+    char *szVar = NULL;
+    char *szValue = NULL;
+    char *szNoOverwrite = NULL;
+    Bool fOverwrite = TRUE;
+    action = GetNextToken(action,&szVar);
+    action = GetNextToken(action,&szValue);
+    action = GetNextToken(action,&szNoOverwrite);
+    if (mystrcasecmp(szNoOverwrite,"NoOverwrite") == 0)
+	fOverwrite = FALSE;
+    setenv(szVar,szValue,fOverwrite?1:0);
+    /*
+    fprintf(stderr,"Setting %s to %s, overwrite = %d\n",
+	    szVar, szValue, fOverwrite);
+	    */
+}
+
+
 
 /**************************************************************************
  *
Index: fvwm/functions.c
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/functions.c,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -r1.1.1.3 -r1.2
--- functions.c	1997/04/06 18:15:26	1.1.1.3
+++ functions.c	1997/04/07 08:04:46	1.2
@@ -119,6 +119,7 @@
   {"Stick",        stick_function,   F_STICK,               FUNC_NEEDS_WINDOW},
   {"Send_WindowList",send_list_func, F_SEND_WINDOW_LIST,    FUNC_NO_WINDOW},
   {"Send_ConfigInfo",SendDataToModule, F_CONFIG_LIST,       FUNC_NO_WINDOW},
+  {"SetEnv",       SetEnv,           F_SETENV,              FUNC_NO_WINDOW},
   {"set_mask",     set_mask_function,F_SET_MASK,            FUNC_NO_WINDOW},
   {"Style",        ProcessNewStyle,  F_STYLE,               FUNC_NO_WINDOW},
   {"Title",        Nop_func,         F_TITLE,               FUNC_TITLE},
Index: fvwm/menus.c
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/menus.c,v
retrieving revision 1.1.1.2
retrieving revision 1.2
diff -u -r1.1.1.2 -r1.2
--- menus.c	1997/04/06 18:15:30	1.1.1.2
+++ menus.c	1997/04/07 07:16:43	1.2
@@ -6,6 +6,21 @@
  *     copyright remains in the source code and all documentation
  ****************************************************************************/
 
+/* Lots of reworking by 
+   Greg J. Badros, Apr 6, 1997 
+   gjb@cs.washington.edu
+
+   Fixed bugs w/ Escape leaving a menu item highlighted the next
+      time it pops up
+   Added Checking for reused hotkeys
+   Splitting of long (i.e. tall) menus into "More..." popup menus
+   Integrated LEFT_MENUS compile-time option as a run-time option,
+      and added new menu style MWMLeft to builtin.c
+   Improved handling of keyboard-movement keystrokes --
+      moves one item at a time, and for FVWM menus, does something
+      reasonable w/ left and right
+   */
+    
 
 /***********************************************************************
  *
@@ -30,6 +45,12 @@
 #include "parse.h"
 #include "screen.h"
 
+#ifdef DEBUG
+#  define DEBUG_FPRINTF(x) fprintf##x
+#else
+#  define DEBUG_FPRINTF(x)
+#endif
+
 int menu_on=0;
 
 MenuRoot *ActiveMenu = NULL;		/* the active menu */
@@ -49,9 +70,9 @@
 int mouse_moved = 0;
 int menu_aborted = 0;
 
-#ifdef LEFT_MENUS
-static int PrevActiveMenuX = -1;
-#endif /* LEFT_MENUS */
+/* This whole Prev and PrevPrev garbage should be a stack! */
+static int PrevActiveMenuX = -1; 
+static MenuItem *PrevActiveItem = NULL;
 
 extern XContext MenuContext;
 /****************************************************************************
@@ -65,15 +86,13 @@
 {
   int prevStashedX=0,prevStashedY=0;
   MenuRoot *PrevActiveMenu=0;
-  MenuItem *PrevActiveItem=0;
   int retval=MENU_NOP;
   int x,y;
   Time t0;
   extern Time lastTimestamp;
-#ifdef LEFT_MENUS
   int PrevMenuX = PrevActiveMenuX;
-#endif /* LEFT_MENUS */
 
+  PrevActiveItem=NULL;
 
   /* this condition could get ugly */
   if(menu->in_use)
@@ -134,9 +153,7 @@
     menu_aborted = 1;
   else
     menu_aborted = 0;
-#ifdef LEFT_MENUS
   PrevActiveMenuX = PrevMenuX;
-#endif /* LEFT_MENUS */
   return retval;
 }
 
@@ -542,10 +559,13 @@
  * If none of these conditions are true, then the default processing
  * routine is called.
  ***********************************************************************/
-void menuShortcuts(XEvent *ev) 
+void menuShortcuts(XEvent *Event) 
 {
   MenuItem *mi;
-  KeySym keysym = XLookupKeysym(&ev->xkey,0);
+  int x,y,x_root,y_root;
+  int move_size = Scr.EntryHeight;
+  int x_move = 0,y_move = 0;
+  KeySym keysym = XLookupKeysym(&Event->xkey,0);
   
   /* Try to match hot keys */
   if (((keysym >= XK_a) && (keysym <= XK_z)) ||	/* Only consider alphabetic */
@@ -565,24 +585,151 @@
 	  if (keysym == key)
 	    {		/* Are they equal?		*/
 	      ActiveItem = mi;		/* Yes: Make this the active item */
-	      ev->type = ButtonRelease;	/* Force a menu exit		*/
+	      Event->type = ButtonRelease;	/* Force a menu exit		*/
 	      return;
 	    }
 	}
     }
   
+
+  XQueryPointer( dpy, Scr.Root, &JunkRoot, &Event->xany.window,
+		&x_root, &y_root, &x, &y, &JunkMask);
+  XQueryPointer( dpy, Event->xany.window, &JunkRoot, &JunkChild,
+		&x_root, &y_root, &x, &y, &JunkMask);
+
   switch(keysym)		/* Other special keyboard handling	*/
     {
     case XK_Escape:		/* Escape key pressed. Abort		*/
-      ActiveItem = NULL;	/* No selection				*/
-      ev->type = ButtonRelease;	/* Make the menu exit			*/
+      /* First turn off the highlight */
+      if (ActiveItem)
+	{
+	ActiveItem->state = 0;
+	PaintEntry(ActiveMenu, ActiveItem);
+	}
+      ActiveItem = NULL;	/* No selection	*/
+      Event->type = ButtonRelease;	/* Make the menu exit*/
+      goto NOT_A_MOVE;
       break;
       
+    case XK_Up:
+    case XK_k:
+    case XK_p:
+	if ((ActiveItem != NULL) ||
+	    ((Scr.flags & MWMMenus) && PrevActiveItem != NULL)) {
+	    MenuItem *mi = (ActiveItem?ActiveItem:PrevActiveItem);
+	    MenuItem *priorItem = mi->prev;
+	    /* Skip back thru separators */
+	    while (priorItem && priorItem->fIsSeparator == TRUE) {
+		DEBUG_FPRINTF((stderr,"skipping up\n"));
+		priorItem = priorItem->prev;
+	    }
+	    if (priorItem) {
+		y_move = priorItem->y_offset - mi->y_offset;
+		DEBUG_FPRINTF((stderr,"using up move_size = %d\n",y_move));
+	    }
+	    break;
+	}
+	else {
+	    DEBUG_FPRINTF((stderr,"using up move_size\n"));
+	    y_move = -move_size;
+	    }
+	break;
+
+    case XK_Down:
+    case XK_n:
+    case XK_j:
+	if ((ActiveItem != NULL) ||
+	    ((Scr.flags & MWMMenus) && PrevActiveItem != NULL)) {
+	    MenuItem *mi = (ActiveItem?ActiveItem:PrevActiveItem);
+	    MenuItem *nextItem = mi->next; 
+	    /* Skip forward thru separators */
+	    while (nextItem && nextItem->fIsSeparator) {
+		DEBUG_FPRINTF((stderr,"skipping down\n"));
+		nextItem = nextItem->next;
+	    }
+	    if (nextItem) {
+		y_move = nextItem->y_offset - mi->y_offset;
+		DEBUG_FPRINTF((stderr,"using down move_size = %d\n",y_move));
+	    }
+	    break;
+	}
+	else {
+	    DEBUG_FPRINTF((stderr,"using down move_size\n"));
+	    y_move = move_size;
+	    }
+	break;
+
+    /* FIX: Left and right should handle popping up and out of child menus
+       accurately instead of just moving the pointer around; this
+       doesn't really work as is */
+    case XK_Left:
+    case XK_b:
+    case XK_h:
+      if (PrevMenu != NULL && ActiveMenu != NULL)
+	{
+	DEBUG_FPRINTF((stderr,"x = %d, am->width = %d, pm->width = %d\n",x,ActiveMenu->width, PrevMenu->width));
+	}
+      if (Scr.flags & MWMMenusLeft ||
+	  Scr.flags & MWMMenus)
+	{
+	/* Haven't gotten MWM menu modes to work well w/ keyboard yet,
+	   so just do a simple movement */
+	x_move = -move_size;
+	}
+      else 
+	{ /* closing a child menu */
+	x_move = -x-5;
+	}
+      break;
+
+    case XK_Right:
+    case XK_f:
+    case XK_l:
+      if (ActiveMenu != NULL && PrevMenu != NULL) 
+	{
+	DEBUG_FPRINTF((stderr,"x = %d, am->width = %d, pm->width = %d\n",x,ActiveMenu->width, PrevMenu->width));
+	/*x_move = ActiveMenu->width/2; */ 
+	}
+      if (Scr.flags & MWMMenusLeft ||
+	  Scr.flags & MWMMenus)
+	{
+	/* Haven't gotten MWM menu modes to work well w/ keyboard yet,
+	   so just do a simple movement */
+	x_move = move_size;
+	}
+      else 
+	{ /* popping up a child menu */
+	x_move = (ActiveMenu->width-x)-5;
+	}
+      break;
+
       /* Nothing special --- Allow other shortcuts (cursor movement)	*/
     default:
-      Keyboard_shortcuts(ev,ButtonRelease);
+      Keyboard_shortcuts(Event,ButtonRelease);
+      goto NOT_A_MOVE;
       break;
     }
+
+  if((x_move != 0)||(y_move != 0))
+    {
+      /* beat up the event */
+      XWarpPointer(dpy, None, Scr.Root, 0, 0, 0, 0, x_root+x_move,
+		   y_root+y_move);
+
+      /* beat up the event */
+      Event->type = MotionNotify;
+      Event->xkey.x += x_move;
+      Event->xkey.y += y_move;
+      Event->xkey.x_root += x_move;
+      Event->xkey.y_root += y_move;
+    }
+
+NOT_A_MOVE:
+  DEBUG_FPRINTF((stderr,"Active = %s; ",ActiveMenu?ActiveMenu->name:"NULL"));
+  DEBUG_FPRINTF((stderr,"Prev = %s; ",PrevMenu?PrevMenu->name:"NULL"));
+  DEBUG_FPRINTF((stderr,"menu_on=%d\n",menu_on));
+
+  return;
 }
 
 /***********************************************************************
@@ -640,6 +787,7 @@
 	      sticks = 0;
 	      break;
 	    }
+#ifdef GJB_WONDERS_WHY_THIS_IS_HERE
 	  if ((Scr.flags & MWMMenus) && !ActiveItem && (menu_on > 1))
 	    {
 	      int x,y;
@@ -653,6 +801,7 @@
 		  break;
 		}
 	    }
+#endif
 	  PopDownMenu();
 	  if(ActiveItem)
 	    {
@@ -717,6 +866,25 @@
 }
 
 
+/* Unhighlight any already highlighted menu items */
+void RepaintAlreadyReversedMenuItems(MenuRoot *menu)
+{
+  MenuItem *mi = menu->first;
+  while (mi) {
+    if (mi->state) {
+    /* I'm not going to break, even though we really
+       shouldn't have two entries highlighted -- we
+       really should track the full ActiveItem
+       path correctly so this would be unnecessary,
+       but alas, only two items deep are tracked */
+      mi->state = 0;
+      PaintEntry(menu,mi);
+    }
+    mi=mi->next;
+  }
+}
+  
+
 /***********************************************************************
  *
  *  Procedure:
@@ -734,6 +902,8 @@
   if ((!menu)||(menu->w == None)||(menu->items == 0)||(menu->in_use))
     return False;
 
+  RepaintAlreadyReversedMenuItems(menu);
+
   menu_on++;
   InstallRootColormap();
 
@@ -770,12 +940,10 @@
 	  menu->width +1;
     }
 
-#ifdef LEFT_MENUS
-  if (PrevActiveMenuX != -1)
+  if (Scr.flags & MWMMenusLeft && PrevActiveMenuX != -1)
       if (x + menu->width > Scr.MyDisplayWidth - 2) {
           x = PrevActiveMenuX - menu->width + 2;
       }
-#endif /* LEFT_MENUS */
   /* clip to screen */
   if (x + menu->width > Scr.MyDisplayWidth-2) 
     x = Scr.MyDisplayWidth - menu->width-2;
@@ -793,10 +961,7 @@
     }
   if (y < 0) y = 0;
 
-#ifdef LEFT_MENUS
   PrevActiveMenuX = x;
-#endif /* LEFT_MENUS */
-
   MenuY = y;
   XMoveWindow(dpy, menu->w, x, y);
   XMapRaised(dpy, menu->w);
@@ -819,11 +984,9 @@
   
   menu_on--;
 
-#ifdef LEFT_MENUS
   if (menu_on == 0) {                   /* last menu down? */
     PrevActiveMenuX = -1;               /* Return to no prev item state */
   }                                     /* end last menu down */
-#endif /* LEFT_MENUS */
 
   if (ActiveItem)
     ActiveItem->state = 0;
@@ -946,9 +1109,11 @@
 void MakeMenu(MenuRoot *mr)
 {
   MenuItem *cur;
+  MenuItem *cur_prev;
   unsigned long valuemask;
   XSetWindowAttributes attributes;
   int y,width;
+  int cItems;
 
   if((mr->func != F_POPUP)||(!Scr.flags & WindowsCaptured))
     return;
@@ -987,8 +1152,11 @@
   if(mr->width2 > 0)
     mr->width += 5;
   
-
-  for (y=2, cur = mr->first; cur != NULL; cur = cur->next)
+  /* cur_prev trails one behind cur, since we need to move that
+     into a newly-made menu if we run out of space */
+  for (y=2, cItems = 0, cur = mr->first, cur_prev = NULL; 
+       cur != NULL; 
+       cur_prev = cur, cur = cur->next, cItems++)
     {
       cur->y_offset = y;
       cur->x = 5+mr->width0;
@@ -1014,15 +1182,22 @@
 		      HEIGHT_EXTRA_TITLE;
 		}
 	    }
-	  else
+	  else {
 	    cur->y_height = HEIGHT_SEPARATOR;
+	  }
+	  /* Titles are separators, too */
+	  cur->fIsSeparator = TRUE;
 	}
-      else if((cur->strlen==0)&&(cur->strlen2 == 0))
+      else if((cur->strlen==0)&&(cur->strlen2 == 0)) {
 	/* Separator */
 	cur->y_height = HEIGHT_SEPARATOR;
-      else
+	cur->fIsSeparator = TRUE;
+	}
+      else {
 	/* Normal text entry */
+	cur->fIsSeparator = FALSE;
 	cur->y_height = Scr.EntryHeight;
+	}
       if(cur->picture)
 	cur->y_height += cur->picture->height;
       if(cur->lpicture && cur->y_height < cur->lpicture->height+4)
@@ -1036,6 +1211,50 @@
 	{
 	  cur->x2 = mr->width -5 + mr->width0;
 	}
+      /* this item would have to be the last item, or else
+	 we need to add a "More..." entry pointing to a new menu */
+      if (y+Scr.EntryHeight > Scr.MyDisplayHeight &&
+	  cur->next != NULL)
+	{
+	char *szMenuContinuationActionAndName = 
+	  (char *) safemalloc((8+strlen(mr->name))*sizeof(char));
+	MenuRoot *menuContinuation;
+	if (mr->continuation != NULL) {
+	  fvwm_msg(ERR,"MakeMenu","Confused-- expected continuation to be null");
+	  break;
+	}
+	strcpy(szMenuContinuationActionAndName,"Popup ");
+	strcat(szMenuContinuationActionAndName, mr->name);
+	strcat(szMenuContinuationActionAndName,"$");
+	/* NewMenuRoot inserts at the head of the list of menus 
+	   but, we need it at the end */
+	/* (Give it just the name, with is 6 chars passed the action
+	   since strlen("Popup ")==6 )*/
+	DEBUG_FPRINTF((stderr,"Inserting new menu with action: %s\n", szMenuContinuationActionAndName));
+	menuContinuation = NewMenuRoot(szMenuContinuationActionAndName+6,0);
+	mr->continuation = menuContinuation;
+
+	/* Now move this item and the remaining items into the new menu */
+	cItems--;
+	menuContinuation->first = cur;
+	menuContinuation->last = mr->last;
+	menuContinuation->items = mr->items - cItems;
+	DEBUG_FPRINTF((stderr,"New menu has %d items\n",menuContinuation->items));
+
+	/* cur_prev is now the last item in the current menu */
+	mr->last = cur_prev;
+	mr->items = cItems;
+	cur_prev->next = NULL;
+
+	/* Go back one, so that this loop will process the new item */
+	y -= cur->y_height;
+	cur = cur_prev;
+
+	/* And add the entry pointing to the new menu */
+	AddToMenu(mr,"More&...",szMenuContinuationActionAndName);
+	MakeMenu(menuContinuation);
+
+	}
     }
   mr->in_use = 0;
   mr->height = y+2;
@@ -1066,6 +1285,28 @@
   return;
 }
 
+/* FHotKeyUsedBefore
+ * Return true if any item already in the menu has
+ * used the given hotkey already
+ * This means that it doesn't check the last element of the menu
+ */
+int FHotKeyUsedBefore(MenuRoot *menu, char ch) {
+  int f = FALSE;
+  MenuItem *currentMenuItem = menu->first;
+  /* we want to stop just before the last item in the menu */
+  while (currentMenuItem != 0 && currentMenuItem->next != 0)
+    {
+    if (currentMenuItem->chHotkey == ch)
+      {
+      f = TRUE;
+      break;
+      }
+    currentMenuItem = currentMenuItem->next;
+    }
+  return f;
+}
+
+
 /***********************************************************************
  * Procedure:
  *	scanForHotkeys - Look for hotkey markers in a MenuItem
@@ -1076,7 +1317,7 @@
  * 	which 	- +1 to look in it->item1 and -1 to look in it->item2.
  *
  ***********************************************************************/
-void scanForHotkeys(MenuItem *it, int which) 
+char scanForHotkeys(MenuItem *it, int which) 
 {
   char *start, *txt;
 
@@ -1092,13 +1333,17 @@
 	      for (tmp = txt; *tmp != '\0'; tmp++) tmp[0] = tmp[1];
 	      continue;		/* ...And skip to the key char		*/
 	    }
-	  /* It's a hot key marker - work out the offset value		*/
-	  it->hotkey = (1 + (txt - start)) * which;
-	  for (; *txt != '\0'; txt++) txt[0] = txt[1];	/* Copy down..	*/
-	  return;			/* Only one hotkey per item...	*/
+	  else {
+	    char ch = txt[1]; 
+	    /* It's a hot key marker - work out the offset value */
+	    it->hotkey = (1 + (txt - start)) * which;
+	    for (; *txt != '\0'; txt++) txt[0] = txt[1];	/* Copy down..	*/
+	    return ch;			/* Only one hotkey per item...	*/
+	    }
 	}
     }
   it->hotkey = 0;		/* No hotkey found.  Set offset to zero	*/
+  return '\0';
 }
 
 
@@ -1165,6 +1410,22 @@
     }
 }
 
+/* FollowMenuContinuations
+ * Given an menu root, return the menu root to add to by
+ * following continuation links until there are no more
+ */
+MenuRoot *FollowMenuContinuations(MenuRoot *mr, MenuRoot **pmrPrior )
+{
+  *pmrPrior = NULL;
+  while ((mr != NULL) &&
+	 (mr->continuation != NULL))
+    {
+    DEBUG_FPRINTF((stderr,"Following continuation, skipping %s\n",mr->name));
+    *pmrPrior = mr;
+    mr = mr->continuation;
+    }
+  return mr;
+}
 
 
 /***********************************************************************
@@ -1194,6 +1455,8 @@
      return;
 
   tmp = (MenuItem *)safemalloc(sizeof(MenuItem));
+  tmp->chHotkey = '\0';
+  tmp->next = NULL;
   if (menu->first == NULL)
     {
       menu->first = tmp;
@@ -1235,9 +1498,23 @@
 
   if (item != (char *)0)
     {
+      char ch;
       scanForPixmap(tmp->item,&tmp->picture,'*');
       scanForPixmap(tmp->item,&tmp->lpicture,'%');
-      scanForHotkeys(tmp, 1);				/* pete@tecc.co.uk */
+      ch = scanForHotkeys(tmp, 1);	/* pete@tecc.co.uk */
+      if (ch != '\0')
+	{
+	if (FHotKeyUsedBefore(menu,ch))
+	  {
+	  fvwm_msg(WARN,"AddToMenu","Hotkey %c is reused in menu %s; second binding ignored.",ch,
+		   menu->name);
+	  tmp->hotkey = 0;
+	  }
+	else
+	  {
+	  tmp->chHotkey = ch;
+	  }
+	}
       tmp->strlen = strlen(tmp->item);
     }
   else
@@ -1249,15 +1526,28 @@
         scanForPixmap(tmp->item2,&tmp->picture,'*');
       if(!tmp->lpicture)
         scanForPixmap(tmp->item2,&tmp->lpicture,'%');
-      if (tmp->hotkey == 0)
-	scanForHotkeys(tmp, -1);	/* pete@tecc.co.uk */
+      if (tmp->hotkey == 0) {
+        char ch = scanForHotkeys(tmp, -1);	/* pete@tecc.co.uk */
+	if (ch != '\0')
+	  {
+	  if (FHotKeyUsedBefore(menu,ch))
+	    {
+	    fvwm_msg(WARN,"AddToMenu","Hotkey %c is reused in menu %s; second binding ignored.",ch,
+		     menu->name);
+	    tmp->hotkey = 0;
+	    }
+	  else
+	    {
+	    tmp->chHotkey = ch;
+	    }
+	  }
+      }
       tmp->strlen2 = strlen(tmp->item2);
     }
   else
     tmp->strlen2 = 0;
 
   tmp->action = stripcpy(action);
-  tmp->next = NULL;
   tmp->state = 0;
   tmp->func_type = find_func_type(tmp->action);
   tmp->item_num = menu->items++;
@@ -1273,17 +1563,19 @@
  *
  *  Inputs:
  *	name	- the name of the menu root
+ *      fFunction - non-zero if we shoot set func to F_FUNCTION, 
+ *                  F_POPUP otherwise
  *
  ***********************************************************************/
-MenuRoot *NewMenuRoot(char *name,int junk)
+MenuRoot *NewMenuRoot(char *name,int fFunction)
 {
   MenuRoot *tmp;
   
   tmp = (MenuRoot *) safemalloc(sizeof(MenuRoot));
-  if(junk == 0)
-    tmp->func = F_POPUP;
-  else
+  if(fFunction != 0)
     tmp->func = F_FUNCTION;
+  else
+    tmp->func = F_POPUP;
 
   tmp->name = stripcpy(name);
   tmp->first = NULL;
@@ -1293,6 +1585,7 @@
   tmp->width2 = 0;
   tmp->w = None;
   tmp->next  = Scr.AllMenus;
+  tmp->continuation = NULL;
   Scr.AllMenus = tmp;
   return (tmp);
 }
Index: fvwm/menus.h
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/menus.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -r1.1.1.1 -r1.2
--- menus.h	1997/01/07 03:53:28	1.1.1.1
+++ menus.h	1997/04/07 07:16:43	1.2
@@ -79,6 +79,8 @@
 				   (offsets have 1 added, so +1 or -1
 				   refer to the *first* character)
 				   */
+    char chHotkey;
+    short fIsSeparator;          /* 1 if this is a separator */
 } MenuItem;
 
 typedef struct MenuRoot
@@ -86,6 +88,7 @@
     struct MenuItem *first;	/* first item in menu */
     struct MenuItem *last;	/* last item in menu */
     struct MenuRoot *next;	/* next in list of root menus */
+    struct MenuRoot *continuation; /* continuation of this menu (too tall for screen */
     char *name;			/* name of root */
     Window w;			/* the window of the menu */
     short height;		/* height of the menu */
@@ -125,5 +128,6 @@
 extern MenuRoot *ActiveMenu;
 extern MenuItem *ActiveItem;
 
+MenuRoot *FollowMenuContinuations(MenuRoot *mr,MenuRoot **pmrPrior);
 
 #endif /* _MENUS_ */
Index: fvwm/misc.h
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/misc.h,v
retrieving revision 1.1.1.2
retrieving revision 1.2
diff -u -r1.1.1.2 -r1.2
--- misc.h	1997/01/07 04:14:32	1.1.1.2
+++ misc.h	1997/04/07 08:04:48	1.2
@@ -538,6 +538,8 @@
                       unsigned long context, char *action,int* Module);
 void AddModConfig(XEvent *eventp,Window junk,FvwmWindow *tmp_win,
                   unsigned long context, char *action,int* Module);
+void SetEnv(XEvent *eventp,Window junk,FvwmWindow *tmp_win,
+	    unsigned long context, char *action,int* Module);
 
 /*
 ** message levels for fvwm_msg:
Index: fvwm/parse.h
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/parse.h,v
retrieving revision 1.1.1.2
retrieving revision 1.2
diff -u -r1.1.1.2 -r1.2
--- parse.h	1997/01/07 04:14:33	1.1.1.2
+++ parse.h	1997/04/07 08:04:49	1.2
@@ -101,6 +101,7 @@
 #define F_DESTROY_DECOR         124
 #define F_UPDATE_DECOR          125
 #define F_WINDOW_SHADE          126
+#define F_SETENV                127
 
 /* Functions for use by modules only! */
 #define F_SEND_WINDOW_LIST     1000
Index: fvwm/screen.h
===================================================================
RCS file: /homes/rivers/gjb/.CVS/fvwm/fvwm/screen.h,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -r1.1.1.3 -r1.2
--- screen.h	1997/04/06 18:15:32	1.1.1.3
+++ screen.h	1997/04/07 07:20:04	1.2
@@ -349,4 +349,5 @@
 #define EdgeWrapX                 (64) /* Should EdgeScroll wrap around? */
 #define EdgeWrapY                (128) 
 #define MWMMenus                (1024)
+#define MWMMenusLeft            (2048)
 #endif /* _SCREEN_ */
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Apr 10 12:54:03 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 10 Apr 1997 12:54:03 -0500 (CDT)
Received: from bae.bae.bellcore.com (bae.bae.bellcore.com [128.96.133.81]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id MAA17839 for <fvwm-workers@hpc.uh.edu>; Thu, 10 Apr 1997 12:53:41 -0500 (CDT)
Received: from fork (fork.bae.bellcore.com) by bae.bae.bellcore.com with SMTP id AA06309
  (5.65c/IDA-1.4.4 for <fvwm-workers@hpc.uh.edu>); Thu, 10 Apr 1997 13:51:45 -0400
Message-Id: <199704101751.AA06309@bae.bae.bellcore.com>
To: Greg Badros <gjb@cs.washington.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Menu Code Improvements 
In-Reply-To: Your message of 07 Apr 1997 14:37:54 -0700.
             <qrr7mieqzt9.fsf@methow.cs.washington.edu> 
X-Face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Date: Thu, 10 Apr 1997 13:51:54 -0400
From: Dan Espen <dane@bae.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

Greg Badros <gjb@cs.washington.edu> writes:

I gave this a try and I have some comments:

> The below is a patch which applies cleanly to FVWM2.0.45.  It improves
> menus quite a bit, and adds some new features.  Specifically:
> 
>    Splitting of long (i.e. tall) menus into "More..." popup menus so
>       that they the entries that don't fit are still available
> 
>    Fixed bugs w/ Escape leaving a menu item highlighted the next
>       time it pops up
> 
>    Added Checking for reused hotkeys -- prints a warning message
> 
>    Integrated LEFT_MENUS compile-time option as a run-time option,
>       and added new menu style "MWMLeft" to builtin.c

With the current "left menu" feature, the left side pop-up is used for
both  mwm  and fvwm menus.  With  your  patch, it looked like  it only
takes effect if you set the menustyle to "mwmleft".

I view the "left menu feature" as a bug fix that affects both fvwm and
mwm menus, and I don't think it should be either a compile time or run
time option.  It should just be a fix to a bug.  I'm  hoping that in a
future release, this will just be the built-in behavior.

I call this a bug because if you pop-up a small menu on the right side
of the screen and then pop-up a large menu  that completely covers the
small  menu, you  can't get  back to the  small menu  without starting
over.  Of course its worse  with mwm menus which automatically pop-up,
but either way its a usability problem.

>    Improved handling of keyboard-movement keystrokes --
>       moves one item at a time, and for FVWM menus, does something
>       reasonable w/ left and right

I definitely saw improved keyboard menu traversal with fvwm menus, but
with mwm menus, it just seemed to be taking larger  steps.  I did like
the way the  cursor is held inside the  menus.  You can get the cursor
outside a menu when you  come out of a sub  menu toward the parent.  I
was able to end up with  2 entries in a  menu raised by navigating out
of one menu  thru  another and back   at another location.    It still
worked right, it just looked weird.

If  you could get  mwm left  and right  working better,  that would be
great.

>    Added SETENV command to change an environment variable for
>       future-spawned child processes -- docs are the code right now.

Your  SetEnv routine calls "setenv".  I  guess  this is something like
"putenv"?  "setenv" doesn't seem to exist in Solaris.

Since  I couldn't link this I  couldn't test it,  but I didn't see any
description of what it is for.  If you are  going to "Exec" something,
you can always "Exec export VAR=value;runit", so I  have to guess this
is for exporting environment variables to modules?

> 
> (This is not guaranteed to work, and you use it at your own risk, etc.
> I'm not responsible for anything bad that happens.)

OK, I survived.

> But, it does work great for me.  Let me know about problems or if you
> love it or hate it, etc.

One of my menus would  pop-up at +0+0 when I  tried to pop it up  near
the bottom right edge.   Why this was  only happening  with one  of my
menus, wasn't clear.  (I haven't studied the code.)

> Greg J. Badros
> gjb@cs.washington.edu
> Seattle, WA  USA
> http://www.cs.washington.edu/homes/gjb

--
Dan Espen                                    Phone: (908) 699-5570
dane@bae.bellcore.com
444 Hoes Lane  Room RRC 1C-214
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Apr 10 15:49:07 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 10 Apr 1997 15:49:07 -0500 (CDT)
Received: from methow.cs.washington.edu (methow.cs.washington.edu [128.95.1.169]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id PAA24578 for <fvwm-workers@hpc.uh.edu>; Thu, 10 Apr 1997 15:48:59 -0500 (CDT)
Received: (gjb@localhost) by methow.cs.washington.edu (8.6.12/7.2ws+) id NAA21039; Thu, 10 Apr 1997 13:45:48 -0700
To: Dan Espen <dane@bae.bellcore.com>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Menu Code Improvements
References: <199704101751.AA06309@bae.bae.bellcore.com>
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Apr 1997 13:45:46 -0700
In-Reply-To: Dan Espen's message of Thu, 10 Apr 1997 13:51:54 -0400
Message-ID: <qrr67xusj2d.fsf@methow.cs.washington.edu>
Lines: 99
X-Mailer: Gnus v5.4.11/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

Dan Espen <dane@bae.bellcore.com> writes:

> With the current "left menu" feature, the left side pop-up is used for
> both  mwm  and fvwm menus.  With  your  patch, it looked like  it only
> takes effect if you set the menustyle to "mwmleft".

Correct.

> I view the "left menu feature" as a bug fix that affects both fvwm and
> mwm menus, and I don't think it should be either a compile time or run
> time option.  It should just be a fix to a bug.  I'm  hoping that in a
> future release, this will just be the built-in behavior.

I do too, but as I understood it, LEFT_MENUS was left *not* the default
because it interacted poorly with respect to FVWM menus.  This is why I
made it only a "fix" to MWMMenus.

> I call this a bug because if you pop-up a small menu on the right side
> of the screen and then pop-up a large menu  that completely covers the
> small  menu, you  can't get  back to the  small menu  without starting
> over.  Of course its worse  with mwm menus which automatically pop-up,
> but either way its a usability problem.

Though this is not unlike using keyboard hotkeys-- they popup the child
menu and remove the parent menu.  That behaviour is at least non standard.

> 
> >    Improved handling of keyboard-movement keystrokes --
> >       moves one item at a time, and for FVWM menus, does something
> >       reasonable w/ left and right
> 
> I definitely saw improved keyboard menu traversal with fvwm menus, but
> with mwm menus, it just seemed to be taking larger  steps.  I did like
> the way the  cursor is held inside the  menus.  You can get the cursor
> outside a menu when you  come out of a sub  menu toward the parent.  I
> was able to end up with  2 entries in a  menu raised by navigating out
> of one menu  thru  another and back   at another location.    It still
> worked right, it just looked weird.

Yes---I've noticed this too.  

> 
> If  you could get  mwm left  and right  working better,  that would be
> great.

Yes.. left and right still don't do anything really useful for either.
I'm doing a much more substantial rewrite that will make this stuff
easier to get right, and more flexible, too.

> 
> >    Added SETENV command to change an environment variable for
> >       future-spawned child processes -- docs are the code right now.
> 
> Your  SetEnv routine calls "setenv".  I  guess  this is something like
> "putenv"?  "setenv" doesn't seem to exist in Solaris.
> 
> Since  I couldn't link this I  couldn't test it,  but I didn't see any
> description of what it is for.  If you are  going to "Exec" something,
> you can always "Exec export VAR=value;runit", so I  have to guess this
> is for exporting environment variables to modules?

First, yes, setenv is the same as putenv on Linux. I don't know what
it's called on other platforms, and would appreciate help with this.
I guess I didn't explain the purpose very well.  Basically, the intent
is to affect the environment of all processes started under the window
manager.  Many users have their window manager exec processes, not just
their shell.  This is fine as long as environment settings for
user-programs (i.e. those that don't affect only your shell) are put in,
say, a ~/.env file and sourced by .xsession/.xinitrc before running
fvwm.  However, when you need to dynamically change the environment that
programs run in, you ideally don't want to have to restart the window
manager just so that its environment (and hence the environment of its
child processes) is slightly different.


> > (This is not guaranteed to work, and you use it at your own risk, etc.
> > I'm not responsible for anything bad that happens.)
> 
> OK, I survived.

Good!

> Dan Espen                                    Phone: (908) 699-5570
> dane@bae.bellcore.com
> 444 Hoes Lane  Room RRC 1C-214
> Piscataway, NJ 08854

Thanks for trying this, Dan.  Like I mentioned, I'm still doing more to
improve the code, mostly for correctness and improved keyboard support.
Depending on how busy things are for me, I may have a better version by
Monday morning.  If anybody wants to contribute other
concerns/complaints about either the current menu interfaces or my
changes to it, please do so soon.  In particular, what about FVWM-style
menus do people like (I've always much preferred MWM-style, but the
implementation of them is more broken so I've never been happy with
them).

Thanks,
Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Apr 16 07:59:46 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 16 Apr 1997 07:59:46 -0500 (CDT)
Received: from heaton.cl.cam.ac.uk (exim@heaton.cl.cam.ac.uk [128.232.32.11]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id HAA16357 for <fvwm-workers@hpc.uh.edu>; Wed, 16 Apr 1997 07:59:18 -0500 (CDT)
Received: from ivatt.cl.cam.ac.uk [128.232.0.114] (and1000)
	by heaton.cl.cam.ac.uk with smtp (Exim 1.59 #2)
	id 0wHUIP-00000E-00; Wed, 16 Apr 1997 13:58:46 +0100
Received: from and1000 by ivatt.cl.cam.ac.uk with local (Exim 0.55 #1)
	id E0wHUIJ-0006Uh-00; Wed, 16 Apr 1997 13:58:39 +0100
From: Austin Donnelly <Austin.Donnelly@cl.cam.ac.uk>
To: fvwm-workers@hpc.uh.edu
Subject: random manpage patch
Message-Id: <E0wHUIJ-0006Uh-00@ivatt.cl.cam.ac.uk>
Date: Wed, 16 Apr 1997 13:58:39 +0100
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

The patch is from karlheg@inetarena.com, and was reported via the
Debian bug tracking system.  It's probably worth fixing upstream :)

Austin
------------------------------------------------------------
OpaqueMoveSize percentage
		    Tells fvwm  the  maximum  size  window  with  which
		    opaque  window  movement  should be used.  The percentage
		    is percent of the total screen area.   With
-		    "OpaqueMove  0" all windows will be moved using the
+		    "OpaqueMoveSize 0" all windows will be moved using the
-		    traditional rubber-band outline.  With  "OpaqueMove
+		    traditional rubber-band outline. With "OpaqueMoveSize
		    100"  all  windows  will  be move as solid windows.
		    The default is "OpaqueMove 5", which  allows  small
		    windows  to  be moved in an opaque manner but large
		    windows are moved as rubber-bands.
------------------------------------------------------------
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Apr 16 19:29:52 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 16 Apr 1997 19:29:52 -0500 (CDT)
Received: from anduin.woodsoup.org (anduin.woodsoup.org [129.186.242.23]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id TAA07827 for <fvwm-workers@hpc.uh.edu>; Wed, 16 Apr 1997 19:29:45 -0500 (CDT)
Received: from localhost (vlewis@localhost) by anduin.woodsoup.org (8.8.5/8.7.3) with SMTP id TAA06900 for <fvwm-workers@hpc.uh.edu>; Wed, 16 Apr 1997 19:36:40 -0500 (CDT)
Date: Wed, 16 Apr 1997 19:36:39 -0500 (CDT)
From: Vasily Lewis <vlewis@woodsoup.org>
Reply-To: Vasily Lewis <vlewis@woodsoup.org>
To: fvwm-workers@hpc.uh.edu
Subject: wvwm-workers archive?
Message-ID: <Pine.NEB.3.95.970416193415.6897A-100000@anduin.woodsoup.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

	Is the fvwm-workers traffic archived anywhere (ala the 'fvwm'
list)?  I just joined the list and would like to catch up...

peace,
-Vasily Lewis
--
|========================_======___=========_____==[vlewis@woodsoup.org]=
|Its a damned poor mind | | /| / (_)__ ___/ / _ \__ _____ ___ ___ ____
|that can only think of | |/ |/ / / _ \/ _ / , _/ // / _ \/ _ \/ -_) __/
|one way to spell a word|__/|__/_/_//_/\_,_/_/|_|\_,_/_//_/_//_/\__/_/===


--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Apr 17 00:56:53 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 17 Apr 1997 00:56:53 -0500 (CDT)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id AAA14401; Thu, 17 Apr 1997 00:28:54 -0500 (CDT)
To: Vasily Lewis <vlewis@woodsoup.org>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: wvwm-workers archive?
References: <Pine.NEB.3.95.970416193415.6897A-100000@anduin.woodsoup.org>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 17 Apr 1997 00:28:53 -0500
In-Reply-To: Vasily Lewis's message of Wed, 16 Apr 1997 19:36:39 -0500 (CDT)
Message-ID: <ufapvvurze2.fsf@sina.hpc.uh.edu>
Lines: 13
X-Mailer: Gnus v5.4.45/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

>>>>> "VL" == Vasily Lewis <vlewis@woodsoup.org> writes:

VL> Is the fvwm-workers traffic archived anywhere (ala the 'fvwm' list)?  I
VL> just joined the list and would like to catch up...

I haven't made archives yet.  Most everything has been crossposted into the
main list; this one won't really get going until 2.1 comes out and the
development work continues here.

If you really want the archives, you can get them from the FTP or mail
servers.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Apr 17 03:30:03 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 17 Apr 1997 03:30:03 -0500 (CDT)
Received: from sunic.sunet.se (sunic.sunet.se [192.36.125.2]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id DAA18482 for <fvwm-workers@hpc.uh.edu>; Thu, 17 Apr 1997 03:29:57 -0500 (CDT)
Received: from delial.DoCS.UU.SE by sunic.sunet.se (8.7.5/2.03)
	id IAA17704; Thu, 17 Apr 1997 08:27:47 GMT
Received: by delial.DoCS.UU.SE (Sun-4/75, SunOS 4.1.1)
 with sendmail 5.61-bind 1.5+ida/ICU/DoCS id AA03230; Thu, 17 Apr 97 10:29:50 +0200
Date: Thu, 17 Apr 97 10:29:50 +0200
Message-Id: <9704170829.AA03230@delial.DoCS.UU.SE>
From: Bjorn Victor <Bjorn.Victor@DoCS.UU.SE>
To: fvwm-workers@hpc.uh.edu
Subject: Mini icons and title bars
Mime-Version: 1.0 (generated by tm-edit 7.101)
Content-Type: text/plain; charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

Hello, I hope this is the right forum for bug reports and patches for
Fvwm 2.0.45?  Anyway, here's two bug reports, one with a fix and one
without:

PROBLEM 1:
 WindowList and FvwmIconMan don't display Mini Icons for some windows.
DIAGNOSIS:
 These windows don't have title bars.  Fvwm doesn't read mini icons
 for windows without title bars.
SOLUTION:
 Patch AddWindow in add_window.c by moving the code that checks for
 and perhaps reads a mini icon to outside the conditional for the TITLE
 flag. 
NOTE:
 To make FvwmIconMan display mini icons on a black-and-white
 display, you need to patch it too.
PATCH:
*** add_window.c.~1~	Wed Jan 22 16:46:54 1997
--- add_window.c	Thu Apr 17 08:52:30 1997
***************
*** 532,537 ****
--- 532,539 ----
  	    tmp_win->right_w[i] = None;
  	}
        
+     }
+ 
  #ifdef MINI_ICONS
        if (tmp_win->mini_pixmap_file) {
  	tmp_win->mini_icon = CachePicture (dpy, Scr.Root, 
***************
*** 547,553 ****
  	tmp_win->mini_icon = NULL;
        }
  #endif
-     }
  
    if(tmp_win->flags & BORDER)
      {
--- 549,554 ----

PROBLEM 2:
 Title bars on windows without focus come out transparent on a
 black-and-white display under some circumstances.  Try Iconify on an
 iconified window without focus, and which doesn't get focus by Iconify.
DIAGNOSIS:
 This seems hairy, and I haven't had time to debug it completely.
WORK-AROUND:
 In SetBorder in borders.c, change the initialization of NewColor to
 True.  This fixes the problem with the title bars of non-sticky
 windows, but doesn't for sticky windows, and causes some update flaw
 for borders.
HELP:
 Yes please!

-- Bjorn Victor			Bjorn.Victor@DoCS.UU.SE
Dept. of Computer Systems	tel: +46 18 183169
Uppsala University		fax: +46 18 550225
Box 325				GSM: +46 70 7755768
S-751 05 Uppsala, SWEDEN
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Mon Apr 21 19:22:14 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 21 Apr 1997 19:22:14 -0500 (CDT)
Received: from methow.cs.washington.edu (methow.cs.washington.edu [128.95.1.169]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id TAA15490; Mon, 21 Apr 1997 19:22:06 -0500 (CDT)
Received: (gjb@localhost) by methow.cs.washington.edu (8.6.12/7.2ws+) id RAA00442; Mon, 21 Apr 1997 17:21:59 -0700
To: fvwm@hpc.uh.edu, fvwm-workers@hpc.uh.edu
Cc: Chuck Hines <chuck_hines@VNET.IBM.COM>
Subject: Animated Menus, Animated Moves, Improved Menus, and More!
From: Greg Badros <gjb@cs.washington.edu>
Date: 21 Apr 1997 17:21:58 -0700
Message-ID: <qrrenc33o0p.fsf@methow.cs.washington.edu>
Lines: 96
X-Mailer: Gnus v5.4.11/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

I spent the weekend rewriting the menu code for fvwm-2.0.45 to better
support the keyboard (improving on my earlier patch).  In the process I
added several other useful features.  The description of the patch
appears below.  The actual patch is available at:
<A HREF="
http://www.cs.washington.edu/homes/gjb/patches/fvwm-2.0.45-menus-animation-gjb.patch
"> patch </A>

To apply the patch, do something like

cd fvwm-2.0.45
patch -p1 <fvwm-2.0.45-menus-animation-gjb.patch

Look for *.rej files, then rebuild.  The description and patch are also
available on my web page under "Newer stuff."  I tested the changes and
applying the patch on a slackware-like Linux 2.0.29. The patch should
apply cleanly to an unmodified 2.0.45 tree.

Please cc: comments to me.  I read the fvwm-workers list regularly, but
I don't subscribe to the fvwm list currently.

Greg J. Badros
gjb@cs.washington.edu
Seattle, WA  USA
http://www.cs.washington.edu/homes/gjb


DESCRIPTION:
------------
This patch includes lots:

Added new commands:

  AnimatedMove -- works like move

  SetAnimation -- customizes how the animated moves (and menu movement) looks

  SetMenuDelay -- change how long to delay before popping up a submenu
                  when resting on a menu item (ala the famous win OS's menus)

  SetEnv       -- Allow setting of environment which processes started
                  by fvwm2 will inherit.  This uses "putenv" system call.

Changed commands:

  Move   -- added greater flexibility so you can give destination
positions as stuff like "w+5p" to mean current window position + 5
pixels or "-2" to mean its right edge should be 2% of the screen height
> from the bottom [works for horizonal, too, of course].  See new man page

  MenuStyle -- added "animated" qualifier, along with type "win" to
               emulate more closely the famous win OS's menus look and feel

  AddToMenu --  Menus titles take side-pixmaps between "@" (at) characters and
		side-pixmap background colors between "^" (caret) characters.  Also,
		substrings denoting regular pixmaps (between "%" characters) are removed
		even if that pixmap cannot be located; thus your menu still looks ok.  A
		warning is printed to stderr, instead.


Almost complete rewrite of menus code:
--------------------------------------
These new menus support the keyboard much better than before.  See the
improved man page.  They also can animate out of your way when at the
right edge of the screen.  Use animated menustyle and try it-- it's
easier to watch than explain.  Also now supported is a delay before
popping up child menus when you rest on a menu item.

Note that the animation and the menu delay require the "usleep"
(micro-second sleep) system call.  If you don't have it, "select" can
probably be contorted to do the right thing.  See the man page for
"select" for your OS.


Internal Changes
----------------
I reindent some places where the indentation was not uniform and
confusing.  I also changed a lot of #define-s to enum-s. Menu code is
*way* better now (though certainly could get even better-- in
particular, I didn't do anything specific to facilitate sticky menus).

Uses gperf to build "fvwm-command-hasher.c" which gets included by
functions.c.  Reworked functions.c to use a hash lookup on a built-in's
name instead of linear lookup.  Reduced my startup time by 15% or so.
You may need to give -DNO_GPERF if you have problems with this.


BUGS?
-----
Sure, there's gotta be plenty.  Email me at gjb@cs.washington.edu and let
me know.  In particular, send me a minimal startup file and descriptions
of what to do to see the problem.  Also send me your configure.h, I
suppose and tell me what platform you're working on.

USE AT YOUR OWN RISK!  I am not responsible for the use of, the misuse
of, or anything to do with this patch.
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Apr 22 03:55:21 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 22 Apr 1997 03:55:21 -0500 (CDT)
Received: from heaton.cl.cam.ac.uk (exim@heaton.cl.cam.ac.uk [128.232.32.11]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id DAA09905 for <fvwm-workers@hpc.uh.edu>; Tue, 22 Apr 1997 03:54:45 -0500 (CDT)
Received: from ivatt.cl.cam.ac.uk [128.232.0.114] (and1000)
	by heaton.cl.cam.ac.uk with smtp (Exim 1.59 #2)
	id 0wJbL8-0008Eu-00; Tue, 22 Apr 1997 09:54:18 +0100
Received: from and1000 by ivatt.cl.cam.ac.uk with local (Exim 0.55 #1)
	id E0wJbL2-0002BR-00; Tue, 22 Apr 1997 09:54:12 +0100
From: Austin Donnelly <Austin.Donnelly@cl.cam.ac.uk>
To: fvwm-workers@hpc.uh.edu
Subject: FvwmPager related feature suggestions
Message-Id: <E0wJbL2-0002BR-00@ivatt.cl.cam.ac.uk>
Date: Tue, 22 Apr 1997 09:54:12 +0100
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

A couple of feature requests from a Debian fvwm2 user.

Quick summary:

 o moving a window on-screen should update the pager version in real
   time like fvwm (version 1) used to.   [Ha!  Not likely!] :)

 o reverse case: moving a window with the pager moves on-screen in
   real time (maybe just want an outline).  Quite possible, no?

 o word wrapped window titles in the pager. (dead easy)


In my copious spare time (*smirk*) I may have a go at the last one of these.

What do people think about the plausability of the others?

Austin

------- start of forwarded message (RFC 934 encapsulation) -------
From: <karlheg@inetarena.com>
To: submit@bugs.debian.org
Subject: Bug#8954: fvwm2: FvwmPager doesnt update in realtime with window moves
Date: Tue, 22 Apr 1997 00:53:34 -0700

Package: fvwm2
Version: 2.0.45-BETA-3

The GWM++ panner updates in realtime when windows are moved on the
screen. If you move a window in its panner, the window moves on the
screen also.  I would like to see that in the FvwmPager, which I love
for its drag the window off the pager feature.

I also like the way the GWM++ panner word wraps window titles in the
panner window thumbnails.
------- end -------
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Apr 24 03:43:10 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 24 Apr 1997 03:43:10 -0500 (CDT)
Received: from iss.nus.sg (dragon.iss.nus.sg [137.132.247.20]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id DAA14507 for <fvwm-workers@hpc.uh.edu>; Thu, 24 Apr 1997 03:42:55 -0500 (CDT)
Received: from charlotte.iss.nus.sg by iss.nus.sg (SMI-8.6/SMI-SVR4)
	id QAA18293; Thu, 24 Apr 1997 16:50:15 +0800
Received: by charlotte.iss.nus.sg (SMI-8.6/SMI-SVR4)
	id QAA10526; Thu, 24 Apr 1997 16:50:13 +0800
Date: Thu, 24 Apr 1997 16:50:13 +0800
Message-Id: <199704240850.QAA10526@charlotte.iss.nus.sg>
From: Yusuf Goolamabbas <yusufg@iss.nus.sg>
To: fvwm-workers@hpc.uh.edu
Subject: FvwmButtons not working with 2.0.45 and Solaris 5.5.1
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

I compiled 2.0.45 under Solaris 5.5.1 and have a call to FvwmButtons
in my initfunction. It however fails to show up and ps -e cannot find
it

I have a similar problem with fvwm95-2.0.43a

The same config file when run by a colleague under Linux 1.2.13 has no
problem

Any suggestions, Cheers, Yusuf

-- 
Yusuf Goolamabbas                              yusufg@iss.nus.sg
Institute of Systems Science, Singapore        (0) 65-772-6931
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Fri Apr 25 08:34:16 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Fri, 25 Apr 1997 08:34:16 -0500 (CDT)
Received: from bae.bae.bellcore.com (bae.bae.bellcore.com [128.96.133.81]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id IAA06784; Fri, 25 Apr 1997 08:24:33 -0500 (CDT)
Received: from fork (fork.bae.bellcore.com) by bae.bae.bellcore.com with SMTP id AA03503
  (5.65c/IDA-1.4.4); Fri, 25 Apr 1997 09:22:41 -0400
Message-Id: <199704251322.AA03503@bae.bae.bellcore.com>
To: Greg Badros <gjb@cs.washington.edu>
Cc: fvwm@hpc.uh.edu, fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: Animated Menus, Animated Moves, Improved Menus, and More! 
In-Reply-To: Your message of 21 Apr 1997 17:21:58 -0700.
             <qrrenc33o0p.fsf@methow.cs.washington.edu> 
X-Face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Date: Fri, 25 Apr 1997 09:22:43 -0400
From: Dan Espen <dane@bae.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

Greg Badros <gjb@cs.washington.edu> writes:
> I spent the weekend rewriting the menu code for fvwm-2.0.45 to better
> support the keyboard (improving on my earlier patch).  In the process I
> added several other useful features.  The description of the patch
> appears below.  The actual patch is available at:
> <A HREF="
> http://www.cs.washington.edu/homes/gjb/patches/fvwm-2.0.45-menus-animation-gj
> b.patch
> "> patch </A>
> 
> To apply the patch, do something like
> 
> cd fvwm-2.0.45
> patch -p1 <fvwm-2.0.45-menus-animation-gjb.patch
> 
> Look for *.rej files, then rebuild.  The description and patch are also
> available on my web page under "Newer stuff."  I tested the changes and
> applying the patch on a slackware-like Linux 2.0.29. The patch should
> apply cleanly to an unmodified 2.0.45 tree.
> 
> Please cc: comments to me.  I read the fvwm-workers list regularly, but
> I don't subscribe to the fvwm list currently.

I tried this patch.

I used Solaris 2.4 on a Sun.

> Greg J. Badros
> gjb@cs.washington.edu
> Seattle, WA  USA
> http://www.cs.washington.edu/homes/gjb
> 
> 
> DESCRIPTION:
> ------------
> This patch includes lots:
> 
> Added new commands:
> 
>   AnimatedMove -- works like move
> 
>   SetAnimation -- customizes how the animated moves (and menu movement) looks
> 
>   SetMenuDelay -- change how long to delay before popping up a submenu
>                   when resting on a menu item (ala the famous win OS's menus)
> 
>   SetEnv       -- Allow setting of environment which processes started
>                   by fvwm2 will inherit.  This uses "putenv" system call.
> 
> Changed commands:
> 
>   Move   -- added greater flexibility so you can give destination
> positions as stuff like "w+5p" to mean current window position + 5
> pixels or "-2" to mean its right edge should be 2% of the screen height
> > from the bottom [works for horizonal, too, of course].  See new man page
> 
>   MenuStyle -- added "animated" qualifier, along with type "win" to
>                emulate more closely the famous win OS's menus look and feel
> 
>   AddToMenu --  Menus titles take side-pixmaps between "@" (at) characters an
> d
> 		side-pixmap background colors between "^" (caret) characters.  
> Also,
> 		substrings denoting regular pixmaps (between "%" characters) ar
> e removed
> 		even if that pixmap cannot be located; thus your menu still loo
> ks ok.  A
> 		warning is printed to stderr, instead.
> 
> 
> Almost complete rewrite of menus code:
> --------------------------------------
> These new menus support the keyboard much better than before.  See the
> improved man page.  They also can animate out of your way when at the
> right edge of the screen.  Use animated menustyle and try it-- it's
> easier to watch than explain.  Also now supported is a delay before
> popping up child menus when you rest on a menu item.

Keyboarding worked great.  Animation was neat.

The default animation backup and  then move forward effect didn't seem
to add anything for me, but I was using a  slow machine (Sparc 1+).  I
didn't experiment with other animation values.

I was torn between the reverse imaging effect from the "win" menus and
the 3d appearance from  the "mwm" menus.   I'm  not sure how  it would
look  but too bad I couldn't  use both 3d  appearance and the stronger
feedback from reverse imaging the current selection.

By creating menu styles of "fvwm", "mwm"  and "win", we sort of create
packages  of effects.  If  you want "auto-popup", you  can get it with
mwm or win.  If you want 3d you can get it with fvwm or mwm.  It might
be nice to just specify the effects wanted.

I was  able to fool  the animation logic  that tries to put  the mouse
pointer back where it  started by moving  the pointer out of  the left
side of a menu.  I had to go out of  my way to do  this, and don't see
how anyone could be disturbed by this.

> Note that the animation and the menu delay require the "usleep"
> (micro-second sleep) system call.  If you don't have it, "select" can
> probably be contorted to do the right thing.  See the man page for
> "select" for your OS.

I had linking problems with usleep.  I read that if I use Solaris 2.5,
usleep would have been  OK.  I changed  the code to  use select, and I
read that I could have used poll.  I guess that using usleep is OK.

> Internal Changes
> ----------------
> I reindent some places where the indentation was not uniform and
> confusing.  I also changed a lot of #define-s to enum-s. Menu code is
> *way* better now (though certainly could get even better-- in
> particular, I didn't do anything specific to facilitate sticky menus).
> 
> Uses gperf to build "fvwm-command-hasher.c" which gets included by
> functions.c.  Reworked functions.c to use a hash lookup on a built-in's
> name instead of linear lookup.  Reduced my startup time by 15% or so.
> You may need to give -DNO_GPERF if you have problems with this.
> 
> BUGS?
> -----
> Sure, there's gotta be plenty.  Email me at gjb@cs.washington.edu and let
> me know.  In particular, send me a minimal startup file and descriptions
> of what to do to see the problem.  Also send me your configure.h, I
> suppose and tell me what platform you're working on.

I  think this is   a great package  of changes.   I  don't see why  it
shouldn't be incorporated into a future release.

> USE AT YOUR OWN RISK!  I am not responsible for the use of, the misuse
> of, or anything to do with this patch.
> --

--
Dan Espen                                    Phone: (908) 699-5570
dane@bae.bellcore.com
444 Hoes Lane  Room RRC 1C-214
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Fri Apr 25 11:07:35 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Fri, 25 Apr 1997 11:07:35 -0500 (CDT)
Received: from pahtoo.cs.washington.edu (pahtoo.cs.washington.edu [128.95.1.47]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id LAA09730 for <fvwm-workers@hpc.uh.edu>; Fri, 25 Apr 1997 11:07:28 -0500 (CDT)
Received: (gjb@localhost) by pahtoo.cs.washington.edu (8.6.12/7.2ws+) id JAA25121; Fri, 25 Apr 1997 09:04:42 -0700
To: Dan Espen <dane@bae.bellcore.com>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: Animated Menus, Animated Moves, Improved Menus, and More!
References: <199704251322.AA03503@bae.bae.bellcore.com>
From: Greg Badros <gjb@cs.washington.edu>
Date: 25 Apr 1997 09:04:39 -0700
In-Reply-To: Dan Espen's message of Fri, 25 Apr 1997 09:22:43 -0400
Message-ID: <qrr4tcvjdgo.fsf@pahtoo.cs.washington.edu>
Lines: 40
X-Mailer: Gnus v5.4.11/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

Glad you liked it.  Please let me know if you notice any bugs or
anomalies in the menuing code.  There are a few left, but I've not spent
time yet to figure out how to reproduce them reliably.

Also, can you send be a diff -c (or -u) of the changes you made to use
select?

I like your suggestion about making the menu features orthogonal and
just picking which ones you want.  Unfortunately, the drawing code isn't
implemented as cleanly as you'd like to support such elegance.
Definitely separating behaviour from physical appearance would be useful
and not too hard to do (I almost did it, but decided there was enough
else in my changes to warrant not touching more code).  It'd be nice to
be able to independently decide whether you want

A) FVWM-look menus
B) MWM-look menus (slightly deeper shadow)
C) Win-look menus (reversed background)
D) A fourth (currently non-existing) mix of Win + MWM, perhaps

and also how you want your popup behaviour

A) Delay?
B) Location of mouse pointer?
C) Animation vs. Left menus

[Currently A and C are independent. B is tied to FVWM vs. MWM/Win]

You didn't mention the spiffy side pixmaps (like fvwm95).

Also, did you notice any faster startup?  Another performance
possibility is to use Quarks (X's string hashing mechanism) for all the
lookups;  gperf is a static, compile-time deal.  With runtime hashing
the lookups for menu names, complex-function names, etc. could all be
done in constant time instead of linearly.  I've not profiled fvwm to
see if it's worth it, but for the built-in functions, gperf made a
difference for me.

Thanks,
Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Apr 30 15:25:40 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 30 Apr 1997 15:25:40 -0500 (CDT)
Received: from uswgco3.uswc.uswest.com (uswgco3.uswest.com [206.196.133.82]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id PAA04409; Wed, 30 Apr 1997 15:22:51 -0500 (CDT)
Received: from egate2.mnet.uswest.com (egate2.mnet.uswest.com [151.117.138.135])
	by uswgco3.uswc.uswest.com (8.8.5/8.8.5) with ESMTP id OAA18636;
	Wed, 30 Apr 1997 14:22:16 -0600 (MDT)
Received: from smokey.ecte.uswc.uswest.com (smokey.ecte.uswc.uswest.com [151.116.109.68]) by egate2.mnet.uswest.com (8.7.1/8.7.1) with ESMTP id PAA02670; Wed, 30 Apr 1997 15:21:52 -0500 (CDT)
Received: from snakepit.ecte.uswc.uswest.com (snakepit.ecte.uswc.uswest.com [151.116.111.62]) by smokey.ecte.uswc.uswest.com (8.6.11/uswc-hub.950320) with ESMTP id OAA23830; Wed, 30 Apr 1997 14:21:35 -0600
Received: (from rjray@localhost) by snakepit.ecte.uswc.uswest.com (8.6.11/uswc-server.950313) id OAA25880; Wed, 30 Apr 1997 14:21:45 -0600
Date: Wed, 30 Apr 1997 14:21:45 -0600
From: "Randy J. Ray" <rjray@uswest.com>
Subject: X11::Fvwm 0.3 released
To: fvwm@hpc.uh.edu, fvwm-workers@hpc.uh.edu
Message-Id: <rjray-9703302021.AA00182415@snakepit.ecte.uswc.uswest.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.1

Wed Apr 30 14:18:55 MDT 1997

Version 0.3 of X11::Fvwm has been uploaded to PAUSE, and should propagate to
CPAN servers over the next few days.

This is the first beta release. Not all planned features are in, not all
data packet types are yet correctly identified and dissected. The interface
style and overall functionality are now fairly stable, and drastic changes
should be minimal from this point on. Changes in this version are listed below.
There are not a lot of changes, as 0.2 was pretty clean.

>From the README file for 0.3:

X11::Fvwm version 0.3 (beta 1)

WHAT IS IT?

This is a Perl 5 extension to simplify writing Fvwm2 modules in Perl 5. Not
only in Perl 5, but with either the Tk extension or the Xforms library as
your GUI choices!

This requires fvwm 2.0.45 or better, and perl 5.002 or better. It is
very highly recommended that you also install the latest version of Tk
(which is Tk400.202 as of this writing) or X11::Xforms (0.7 or better),
also available from CPAN.

WHAT DOES IT DO?

Fvwm2 has a very well-defined module API, to allow the brunt of non-core
window-manager work be done by external modules. X11::Fvwm is a layer over
this interface, allowing you to use Perl rather than C as the language for
developing these modules.

When fvwm launches a module, it sets up file descriptors for two-way
communication, and proceeds to occassionally broadcast data packets to
those modules that have asked to receive the given data type. The modules,
in turn, can send commands back to fvwm, including requests for more (and
more specific) data, operation on windows managed by fvwm, etc.

PROBLEMS/BUG REPORTS

Please send any reports of problems or bugs to randy@byz.org. I wouldn't
mind a short note to know that you're using this, just so I can justify its
continued development :-).

CREDITS AND LICENSES

This package is copyright (c) 1997 by Randy Ray (randy@byz.org) and may be
distributed under terms of the Artistic License used to cover Perl itself.
See the file Artistic in the distribution of Perl 5.002 or later for details
of copy and distribution terms. All rights reserved.

>From the Changes file for 0.3:

* Only major change: The use of asterisk (*) to specify directives to the
  getConfigInfo method has been deprecated in favor of the dash (-). You will
  currently be warned when getConfigInfo encounters the old style, but the
  first official release (whenever I reach a stable 1.0) will remove this
  entirely.

* Tentative support of X11::Xforms (version 0.7 or later) added.

* More demo scripts added.

* Some minor cleanup here and there. Little of this, as 0.2 was pretty stable.

* All *.pm have documentation (though some demos still need it).



--
===============================================================================
Randy J. Ray -- U S WEST Technologies IAD/CSS/DPDS         Phone: (303)595-2869
                Denver, CO                                     rjray@uswest.com
"It's not denial. I'm just very selective about the reality I accept." --Calvin
===============================================================================
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.


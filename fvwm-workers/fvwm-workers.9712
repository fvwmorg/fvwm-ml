From owner-fvwm-workers@hpc.uh.edu  Mon Dec  1 10:33:26 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 01 Dec 1997 10:33:26 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id KAA09988 for <fvwm-workers@hpc.uh.edu>; Mon, 1 Dec 1997 10:33:16 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id LAA09095
	for <fvwm-workers@hpc.uh.edu>; Mon, 1 Dec 1997 11:27:47 -0500 (EST)
Message-Id: <199712011627.LAA09095@castle.mk.bellcore.com>
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: The GNU configuring scheme 
In-reply-to: Your message of Wed, 26 Nov 1997 19:29:12 -0500.
             <Pine.LNX.3.96.971126183717.16473B-100000@hilbert.nyongwa.montreal.qc.ca> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Date: Mon, 01 Dec 1997 11:27:48 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Steve Robbins <steve@nyongwa.montreal.qc.ca> writes:
> On Mon, 24 Nov 1997, Dan Espen wrote:
> 
> Hi Dan,
> 
> Thanks for all the comments.  I've tried to answer your questions as best
> I could...
> 
> > Steve Robbins <steve@nyongwa.montreal.qc.ca> writes:
> > 
> > My non-standard  xpm   library location always   causes problems  with
> > "configure".  One way I've found to get around it is to do this:
> > 
> > --x-includes="/usr/openwin/include -I/usr/WI/include"
> 
> I'm guessing this means: normal X includes in /usr/openwin, and those for
> xpm are in /usr/WI/include ...

Right.

> > I then  looked into the "configure"  executables and found  that there
> > was a "--with-xpm-includes=", so I tried that and during make I got:
> 
> Yes; you should be able to use --with-xpm-includes=/usr/WI/include, and
> you do NOT have to give --x-includes directly; automake will find them.
>  
> > /opt/SUNWspro3.0/bin/cc -DHAVE_CONFIG_H -I. -I. -I.. \
> >   -I/usr/openwin/include  -g -c Picture.c
> > "Picture.c", line 33: cannot find include file: <X11/xpm.h>
> > 
> > I added the  backslash.  I think  the "--with-xpm-includes=" should be
> > documented and work.
> 
> Documented, it should be.  However, I think it *does* work.
> 
> Furthermore, configure goes to a lot of trouble to detect <X11/xpm.h> at
> *configure* time, and will not attempt to use XPM unless it can find BOTH
> the header and the actual link library.  I don't understand how you got
> this behaviour.  Did you do "make distclean"  or equivalent between
> configure runs?  Try my --with-xpm-includes suggestion above on a clean
> source tree, and see what happens. 

I tried  make distclean, followed by  configure,  followed by make.  I
get   the  same problem.   Nearest   I  can tell   the  problem is  in
"libs/Makefile.in" which contains:

INCLUDES = $(X_CFLAGS)

as contrasted with "fvwm/Makefile.in" which contains:

INCLUDES = -I$(top_srcdir)/libs $(X_CFLAGS) $(XPM_CFLAGS) \
	-DFVWMDIR=\"$(FVWMDIR)\" 

(The value for $(XPM_CFLAGS) never gets  into $(INCLUDES) and so never
makes it to the cc command line.)

> > What I would really like  is for "configure" to look  at all the "lib"
> > directories in my $LD_LIBRARY_PATH, replacing "lib" with "include" and
> > find my xpm include directory without me doing anything.
> 
> Well, I tried arguing a similar idea to the folks on the automake/autoconf
> mailing list, and got shot down.  In fact, their reasons were sound, so I
> think you have to live with the way things are.  

OK, but, I think they are missing  out on a  very common situation.  I
don't have "root" access, so I can't install  the xpm library anywhere
"configure" will find it.  The only  hint configure could possibly use
to find  the xpm stuff is to  find the "lib" using LD_LIBRARY_PATH and
then look for a parallel "include" directory.

Sounds to me  like  they have "sound"  reasons for  their software not
working.

> > > * I kept the tradition of installing all the modules and config file into
> > > .../lib/fvwm[2]; this is a bit at odds with modern standards: modules
> > > belong in libexec, and the config file in /etc or something; are there
> > > strong feelings about this?
> > 
> > Yes.   
> 
> Yes to which?  Change to "modules in libexec, config in /etc"?

Yes, to strong feelings about this.

> > I don't think  thats the tradition.   
> 
> How so?  That's how the distributed Imakefiles do things.  What defines
> "tradition" if not the traditional Imakefiles?

I thought when you   said "tradition" you were   referring to the  way
fvwm2 has been traditionally installed.

I think there are 2 subjects here, where the modules  go and where the
config file goes.  As  long as I can control   where they go,  I don't
care what the defaults are.

I can't install anything  in /etc.  I don't  have write access  to any
part of it.     Besides /etc is   local  to my   workstation.  Putting
something in /etc would make it invisible to others.

I don't know what "libexec" is.

I need a way of installing new  releases so that  I don't affect users
currently using fvwm2.  I currently install fvwm2 and its modules in a
place like <prefix>/fvwm-2.0.46/sun_os5.  I put  a shell called  fvwm2
in <prefix>/bin to figure out which version to run.

I  can't approximate this with  "configure"  unless I  set "prefix" to
something    that  includes the   fvwm2  release   number  and machine
architecture.

Even though I don't install fvwm2 so that the modules  are in my PATH,
somewhere in  the documentation, there  is an indication that  you can
tell what version of a  module you are running  buy  trying to run  it
from  the  command  line.   I think   modules should  default to being
installed in "--bindir".

> > The documented "--prefix" didn't work  for  me.  I then
> > checked the executables again and found I could use:
> 
> In what manner did it "not work"?  I use it all the time, and it most
> assuredly *does* work.

Well,  I meant it doesn't  work for me.  I  agree it  does work if you
accept what it does.  I really can't  replace fvwm2 while I have users
running it.   I therefore need to  install new releases in an isolated
area.  I use a shell called fvwm2 to figure out which release of fvwm2
to run.  Only the shell is in the users path.


> > --exec-prefix=/myplace/sun_os5
> > --mandir=/myotherplace/man
> > --libdir=/myplace/sun_os5
> > 
> > However that didn't work as I wanted it to because it went and created
> > 
> > /myplace/sun_os5/bin  (for the binaries)
> 
> Yes, that's the correct behaviour.  Notice that it is exec *PREFIX*!  The
> binaries go in ${exec_prefix}/bin.

Well, I can live with the extra "bin" at the end, but I would prefer a
way to do without it.

> > and /myplace/sun_os5/fvwm2 (for the modules) 
> 
> Again correct.  Fvwm, like many software packages that install multiple
> files into lib, creates a subdirectory (${libdir}/${packagename}) to hold
> them all.

I guess  I can live  with this  also,  but the  modules aren't  really
libraries.  If they were  libraries, I would  want them in "lib" not a
directory below.  To provide the necessary release isolation I want, I
will have to set --libdir=<prefix>/fvwm-2.0.46/sun_os5.

> > > * there used to be an option to install the stuff in the sample.fvwmrc
> > > directory; since _not_ installing is the common case, I removed this; 
> > > hence one has to install them by hand the first time
> > 
> > The  documentation refers the  user to this file.  I  just took a look
> > and it doesn't seem to say where  it is.  I  would be nice if the make
> > procedure updated the man pages with the full path name.
> 
> Yes, that's a good idea: the man pages can be generated to substitute the
> full pathnames for everything that gets installed: config file, modules,
> etc.
> 
> > I think this file should be installed, perhaps in the bin? 

I only picked "bin" because thats where I had it in the past.  As long
as its installed somewhere, its OK.

> It should definitely not be installed into bin: it is a configuration
> file.  
> 
> My preference is to put it with all the other config files: in /etc or
> ${prefix}/etc.  The latest Filesystem Hierarchy Standard
> (http://www.pathname.com/fhs/) suggests /etc/X11, which I also like. 

I read thru parts of this standard.  Thanks for the insight.

The document identifies /etc as host  specific, I don't think we don't
want to put anything concerning fvwm2 there.

I think this document suggests that fvwm2 belongs in /opt/fvwm2 with a
/opt/fvwm2/bin and an /opt/fvwm2/man.  I  have to disagree.  Even if I
could write    in that directory,   if I  did this  with  everything I
installed,  I would have  massive PATH and  MANPATH variables, plus no
release isolation.  Of course, I could create links to a common place,
and use /opt/fvwm-2.0.46,   but   the document doesn't   provide   any
guidance on where the links should be put.

I don't think this document adequately addresses software sharing on a
non-root basis.

> > > * is there a reason for separating modules into "modules" and "extras"?  
> I
> > > didn't touch the extras, so they have to be built the old way, which may
> > > be harder if Fvwm.tmpl is gone; is it worth the bother of autconfiguring
> > > them?  (It's on my list of things to do)
> > 
> > I  think   there are 2 reasons   for  a module  to  be  in  the extras
> > directory,  either its not   fully  debugged, or  the  install process
> > hasn't been fully worked out.
> 
> OK, but suppose I can work out the configuration bugs.  Then configure
> should at least set up the makefiles to allow them to optionally be built
> (i.e. "cd extras/foo; make") and optionally installed.
> 
> > > * there are way too many compile-time options: are they really needed, or
> > > can they be made run-time options?
> > 
> > I think you  are refering to  the options like "GRADIENT_BUTTONS".  
> 
> Yes, exactly.
> 
> > In my opinion they are compile time options because fvwm2 is trying to
> > stay true to its original design goal of being a small efficient window
> > manager. 
> 
> Yes, I suppose.  I should compile with them all off some day and see if it
> makes any difference.
> 
> > I personally compile in all the options, but I think it would be nice to
> > document the way to turn them off.
> > 
> > The compile option was "-g" by default.  I think it should be "-O"?
> 
> Configure attempts to detect whether the compiler accepts both "-g and -O" 
> together; if so, CFLAGS is set to "-g -O", ("-g -O2" for gcc) and
> otherwise just to "-g".  Apparently, configure feels that your compiler
> does not accept them both together.  If this is a bug, a note of it should
> be submitted to the autoconf maintainers.
> 
> The CFLAGS are set for debugging by default.  This is a GNU standard, and
> I think its a good one.  If you don't need debugging info, you can set
> CFLAGS=-O and *either* configure *or* compile time.

I'm  using Sun's compiler.  It  accepts "-g -O",  but not "-g -O2".  I
don't see  the logic in  "configure"  that would  accept "-g  -O"  for
anything but gcc.   I have to guess  that its a  bug.  When I  work on
fvwm2, I use "-g"  but I want the installed  copy to be "-O".  As long
as the override method is documented, I don't see a problem.

> 
> --
> Steve Robbins                              <steve@nyongwa.montreal.qc.ca>
> 

So far, I'm a  little concerned that the  "configure" approach  is not
quite  as robust as  the  "Imake" approach.  I'm  loosing the complete
control I used to have on where things are installed.  (The extra /bin
and /lib.)

So   far there is no      documentation how to   control things   like
"GRADIENT_BUTTONS".    I would guess  that  this  will involve editing
config.h?

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Mon Dec  1 10:34:00 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 01 Dec 1997 10:34:00 -0600 (CST)
Received: from smtp-gw.BayNetworks.COM (ns1.BayNetworks.COM [134.177.3.20]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id KAA10020 for <fvwm-workers@hpc.uh.edu>; Mon, 1 Dec 1997 10:33:51 -0600 (CST)
Received: from mailhost.BayNetworks.COM ([134.177.1.107] (may be forged))
	by smtp-gw.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id IAA03316
	for <fvwm-workers@hpc.uh.edu>; Mon, 1 Dec 1997 08:32:33 -0800 (PST)
Received: from pobox.engeast.BayNetworks.COM (pobox.corpeast.baynetworks.com [192.32.61.6])
	by mailhost.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id IAA10495
	for <fvwm-workers@hpc.uh.edu>; Mon, 1 Dec 1997 08:32:30 -0800 (PST)
Received: from lemming.engeast (lemming [192.32.138.39])
	by pobox.engeast.BayNetworks.COM (SMI-8.6/BNET-97/04/24-S) with SMTP
	id LAA01386; Mon, 1 Dec 1997 11:32:30 -0500
	for <fvwm-workers@hpc.uh.edu>
Received: by lemming.engeast (4.1/SMI-4.1)
	id AA07696; Mon, 1 Dec 97 11:32:30 EST
Date: Mon, 1 Dec 97 11:32:30 EST
Message-Id: <9712011632.AA07696@lemming.engeast>
From: "Paul D. Smith" <psmith@BayNetworks.COM>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: Fvwm Workers List <fvwm-workers@hpc.uh.edu>
Subject: Fvwm and exec'ing processes
X-Mailer: VM 6.32 under Emacs 20.2.1
Reply-To: psmith@BayNetworks.COM
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

I'm using FVWM 2.0.46, and I have a really annoying problem; I'm hoping
someone can explain it to me.  When exec'ing, fvwm doesn't always
properly preserve stty settings.

I'm running X11R6.3 fix2, pulled virgin from ftp.x.org and compiled and
installed myself, on a SunOS 4.1.4 system.  My shell is bash 2.01.1, but
I don't set ExecUseShell to that; it uses /bin/sh (Sun's sh).

My default stty settings when I login are:

  $ stty
  speed 38400 baud; line = 2;
  eol = M-^?; eol2 = M-^?; swtch = M-^?; start = <undef>; stop = <undef>;
  dsusp = <undef>; rprnt = <undef>; werase = <undef>; lnext = <undef>;
  flush = <undef>; status = <undef>;

When I start X, my initial xterms (actually rxvt's) all have these
settings.

When I start an rxvt from an fvwm2 menu like this:

  AddToMenu Local-Shells
  + "TEST-1" Exec exec rxvt

I keep my pre-existing stty settings, as you would expect; the new shell
says:

  $ stty
  speed 38400 baud; line = 2;
  erase = ^H; eol = M-^?; eol2 = M-^?; swtch = M-^?; start = <undef>;
  stop = <undef>; rprnt = <undef>; werase = <undef>; lnext = <undef>;
  flush = <undef>; status = <undef>;

But, if I invoke rxvt like this:

  AddToMenu Local-Shells
  + "TEST-2" Exec exec rxvt &

(note the added "&" to send it to the background here) then my stty
settings are wrong:

  $ stty
  speed 38400 baud; line = 2;
  eol = M-^?; eol2 = M-^?; swtch = M-^?; status = <undef>;

What's the story here?  Isn't the form I use in TEST-2 the right way to
invoke a new xterm without any extra processes hanging around?

I know that in 2.0.42 Exec was changed to implicitly do the exec for
you, then in 2.0.43 it was changed back.  AFAI (and the ChangeLog) Know,
it wasn't changed back again.

Note that the documentation is all still wrong in 2.0.46; the docs for
the Exec function still say you don't need the "exec" or the "&".  And
none of the examples of using Exec show the "exec" or "&".

So, what is the real, complete, correct way to get Fvwm 2.0.46 to invoke
a new xterm, without any extra processes, and preserving the tty
settings?

Can someone make a pass through fvwm.man and fix it up with the right
information in the description of Exec, and modify the examples which
use Exec to use it properly?  That would be a big help.

-- 
-------------------------------------------------------------------------------
 Paul D. Smith <psmith@baynetworks.com>         Network Management Development
 "Please remain calm...I may be mad, but I am a professional." --Mad Scientist
-------------------------------------------------------------------------------
     These are my opinions--Bay Networks takes no responsibility for them.
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  2 02:01:00 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 02 Dec 1997 02:01:00 -0600 (CST)
Received: from waldorf.informatik.uni-dortmund.de (waldorf.informatik.uni-dortmund.de [129.217.4.42]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id CAA27387 for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 02:00:52 -0600 (CST)
Received: from petty.informatik.uni-dortmund.de (petty.informatik.uni-dortmund.de [129.217.20.161]) by waldorf.informatik.uni-dortmund.de  with SMTP id JAA04323; Tue, 2 Dec 1997 09:00:30 +0100 (MET)
Received: by petty.informatik.uni-dortmund.de id JAA15189; Tue, 2 Dec 1997 09:00:29 +0100
To: Dan Espen <dane@mk.bellcore.com>
Cc: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: The GNU configuring scheme
References: <199712011627.LAA09095@castle.mk.bellcore.com>
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
From: Kai Grossjohann <grossjohann@charly.cs.uni-dortmund.de>
Date: 02 Dec 1997 09:00:28 +0100
In-Reply-To: Dan Espen's message of Mon, 01 Dec 1997 11:27:48 -0500
Message-ID: <vafk9do2mzn.fsf@petty.ls6.uni-do>
Lines: 45
X-Mailer: Gnus v5.5/Emacs 20.2
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> On Mon, 01 Dec 1997, Dan Espen said:

  Dan> [about --prefix not working]
  Dan> Well,  I meant it doesn't  work for me.  I  agree it  does work if you
  Dan> accept what it does.  I really can't  replace fvwm2 while I have users
  Dan> running it.   I therefore need to  install new releases in an isolated
  Dan> area.  I use a shell called fvwm2 to figure out which release of fvwm2
  Dan> to run.  Only the shell is in the users path.

  Dan> [about --exec-prefix]
  Dan> Well, I can live with the extra "bin" at the end, but I would prefer a
  Dan> way to do without it.

Well, if --prefix and --exec-prefix were to behave differently than
they do, this would mean that the configure scheme for fvwm would
behave differently than the configure scheme for any other program.
Surely, users would be very surprised in the future if they expected
the fvwm configure script to behave like any other GNU configure
script.

I think that to do what you want the exact directory layout does not
matter.  All that matters is that you get some directory layout that
works for the things you're trying to do.  I do agree with you that it
would mean some effort to switch over from the old layout to the new
one, but I think one person's problems in that area shouldn't have
influence on the general behavior of the GNU configure script for
fvwm.

I haven't installed fvwm with configure, yet.  But I have installed a
number of other programs with GNU configure.  I choose

    ./configure --prefix=/foo/VERSION --exec-prefix=/foo/VERSION/ARCH

and this works fine for me.  Another possibility would be

    ./configure --prefix=/foo/ARCH/VERSION

In both cases, you can have some script in some other bin directory
with DTRT.

kai
-- 
`A wizard.  A ----ing wizard.  I *hate* ----ing wizards!'  `Well,
don't ---- him, then,' one of his henchmen said, effortlessly
pronouncing a row of dashes.  (Terry Pratchett)
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  2 08:10:07 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 02 Dec 1997 08:10:07 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id IAA01410 for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 08:10:00 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id JAA06178
	for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 09:09:16 -0500 (EST)
Message-Id: <199712021409.JAA06178@castle.mk.bellcore.com>
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: The GNU configuring scheme 
In-reply-to: Your message of 02 Dec 1997 09:00:28 +0100.
             <vafk9do2mzn.fsf@petty.ls6.uni-do> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Date: Tue, 02 Dec 1997 09:09:18 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Kai Grossjohann <grossjohann@charly.cs.uni-dortmund.de> writes:
> >>>>> On Mon, 01 Dec 1997, Dan Espen said:
> 
>   Dan> [about --prefix not working]
>   Dan> Well,  I meant it doesn't  work for me.  I  agree it  does work if you
>   Dan> accept what it does.  I really can't  replace fvwm2 while I have users
>   Dan> running it.   I therefore need to  install new releases in an isolated
>   Dan> area.  I use a shell called fvwm2 to figure out which release of fvwm2
>   Dan> to run.  Only the shell is in the users path.
> 
>   Dan> [about --exec-prefix]
>   Dan> Well, I can live with the extra "bin" at the end, but I would prefer a
>   Dan> way to do without it.
> 
> Well, if --prefix and --exec-prefix were to behave differently than
> they do, this would mean that the configure scheme for fvwm would
> behave differently than the configure scheme for any other program.
> Surely, users would be very surprised in the future if they expected
> the fvwm configure script to behave like any other GNU configure
> script.
> 
> I think that to do what you want the exact directory layout does not
> matter.  All that matters is that you get some directory layout that
> works for the things you're trying to do.  I do agree with you that it
> would mean some effort to switch over from the old layout to the new
> one, but I think one person's problems in that area shouldn't have
> influence on the general behavior of the GNU configure script for
> fvwm.
> 
> I haven't installed fvwm with configure, yet.  But I have installed a
> number of other programs with GNU configure.  I choose
> 
>     ./configure --prefix=/foo/VERSION --exec-prefix=/foo/VERSION/ARCH
> 
> and this works fine for me.  Another possibility would be
> 
>     ./configure --prefix=/foo/ARCH/VERSION
> 
> In both cases, you can have some script in some other bin directory
> with DTRT.

Hmm, DTRT, have to admit, I had to look it up.

OK, I'm convinced.   I concede that consistency  in operation  is more
desirable   than  me being able   to  reproduce  my  current directory
structure.

> kai
> -- 
--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  2 11:21:58 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 02 Dec 1997 11:21:58 -0600 (CST)
Received: from thinkpad.velsoft.com (d2-2-99.rynex.dialup.ans.net [152.180.177.99]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id LAA05219 for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 11:21:47 -0600 (CST)
Received: from thinkpad.velsoft.com (localhost [127.0.0.1])
	by thinkpad.velsoft.com (8.8.7/8.8.7) with ESMTP id MAA01734
	for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 12:20:40 -0500
Message-Id: <199712021720.MAA01734@thinkpad.velsoft.com>
To: fvwm-workers@hpc.uh.edu
Subject: fvwm2 and iconboxes patch
Date: Tue, 02 Dec 1997 12:20:38 -0500
From: Andrew Veliath <veliaa@frontiernet.net>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Hello everyone,

I'm having a bit of trouble with the RedHat version of fvwm2.  They
added a *lot* of patches to it, but AFAIK I think it has to do with
the iconboxes patch, since I tried compiling original and it happened
just with that patch, but the one from the RedHat 5.0 SRPM.

It seems to somehow break my existing configuration with UseStyle, but
I did not debug it (not much time).

Pertinent rc code is here:
# Decor for mini title bar windows
AddToDecor "Small Window"
+ WindowFont SMALLWINDOWFONT
+ ButtonStyle 3 13 26x29@1 34x21@1 50x35@1 70x21@1 79x29@1 63x48@0 79x65@1 70x75@0 50x61@0 34x75@0 26x65@0 44x48@1 26x29@0
+ ButtonStyle 6 12 50x10@1 25x35@1 40x35@1 40x60@1 25x60@1 50x85@1 75x60@0 60x60@0 60x35@0 75x35@0 50x10@0 50x10@1
Style "Small Window" UseDecor "Small Window",MWMBorder,HandleWidth 5,BorderWidth 5

Style "XTerm"		UseStyle "Small Window",SloppyFocus,Icon xterm.xpm,HandleWidth 5
Style "FvwmConsole"	UseStyle "XTerm"


I seem to lose the small window for my xterms and rxvts.  If I can
debug it some time I'll post a patch.  The IconBoxes patch btw, is
nice otherwise though.

--
Regards,
Andrew Veliath
veliaa@frontiernet.net, veliaa@rpi.edu
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  2 12:27:38 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 02 Dec 1997 12:27:38 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id MAA06578 for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 12:27:26 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id NAA19861;
	Tue, 2 Dec 1997 13:26:06 -0500 (EST)
Message-Id: <199712021826.NAA19861@castle.mk.bellcore.com>
To: Andrew Veliath <veliaa@frontiernet.net>
cc: fvwm-workers@hpc.uh.edu
Subject: Re: fvwm2 and iconboxes patch 
In-reply-to: Your message of Tue, 02 Dec 1997 12:20:38 -0500.
             <199712021720.MAA01734@thinkpad.velsoft.com> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Date: Tue, 02 Dec 1997 13:26:06 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Andrew Veliath <veliaa@frontiernet.net> writes:
> Hello everyone,
> 
> I'm having a bit of trouble with the RedHat version of fvwm2.  They
> added a *lot* of patches to it, but AFAIK I think it has to do with
> the iconboxes patch, since I tried compiling original and it happened
> just with that patch, but the one from the RedHat 5.0 SRPM.
> 
> It seems to somehow break my existing configuration with UseStyle, but
> I did not debug it (not much time).
> 
> Pertinent rc code is here:
> # Decor for mini title bar windows
> AddToDecor "Small Window"
> + WindowFont SMALLWINDOWFONT
> + ButtonStyle 3 13 26x29@1 34x21@1 50x35@1 70x21@1 79x29@1 63x48@0 79x65@1 70
> x75@0 50x61@0 34x75@0 26x65@0 44x48@1 26x29@0
> + ButtonStyle 6 12 50x10@1 25x35@1 40x35@1 40x60@1 25x60@1 50x85@1 75x60@0 60
> x60@0 60x35@0 75x35@0 50x10@0 50x10@1
> Style "Small Window" UseDecor "Small Window",MWMBorder,HandleWidth 5,BorderWi
> dth 5
> 
> Style "XTerm"		UseStyle "Small Window",SloppyFocus,Icon xterm.xpm,Hand
> leWidth 5
> Style "FvwmConsole"	UseStyle "XTerm"
> 
> I seem to lose the small window for my xterms and rxvts.  If I can
> debug it some time I'll post a patch.  The IconBoxes patch btw, is
> nice otherwise though.

I can reproduce the problem,  although when I  looked at the code, the
cause  wasn't obvious.    I  hope to  get some  time  to look  at this
tonight.

Stay tuned.

> --
> Regards,
> Andrew Veliath
> veliaa@frontiernet.net, veliaa@rpi.edu
> --

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  2 13:02:36 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 02 Dec 1997 13:02:36 -0600 (CST)
Received: from thinkpad.velsoft.com (d1-4-219.rynex.dialup.ans.net [152.180.176.219]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id NAA07502 for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 13:02:21 -0600 (CST)
Received: from thinkpad.velsoft.com (veliaa@localhost [127.0.0.1])
	by thinkpad.velsoft.com (8.8.7/8.8.7) with ESMTP id OAA10193
	for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 14:00:44 -0500
Message-Id: <199712021900.OAA10193@thinkpad.velsoft.com>
To: fvwm-workers@hpc.uh.edu
Subject: small bug in stock fvwm 2.0.46:style.c:698
Date: Tue, 02 Dec 1997 14:00:42 -0500
From: Andrew Veliath <veliaa@frontiernet.net>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

-- in the parsing code for UseStyle (otherwise for a quoted word the
error message will be one character better).

Doesn't affect operation, just the error message.

Untested, but should be okay:

*** style.c.orig	Tue Dec  2 13:54:44 1997
--- style.c	Tue Dec  2 13:58:41 1997
***************
*** 695,701 ****
              {
                tmp=safemalloc(500);
                strcat(tmp,"UseStyle: ");
!               strncat(tmp,restofline-len,len);
                strcat(tmp," style not found!");
                fvwm_msg(ERR,"ProcessNewStyle",tmp);
                free(tmp);
--- 695,701 ----
              {
                tmp=safemalloc(500);
                strcat(tmp,"UseStyle: ");
!               strncat(tmp,restofline-len-(is_quoted?1:0),len);
                strcat(tmp," style not found!");
                fvwm_msg(ERR,"ProcessNewStyle",tmp);
                free(tmp);

--
Regards,
Andrew Veliath
veliaa@frontiernet.net, veliaa@rpi.edu
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  2 22:05:49 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 02 Dec 1997 22:05:49 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id WAA16953 for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 22:05:42 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id XAA27514
	for <fvwm-workers@hpc.uh.edu>; Tue, 2 Dec 1997 23:04:59 -0500 (EST)
Message-Id: <199712030404.XAA27514@castle.mk.bellcore.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: fvwm2 and iconboxes patch 
In-reply-to: Your message of Tue, 02 Dec 1997 12:20:38 -0500.
             <199712021720.MAA01734@thinkpad.velsoft.com> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Date: Tue, 02 Dec 1997 23:04:59 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Andrew Veliath <veliaa@frontiernet.net> writes:
> Hello everyone,
> 
> I'm having a bit of trouble with the RedHat version of fvwm2.  They
> added a *lot* of patches to it, but AFAIK I think it has to do with
> the iconboxes patch, since I tried compiling original and it happened
> just with that patch, but the one from the RedHat 5.0 SRPM.
> 
> It seems to somehow break my existing configuration with UseStyle, but
> I did not debug it (not much time).
> 
> I seem to lose the small window for my xterms and rxvts.  If I can
> debug it some time I'll post a patch.  The IconBoxes patch btw, is
> nice otherwise though.

The iconboxes patch made the UseStyle command not work.
Here is a patch to the iconboxes patch to fix the problem:

*** fvwm/style.c.orig   Tue Dec  2 22:47:23 1997
--- fvwm/style.c        Tue Dec  2 22:53:55 1997
***************
*** 723,730 ****
--- 723,733 ----
              for ( nptr = Scr.TheList; nptr; nptr = nptr->next ) {
                if (!mystrncasecmp(restofline,nptr->name,len)) { /* match style\
 */
                  if (!hit) {             /* first match */
+                   char *save_name;      /* place to save name */
+                   save_name = tname.name; /* save the name */
                    memcpy(&tname, nptr, sizeof(name_list)); /* copy everything\
 */
                    tname.next = 0;       /* except the next pointer */
+                   tname.name = save_name; /* and the name */
                    hit = 1;              /* set not first match */
                  } else {                /* subsequent match */
                    tname.off_flags     |= nptr->off_flags;




> --
> Regards,
> Andrew Veliath
> veliaa@frontiernet.net, veliaa@rpi.edu

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Mon Dec  8 01:21:15 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 08 Dec 1997 01:21:15 -0600 (CST)
Received: from Athena.McRCIM.McGill.EDU (root@Athena.McRCIM.McGill.EDU [132.206.4.20]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id BAA06706 for <fvwm-workers@hpc.uh.edu>; Mon, 8 Dec 1997 01:21:07 -0600 (CST)
Received: from Chart.McRCIM.McGill.EDU (uucp@Chart.McRCIM.McGill.EDU [132.206.4.7]) by 7528 on Athena.McRCIM.McGill.EDU (8.8.5) with ESMTP id CAA07528 for <hpc.uh.edu!fvwm-workers>; Mon, 8 Dec 1997 02:20:51 -0500 (EST)
Received: from hilbert.UUCP (uucp@localhost) by 22588 on Chart.McRCIM.McGill.EDU (8.8.5) with UUCP id CAA22588 for hpc.uh.edu!fvwm-workers; Mon, 8 Dec 1997 02:20:49 -0500 (EST)
Received: from localhost by hilbert.nyongwa.montreal.qc.ca
	via sendmail with smtp
	id <m0xexGE-0000wHC@hilbert.nyongwa.montreal.qc.ca>
	for <fvwm-workers@hpc.uh.edu>; Mon, 8 Dec 1997 02:05:46 -0500 (EST)
	(Smail-3.2.0.95 1997-May-7 #1 built 1997-May-25)
Date: Mon, 8 Dec 1997 02:05:43 -0500 (EST)
From: Steve Robbins <steve@nyongwa.montreal.qc.ca>
Reply-To: Steve Robbins <steve@nyongwa.montreal.qc.ca>
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: The GNU configuring scheme 
In-Reply-To: <199712011627.LAA09095@castle.mk.bellcore.com>
Message-ID: <Pine.LNX.3.96.971207234428.18926C-100000@hilbert.nyongwa.montreal.qc.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


The following is rather long.  To summarise: a new version of
autoconfigured fvwm will appear on my web site tonight with the following
bug fixes:

* FVWMDIR is now ${libexecdir}/fvwm2
* CFLAGS fixed in libs subdirectory, so Xpm includes will be found
* all the configuration options are documented

Some questions posed in the message below:

* Should the modules actually be in a directory with the full FVWM
version attached; i.e. ${libexecdir}/fvwm-2.0.46?

* Should the runtime config file (system.fvwmrc) be located in
${sysconfdir}; i.e. ${prefix}/etc?

* Should any attempt at autoconfiguring the extras be made, or should they
be distributed separately.  IMHO, if they are not maintained by the fvwm2
author, it makes some sense to leave them out of the main package.
Particularly if no attempt is made to have them compile and work with each
release.


On Mon, 1 Dec 1997, Dan Espen wrote:
> Steve Robbins <steve@nyongwa.montreal.qc.ca> writes:

> > > I added the  backslash.  I think  the "--with-xpm-includes=" should be
> > > documented and work.

[ ... ]

> I tried  make distclean, followed by  configure,  followed by make.  I
> get   the  same problem.   Nearest   I  can tell   the  problem is  in
> "libs/Makefile.in" which contains:
> 
> INCLUDES = $(X_CFLAGS)
> 
> as contrasted with "fvwm/Makefile.in" which contains:
> 
> INCLUDES = -I$(top_srcdir)/libs $(X_CFLAGS) $(XPM_CFLAGS) \
> 	-DFVWMDIR=\"$(FVWMDIR)\" 
> 
> (The value for $(XPM_CFLAGS) never gets  into $(INCLUDES) and so never
> makes it to the cc command line.)

Absolutely correct, thank you.  All my machines with Xpm have it in the
standard gcc paths, so I failed to find this. 

I have fixed this, and added a note (INSTALL.fvwm) on all fvwm-specific
configuration options.  In particular, --with-xpm-includes is now
documented. 
 
> > > What I would really like  is for "configure" to look  at all the "lib"
> > > directories in my $LD_LIBRARY_PATH, replacing "lib" with "include" and
> > > find my xpm include directory without me doing anything.
> > 
> > Well, I tried arguing a similar idea to the folks on the automake/autoconf
> > mailing list, and got shot down.  In fact, their reasons were sound, so I
> > think you have to live with the way things are.  
> 
> OK, but, I think they are missing  out on a  very common situation.  I
> don't have "root" access, so I can't install  the xpm library anywhere
> "configure" will find it.  

Having a library installed somewhere that the compiler won't usually look
is indeed a *very* common situation, even for folks that have root.  That
is precisely the reason for the "--with-libxpm=PATH" and
"--with-xpm-includes=DIR" options. 

> The only hint configure could possibly use to find the xpm stuff is to
> find the "lib" using LD_LIBRARY_PATH and then look for a parallel
> "include" directory. 

This is not a general solution.  

First of all, there is no reason to assume the installer has
LD_LIBRARY_PATH set when compiling.  Indeed, I think this it is an
exceedingly bad idea to do so (sunos, for one, demands that
LD_LIBRARY_PATH be set at runtime also, which is a royal pain when moving
binaries around).  Also, XPM may be a static rather than shared library,
and hence may not appear in LD_LIBRARY_PATH.  Finally, even if libxpm.so
*does* appear there, there is no reason to assume that the include file
lives in a directory with lib->include. 

> I think there are 2 subjects here, where the modules  go and where the
> config file goes. 

Correct.  Modules are now installed into ${libexec}/fvwm2.  For the
moment, the config file must also go there.  It is a small change to the
source code of fvwm/read.c to look for the config file elsewhere.  If
there is consensus (i.e. no dissent on the list) I will make that change
shortly.

> As long as I can control where they go, I don't care what the defaults
> are. 
>
> I can't install anything  in /etc.  I don't  have write access  to any
> part of it.     Besides /etc is   local  to my   workstation.  Putting
> something in /etc would make it invisible to others.

OK, let's consider for the moment the case of the admin installing FVWM
systemwide.  I'll deal with non-root installs at the end.
 
> I don't know what "libexec" is.

`libexecdir'
     The directory for installing executable programs to be run by other
     programs rather than by users.  This directory name is derived
     at compile time as ${prefix}/libexec.  It will normally be
     `/usr/local/libexec'.

> I need a way of installing new  releases so that  I don't affect users
> currently using fvwm2.  I currently install fvwm2 and its modules in a
> place like <prefix>/fvwm-2.0.46/sun_os5.  I put  a shell called  fvwm2
> in <prefix>/bin to figure out which version to run.
> 
> I  can't approximate this with  "configure"  unless I  set "prefix" to
> something    that  includes the   fvwm2  release   number  and machine
> architecture.

Let's leave aside the multiple-architecture problem for a moment, and deal
with multiple versions of FVWM.  

The problem is then that the modules always get installed into the same
directory, namely ${libexecdir}/fvwm2.  One solution to this that I like,
is to use the full package+version string for the directory name.  So it
would be, for example, ${libexecdir}/fvwm-2.0.46.

> Even though I don't install fvwm2 so that the modules  are in my PATH,
> somewhere in  the documentation, there  is an indication that  you can
> tell what version of a  module you are running  buy  trying to run  it
> from  the  command  line.   I think   modules should  default to being
> installed in "--bindir".

I disagree; ${bindir} is for programs that users normally run.  If I try
executing the modules, I just get things like:

	FvwmAudio Version 2.0.46 should only be executed by fvwm!
	FvwmAuto can use one to three arguments.
	Wanted argc == 6. Got 1
	FvwmTile: module should be executed by fvwm2 only

Since they are only to be executed by the program fvwm, clearly they
belong in ${libexecdir}.  If it is desired that users determine the
version number, they can be instructed to type the full pathname at the
command prompt: "/usr/local/libexec/fvwm-2.0.46/FvwmAuto".
 
> > > and /myplace/sun_os5/fvwm2 (for the modules) 
> > 
> > Again correct.  Fvwm, like many software packages that install multiple
> > files into lib, creates a subdirectory (${libdir}/${packagename}) to hold
> > them all.
> 
> I guess  I can live  with this  also,  but the  modules aren't  really
> libraries.

They aren't libraries, but traditionally the meaning of "/usr/lib" (and
"/usr/local/lib") got overloaded.  The "libexec" dir was introduced
precisely to get these sort of non-library files out of "lib".

> If they were libraries, I would want them in "lib" not a directory
> below. 

It's a matter of taste.  For packages that install "several" files, (for
some definition of "several") into ${libdir} (or ${libexecdir}) it has
become customary for them to create their own subdirectory.  Since these
pathnames are typically compiled in, it is no great harm, usually. 

> > > > * there used to be an option to install the stuff in the sample.fvwmrc
> > > > directory; since _not_ installing is the common case, I removed this; 
> > > > hence one has to install them by hand the first time
> > > 
> > > The  documentation refers the  user to this file.  I  just took a look
> > > and it doesn't seem to say where  it is.  I  would be nice if the make
> > > procedure updated the man pages with the full path name.
> > 
> > Yes, that's a good idea: the man pages can be generated to substitute the
> > full pathnames for everything that gets installed: config file, modules,
> > etc.
> > 
> > > I think this file should be installed, perhaps in the bin? 
> 
> I only picked "bin" because thats where I had it in the past.  As long
> as its installed somewhere, its OK.
> 
> > It should definitely not be installed into bin: it is a configuration
> > file.  
> > 
> > My preference is to put it with all the other config files: in /etc or
> > ${prefix}/etc.  The latest Filesystem Hierarchy Standard
> > (http://www.pathname.com/fhs/) suggests /etc/X11, which I also like. 
> 
> I read thru parts of this standard.  Thanks for the insight.
> 
> The document identifies /etc as host  specific, I don't think we don't
> want to put anything concerning fvwm2 there.

In fact, you *DO* want fvwm to look for it in /etc (or ${sysconfdir},
a.k.a. ${prefix}/etc, for autoconfigured packages).  This gives the
installer more flexibility.  If there is a config file good for multiple
machines, you can stuff it into a shared directory, and make a symlink
from /etc.  On the other hand, if one or more machines have a unique
setup, they can have their own config file in /etc.  The code in fvwm is
simple: just look in /etc, and assume the admin sorted things out. 

> I think this document suggests that fvwm2 belongs in /opt/fvwm2 with a
> /opt/fvwm2/bin and an /opt/fvwm2/man.

This is just one alternative.  It is not a good one, for reasons [omitted]
you pointed out.  The more common alternative is using
/usr/local/{bin,man,lib,libexec,etc}.  This is eactly what autoconfig
defaults to, and you can even specify another prefix, if you don't like
"/usr/local".  Perhaps some people do use "/opt" as the prefix. 

> I don't think this document adequately addresses software sharing on a
> non-root basis.

Right; it is intended for folks building OS releases.  Secondarily, it is
useful to people engineering packages (such as fvwm) as a guide to what
directories ought to be used.  

For present purposes, I pointed to it for a rationale for the autoconf
people's division of files into ${bindir}, ${libdir}, etc.  Once these
issues are understood, it is easy see how to deal with the non-root
install, by setting configure flags.

> > > > * there are way too many compile-time options: are they really needed, or
> > > > can they be made run-time options?
> > 
> > > In my opinion they are compile time options because fvwm2 is trying to
> > > stay true to its original design goal of being a small efficient window
> > > manager. 
> > 
> > Yes, I suppose.  I should compile with them all off some day and see if it
> > makes any difference.
> > 
> > > I personally compile in all the options, but I think it would be nice to
> > > document the way to turn them off.

Good idea; I cut & pasted the info out of the old configure.h file into
INSTALL.fvwm.

> > > The compile option was "-g" by default.  I think it should be "-O"?
> > 
> > Configure attempts to detect whether the compiler accepts both "-g and -O" 
> > together; if so, CFLAGS is set to "-g -O", ("-g -O2" for gcc) and
> > otherwise just to "-g".  Apparently, configure feels that your compiler
> > does not accept them both together.  If this is a bug, a note of it should
> > be submitted to the autoconf maintainers.
> > 
> > The CFLAGS are set for debugging by default.  This is a GNU standard, and
> > I think its a good one.  If you don't need debugging info, you can set
> > CFLAGS=-O and *either* configure *or* compile time.
> 
> I'm  using Sun's compiler.  It  accepts "-g -O",  but not "-g -O2".  I
> don't see  the logic in  "configure"  that would  accept "-g  -O"  for
> anything but gcc.   I have to guess  that its a  bug.  When I  work on
> fvwm2, I use "-g"  but I want the installed  copy to be "-O".  As long
> as the override method is documented, I don't see a problem.

Hmm ... I don't see that it is explicitly documented.  The fact is,
however, you are able to override CFLAGS on the makefile command line, as
always: 

	make CFLAGS="..."
 
> So far, I'm a  little concerned that the  "configure" approach  is not
> quite  as robust as  the  "Imake" approach.  I'm  loosing the complete
> control I used to have on where things are installed.  (The extra /bin
> and /lib.)

No, complete control is still there; see the output of "./configure
--help" for a complete list of options.  You can individually specify
${bindir} for the fvwm binary, ${libexecdir} for the modules, and
${sysconfdir} for the config file (although it is currently still in the
modules directory). 

For a typical sitewide install, one can specify just the --prefix, and
have everything else come out right.  Sites with multiple architectures
often use automounts, so that "/usr/local/bin" maps to the correct place
automatically.  These people can also just specify --prefix. 

For sites with multiple architectures, not using automounting, I suppose
they must use something icky like /usr/local/{architecture}/bin or
/usr/local/bin/{architecture} for binaries.  The former is easy to deal
with by specifying both --prefix and --exec-prefix, since both ${bindir}
and ${libexecdir} use the exec prefix.  For the latter style, you'd
probably have to specify --bindir and --libexecdir explicitly. 

For non-root installs where architecture is not a problem, you can simply
configure with --prefix=${HOME}, which installs into ~/bin and ~/libexec.
If multiple architectures pose a problem, you'd again need to resort to
specifying --bindir and --libexecdir separately.
 
> So   far there is no      documentation how to   control things   like
> "GRADIENT_BUTTONS".    I would guess  that  this  will involve editing
> config.h?

The documentation is there now; and no, it doesn't involve any editing.
You ought not to even *have* a config.h file!

--
Steve Robbins                              <steve@nyongwa.montreal.qc.ca>

Don't play cards with the Devil.  He'll deal you an awful hand.



--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Mon Dec  8 01:55:41 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 08 Dec 1997 01:55:41 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id BAA07025; Mon, 8 Dec 1997 01:55:34 -0600 (CST)
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: The GNU configuring scheme
References: <Pine.LNX.3.96.971207234428.18926C-100000@hilbert.nyongwa.montreal.qc.ca>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 08 Dec 1997 01:55:34 -0600
In-Reply-To: Steve Robbins's message of Mon, 8 Dec 1997 02:05:43 -0500 (EST)
Message-ID: <ufau3cks1zd.fsf@sina.hpc.uh.edu>
Lines: 66
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "SR" == Steve Robbins <steve@nyongwa.montreal.qc.ca> writes:

SR> * Should the modules actually be in a directory with the full FVWM
SR> version attached; i.e. ${libexecdir}/fvwm-2.0.46?

I see no reason why this would not be a good idea.  Version skew can easily
crop up, and when we get past 2.1 there will be many more sites which want
to make multiple versions available at the same time.

You might perhaps consider fvwm/2.0.46, though.  Many packages do this
(i.e. emacs, cf /usr/share/emacs/19.34).

SR> * Should the runtime config file (system.fvwmrc) be located in
SR> ${sysconfdir}; i.e. ${prefix}/etc?

I think so.  What are the alternatives?

SR> IMHO, if they are not maintained by the fvwm2 author, it makes some
SR> sense to leave them out of the main package.

Well, that's not necessarily a great assumption.  There's generally enough
warning before a release so that extras authors can get working versions of
their packages in before the release happens.  Plus given Chuck's free time
status, I expect that many things will end up not being maintained by him
but in the package anyway (as more folks contribute modules that Chuck
doesn't poke around in).

SR> The problem is then that the modules always get installed into the same
SR> directory, namely ${libexecdir}/fvwm2.  One solution to this that I
SR> like, is to use the full package+version string for the directory name.
SR> So it would be, for example, ${libexecdir}/fvwm-2.0.46.

Another solution is the one that Amanda (the backup suite) takes; it lets
you prepend version numbers to its subsidiary programs.  I like that much
less.  (And I rarely worry about 14 character filesystems.)

I used to think libexec was annoying, bur after working with packages that
have many subsidiary executables that aren't for human use I've grown to
rely on it.

[don't know who wrote this one; its lost in the quoting]
>> > > The compile option was "-g" by default.  I think it should be "-O"?

Not as long as the release is labeled beta.  Although I must admit I've
never understood the reason why it's called beta; it seems to be as stable
as anything else that's being released.

>> So far, I'm a little concerned that the "configure" approach is not
>> quite as robust as the "Imake" approach.  I'm loosing the complete
>> control I used to have on where things are installed.  (The extra /bin
>> and /lib.)

Robustness and control are two very different things.  After dealing
endlessly with broken vendor imake config files, autoconf (for all its
complexity) is much easier to handle.

SR> You ought not to even *have* a config.h file!

I do think this is a worthy goal.  IMHO, the whole autoconf operation is an
incredibly good idea.  I'm not certain that I'd advocate it for 2.1,
though, but then it should depend on when 2.1 will be.  It does have one
large advantage in that Chuck doesn't have to maintain it (assuming Steve
wants to continue to do so) so that's one less thing he has to worry
about.  I'm all for making things easier for Chuck.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Mon Dec  8 17:54:12 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Mon, 08 Dec 1997 17:54:12 -0600 (CST)
Received: from mercury.elmailer.net (mercury.elmailer.net [195.224.76.4]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id RAA25189 for <fvwm-workers@hpc.uh.edu>; Mon, 8 Dec 1997 17:54:01 -0600 (CST)
Received: by mercury.elmailer.net with ESMTP
    from sfere.greenend.org.uk (sfere.greenend.org.uk [195.224.38.1])
    id XAA04620 for <fvwm-workers@hpc.uh.edu> (2.3.6-8.8.7/3.1.25);
    Mon, 8 Dec 1997 23:51:44 GMT
Received: by sfere.greenend.org.uk with ESMTP
          from valour.greenend.org.uk (valour.greenend.org.uk [195.224.38.2])
          id AAA05673 for <fvwm-workers@hpc.uh.edu>
          (2.1.1h-8.8.5/2.1b-greenend-with-news); Tue, 9 Dec 1997 00:01:30 GMT
Received: by valour.greenend.org.uk
	id m0xfD7A-000qEKC
	(Debian Smail-3.2 1996-Jul-4 #2); Tue, 9 Dec 1997 00:01:28 +0000 (GMT)
Message-Id: <m0xfD7A-000qEKC@valour.greenend.org.uk>
Date: Tue, 9 Dec 1997 00:01:28 +0000 (GMT)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
From: Austin Donnelly <austin@greenend.org.uk>
To: fvwm-workers@hpc.uh.edu
Subject: CursorMove fix
X-Mailer: VM 6.34 under Emacs 19.34.1
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

CursorMove uses the standard "GetTwoArguments" function to read the two
integer args it needs.  The GetTwoArguments() function make some attempt
to process the 'p' convention, where something like:

  CursorMove 10 10

means move 10 percent of the screen, while

  CursorMove 10p 10p

means move 10 pixels.

Unfortunately, it doesn't quite do its job right: it won't let you mix
pixels and percentages.

Because it does two sscanf()s, if the first succeeds then it never
gets to look at the second, which has support for the 'p' stuff.  This
happens if you say something like:

  CursorMove 0 10p

since sscanf("0 10p", "%d %d", &a, &b) is quite happy to parse this.

I've patched this to only do a single sscanf(), and interpret the
return code to see how much was correctly parsed.

I've also updated the manpage to include the 'p' syntax in its
description of the CursorMove command, and added some checking of
GetTwoArguments()'s return code to movecursor().

I notice that GetOneArgument() uses two sscanf()s as well, but I
havn't thought too hard about when that might fail, so I've left it
alone.

Hope this helps,
Austin
------------------------------------------------------------
--- builtins.c~	Wed Aug 20 00:41:27 1997
+++ builtins.c	Mon Dec  8 23:28:54 1997
@@ -617,6 +617,11 @@
   int val1, val2, val1_unit,val2_unit,n;
 
   n = GetTwoArguments(action, &val1, &val2, &val1_unit, &val2_unit);
+  if (n != 2)
+  {
+    fvwm_msg(ERR, "movecursor", "CursorMove needs 2 arguments");
+    return;
+  }
 
   XQueryPointer( dpy, Scr.Root, &JunkRoot, &JunkChild,
                  &x,&y,&JunkX, &JunkY, &JunkMask);
--- fvwm2.man~	Sun Aug 24 19:11:40 1997
+++ fvwm2.man	Mon Dec  8 23:40:49 1997
@@ -864,9 +864,12 @@
 Moves the mouse pointer by \fIhorizontal\fP pages in the X direction
 and \fIvertical\fP pages in the Y direction.  Either or both entries
 may be negative.  Both horizontal and vertical values are expressed in
-percent of pages, so "CursorMove 100 100" means to move down and left
-by one full page.  "CursorMove 50 25" means to move left half a page
-and down a quarter of a page.  The CursorMove function should not be
+percent of pages, so "CursorMove 100 100" means to move down and right
+by one full page.  "CursorMove 50 25" means to move right half a page
+and down a quarter of a page.  Alternatively, the distance can be
+specified in pixels by appending a 'p' to the horizontal and/or vertical
+specification.  For example "CursorMove -10p -10p" means move ten
+pixels up and ten pixels left.  The CursorMove function should not be
 called from pop-up menus.
 
 .IP "CursorStyle \fIcontext cursornum\fP"
--- misc.c~	Tue Jun 24 15:01:39 1997
+++ misc.c	Mon Dec  8 23:32:58 1997
@@ -392,21 +392,18 @@
   *val1_unit = Scr.MyDisplayWidth;
   *val2_unit = Scr.MyDisplayHeight;
 
-  n = sscanf(action,"%d %d", val1, val2);
-  if(n == 2)
-    return 2;
-
   c1 = 's';
   c2 = 's';
   n = sscanf(action,"%d%c %d%c", val1, &c1, val2, &c2);
 
-  if(n != 4)
-    return 0;
-  
+  if(n<3)
+    return 0;  /* didn't get the second number */
+
   if((c1 == 'p')||(c1 == 'P'))
     *val1_unit = 100;
 
-  if((c2 == 'p')||(c2 == 'P'))
+  /* if n==4 then c2 is valid, so take account of it */
+  if((n==4) && ((c2 == 'p')||(c2 == 'P')))
     *val2_unit = 100;
 
   return 2;
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  9 08:51:55 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 09 Dec 1997 08:51:55 -0600 (CST)
Received: from VNET.IBM.COM (vnet.ibm.com [204.146.168.194]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id IAA07065 for <fvwm-workers@hpc.uh.edu>; Tue, 9 Dec 1997 08:51:40 -0600 (CST)
Received: from FISHKILL by VNET.IBM.COM (IBM VM SMTP V2R4) with BSMTP id 4677;
   Tue, 09 Dec 97 09:51:25 EST
Received: by FISHKILL (XAGENTA 4.0) id 6026; Tue, 9 Dec 1997 09:51:19 -0500 
Received: by cold.fishkill.ibm.com (AIX 4.1/UCB 5.64/4.03)
          id AA29638; Tue, 9 Dec 1997 09:51:08 -0500
Date: Tue, 9 Dec 1997 09:51:08 -0500
Message-Id: <9712091451.AA29638@cold.fishkill.ibm.com>
From: "Charles Hines" <chuck_hines@VNET.IBM.COM>
To: psmith@baynetworks.com
Cc: The FVWM Discussion List <fvwm@hpc.uh.edu>,
        The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: FVWM: window flags bitfield
In-Reply-To: <p5afeb5st9.fsf@baynetworks.com>
References: <199712082042.MAA04302@piecomputer.engr.sgi.com>
        <p5afeb5st9.fsf@baynetworks.com>
X-Mailer: VM 6.34 under 20.3 "Vatican City" XEmacs  Lucid
X-Face: 'pn"gAx+&w4-=-}\z>*.Y*@(lC;t1<P);@iwiv';)vn3H2\/.x#;>J[a,/Q.Yv0^Wwc6_"H]}}-"?%)ETS`1v[]P`w4,E.9Bgf*XI4<H{C}Mf@'Ms)z?Bqzf"8v/oY\9K){w}\pw
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "Paul" == Paul D Smith <psmith@baynetworks.com> writes:

Paul> %% Bob Mende Pie <mende@piecomputer.engr.sgi.com> writes:
bmp> I just spent 15 minutes adding the ability determine if a window
bmp> is "WindowShaded" so I can do complex operations on it.  I see
bmp> that this was never added since ALL of the 32 bits of the window
bmp> flags field are allocated.  (Note, I stole bit 31, from the motif
bmp> hacks which I dont use).  What do people think about bumping this
bmp> to 64 bits?

Paul> This is known as the GSFR (Great Style Flag Rewrite) and is the very
Paul> first and most important thing that is planned for the post-2.1 FVWM
Paul> version.  People have so many uses for this by now that 64 bits is
Paul> likely not enough; it'll have to be expandable (would anyway,
Paul> obviously).

The ideas I have for the GSFR should make it completely expandable,
although I would hope that it doesn't go too far beyond 64 bits.

Paul> Of course, the GSFR is really a legend and will never happen, because
Paul> FVWM 2.1 is a legend and will never happen (no offense to anyone in
Paul> particular, but it's been 2 years or more since I saw the first message
Paul> saying there was going to be one more "clean up" version, then 2.1; many
Paul> months, releases, and identical announcements later there seems to be
Paul> lots of enhancements but exactly 0 progress towards that goal.  Just my
Paul> perspective :).

Ouch! :)

I prefer the term 'semi-mythical' myself.

I have to admit that my progress with fvwm has been less than optimal
(as I warned it would be when I started) and I've been sorely tempted
lately to give up the care and feeding of fvwm to someone else because
of that.

[If those Lotto tickets would come through for me I'd have a lot more
free time to work on it! :)]

But for the time being at least I'll continue to plod along, as I'm
not quite ready to admit defeat.  I wish I could do something about
that stubborn streak. :)

[BUT, if anyone out there feels they'd like to try taking over
eventually, PLEASE let me know sometime in some private email]

So, a quick status and some theories:

  - Work on 2.0.47 is going ok (but slowly).  Quite a bit is going
    into it.  I hope to have it ready by the end of the year or
    shortly thereafter (I'll be taking vactaion the last two weeks of
    December and plan to finish it up during that if I haven't done so
    before then).

  - I hope that only one or two more 'betas' will be necessary after
    that before 2.1.0 can finially appear.  As I said, quite a bit is
    going into 2.0.47 and some bugs will have to be ironed out, but I
    think that it's finially getting close...  Hm...  Paul, does that
    sound familiar? :)

  - The GSFR is still planned for sometime after 2.1.0 is out.  I'll
    try and get a sketch of my ideas for it into the TO-DO list, in
    case anyone is interested or I'm forced to pass on the torch to
    someone else before I'm able to take a crack at it.  (I'd like to
    get some feedback on it if I do write something up)

Chuck

--
*******************************************************************************
Charles K. Hines <chuck_hines@vnet.ibm.com>
IBM Logic Synthesis Developer [BooleDozer (TM)]
Martial Arts Instructor [Modern Arnis, Presas Style Filipino Martial Arts]

         "Go back to sleep, Chuck.  You're just havin' a nightmare
             -- of course, we ARE still in Hell." (Gary Larson)
*******************************************************************************
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  9 12:21:19 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 09 Dec 1997 12:21:19 -0600 (CST)
Received: from Athena.McRCIM.McGill.EDU (root@Athena.McRCIM.McGill.EDU [132.206.4.20]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id MAA11400 for <fvwm-workers@hpc.uh.edu>; Tue, 9 Dec 1997 12:21:11 -0600 (CST)
Received: from Chart.McRCIM.McGill.EDU (uucp@Chart.McRCIM.McGill.EDU [132.206.4.7]) by 12030 on Athena.McRCIM.McGill.EDU (8.8.5) with ESMTP id NAA12030 for <hpc.uh.edu!fvwm-workers>; Tue, 9 Dec 1997 13:20:47 -0500 (EST)
Received: from hilbert.UUCP (uucp@localhost) by 26754 on Chart.McRCIM.McGill.EDU (8.8.5) with UUCP id NAA26754 for hpc.uh.edu!fvwm-workers; Tue, 9 Dec 1997 13:20:45 -0500 (EST)
Received: from localhost by hilbert.nyongwa.montreal.qc.ca
	via sendmail with smtp
	id <m0xfU59-0000vAC@hilbert.nyongwa.montreal.qc.ca>
	for <fvwm-workers@hpc.uh.edu>; Tue, 9 Dec 1997 13:08:31 -0500 (EST)
	(Smail-3.2.0.95 1997-May-7 #1 built 1997-May-25)
Date: Tue, 9 Dec 1997 13:08:30 -0500 (EST)
From: Steve Robbins <steve@nyongwa.montreal.qc.ca>
Reply-To: Steve Robbins <steve@nyongwa.montreal.qc.ca>
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: The GNU configuring scheme
In-Reply-To: <ufau3cks1zd.fsf@sina.hpc.uh.edu>
Message-ID: <Pine.LNX.3.96.971209113401.3708E-100000@hilbert.nyongwa.montreal.qc.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

On 8 Dec 1997, Jason L Tibbitts III wrote:

> >>>>> "SR" == Steve Robbins <steve@nyongwa.montreal.qc.ca> writes:
> 
> SR> * Should the modules actually be in a directory with the full FVWM
> SR> version attached; i.e. ${libexecdir}/fvwm-2.0.46?
> 
> I see no reason why this would not be a good idea.  Version skew can easily
> crop up, and when we get past 2.1 there will be many more sites which want
> to make multiple versions available at the same time.
> 
> You might perhaps consider fvwm/2.0.46, though.  Many packages do this
> (i.e. emacs, cf /usr/share/emacs/19.34).

Ah, yes, that's good too; better, in fact, when multiple versions get
installed concurrently.  So the current suggestion is to install modules
into:
	${libexec}/fvwm/${version}

Might I suggest then, that the name of the binary be returned to simply
"fvwm", rather than "fvwm2"?  Those who install multiple versions can
rename it after install.  This would be more in keeping with current
practice: gcc and emacs, to name two, retain the same name for the
user-visible binary, even though they (well, emacs at least) have gone
through incompatible changes in the past.

> SR> * Should the runtime config file (system.fvwmrc) be located in
> SR> ${sysconfdir}; i.e. ${prefix}/etc?
> 
> I think so.  What are the alternatives?

One alternative is to leave it in the module directory as it is now.  (I
don't really like that alternative)  There may be others, but I can't
think of any that I like.
 
> SR> IMHO, if they are not maintained by the fvwm2 author, it makes some
> SR> sense to leave them out of the main package.
> 
> Well, that's not necessarily a great assumption.  There's generally enough
> warning before a release so that extras authors can get working versions of
> their packages in before the release happens.  Plus given Chuck's free time
> status, I expect that many things will end up not being maintained by him
> but in the package anyway (as more folks contribute modules that Chuck
> doesn't poke around in).

True.

What I was thinking about when I wrote that, was how to get these things
configured & built.  At the moment, there seems to be a mishmash of
different schemes for building the extras: some have Imakefiles, some
(okay, one) have Makefile.std, some with nothing at all.  There is a big
fat warning in the original install file saying these things have to be
built by hand.  That suggested to me that while the code itself may be
maintained enough to compile or whatnot, the configure process may suffer
from version skew. 

>From the point of view of autoconf there are several possible choices:

1. Do Nothing

This is the choice I've taken so far, as it's the least amount of work
for me ;-)  This means, however, that the extras that use Imake have been
broken completely.  People won't like this option ...

2. Treat as modules

The extras directory could be treated in exactly the same way as the
modules, with a set of makefiles generated by configure.  This means the
configure script has to probe for all the features used in all these
extras, which includes: C++, perl, and python.  If these were not found,
configure would fail and fvwm could not be built.  This is unacceptable,
of course.  At least one module that uses C++ is put in extras because of
precisely the same problem with Imake.

3. Distribute separately, with their own configure script

This is essentially what I was suggesting before;  it is easier on me, the
autoconfigure script writer: I can just deal with fvwm proper, and leave
the extra module writers to fend for themselves.  :-)  In some sense these
things *are* separate packages, each needing their own configure script to
detect, for example, where the perl interpreter lives on your system.

4. Treat as *optional* modules

The configure script could be written with a switch (--with-extras ?) to
turn on checking for C++, perl, python and the rest.  The makefiles for
the extra modules are built only if this switch is enabled at configure
time.  This is something like options #1 and #2 combined; it is
all-or-nothing: if you don't have perl AND c++ AND python, then you can't
build the extras.  This is just a little work, but doesn't strike me as
terribly useful. 

5. Distribute with fvwm, each with their own configure script

This is a not-so-drastic version of option #3.  With some work, a small
configure script for each extra can be built.  The installer could:

	cd extras/foo && ./configure && make && make install

for each extra module desired.

6. Conditionally configure each extra

This is the "bells and whistles" option, which I'm not quite sure is
doable.  The idea is that the top-level configure script would probe for,
say C++, perl, etc.  Then, each module or extra with all prerequisites
available has its corresponding Makefile emitted.  The standard "make" 
commands will build / install all modules or extras which are buildable on
the given system.  In essence, the distinction between modules & extras is
dissolved. 

                  -------------------------------

I've started on option #5, but it will take some work.  I threw out the
suggestion for #3 to test the waters.  If nobody is using the extras, I
have other things to spend my time on :)  But if they are deemed integral,
I will finish off the configure scripts as best I can.  Of course, if they
are deemed integral, then #6 is the best option, and I'll investigate it
further.  There are a few technicalities with that option that I have to
check into.

> [don't know who wrote this one; its lost in the quoting]

It was Dan E.

> >> > > The compile option was "-g" by default.  I think it should be "-O"?
> 
> Not as long as the release is labeled beta.  Although I must admit I've
> never understood the reason why it's called beta; it seems to be as stable
> as anything else that's being released.

I really think the CFLAGS is a decision best left to the site's installer. 
Hence, nothing in the makefiles produced by configure relies on CFLAGS
being set in a particular way.  (For example, there are no "-I" nor "-L" 
flags stuffed into CFLAGS by configure)  Autoconf defaults CFLAGS to "-g" 
or "-g -O", so for the sake of consistency with all other autoconf'ed
packages, I suggest we leave it at that.  

You can always override it at configure *OR* compile time.  So you can do
a configure & test build (with CFLAGS = -g) for debugging, then recompile
before install with CFLAGS = -O. 

Some sites like to optimize everything, and I can sympathise with that. 
But I've been in enough instances where something that was in use for
months suddenly core dumps at a critical time.  I would have given
anything to have debugging symbols in the binary, so that I could at least
run gdb on it to see where the dump is happening --- without having to
recompile & reinstall. 

> >> So far, I'm a little concerned that the "configure" approach is not
> >> quite as robust as the "Imake" approach.  I'm loosing the complete
> >> control I used to have on where things are installed.  (The extra /bin
> >> and /lib.)
> 
> Robustness and control are two very different things.  After dealing
> endlessly with broken vendor imake config files, autoconf (for all its
> complexity) is much easier to handle.

Amen to that!

One little-known feature of configure scripts produced by autoconf, is
that you can have site-wide defaults for common configure options.  For
example, at home I roll my own setup, compiling stuff into /usr/bin.  To
avoid specifying --prefix=/usr all the time, I have a config.site file
with:
	test "$prefix" = NONE && prefix=/usr
	test "$localstatedir" = '${prefix}/var' && localstatedir=/var

You can use the same trick if you like to set CFLAGS to -O2 always, or to
pass -I and -L options for libraries in weird places.

Admittedly this is an obscure feature, requiring a bit of inside knowledge
of autoconfig.  The only place I've seen it documented is in the autoconf
documentation.

> I do think this is a worthy goal.  IMHO, the whole autoconf operation is an
> incredibly good idea.  I'm not certain that I'd advocate it for 2.1,
> though, but then it should depend on when 2.1 will be.  It does have one
> large advantage in that Chuck doesn't have to maintain it (assuming Steve
> wants to continue to do so) so that's one less thing he has to worry
> about.  I'm all for making things easier for Chuck.

Well, me too.  However, once the sources --- and developers ;-) --- have
been converted, there's nothing further for me to maintain.  I hope.

--
Steve Robbins                              <steve@nyongwa.montreal.qc.ca>

I'd probably be famous now, if I wasn't such a good waitress.


--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  9 13:49:15 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 09 Dec 1997 13:49:15 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id NAA12897; Tue, 9 Dec 1997 13:49:09 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
References: <199712082042.MAA04302@piecomputer.engr.sgi.com>         <p5afeb5st9.fsf@baynetworks.com> <9712091451.AA29638@cold.fishkill.ibm.com>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 09 Dec 1997 13:49:09 -0600
In-Reply-To: "Charles Hines"'s message of Tue, 9 Dec 1997 09:51:08 -0500
Message-ID: <ufad8j6s3ey.fsf@sina.hpc.uh.edu>
Lines: 11
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "CH" == Charles Hines <chuck_hines@VNET.IBM.COM> writes:

CH> The GSFR is still planned for sometime after 2.1.0 is out.  I'll try
CH> and get a sketch of my ideas for it into the TO-DO list, in case anyone
CH> is interested or I'm forced to pass on the torch to someone else before
CH> I'm able to take a crack at it.

Didn't someone essentially do the work already?  I require a patch posted
here which purported to have dome so.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  9 15:50:06 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 09 Dec 1997 15:50:06 -0600 (CST)
Received: from vnet.IBM.COM (vnet.ibm.com [204.146.168.194]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id PAA15561 for <fvwm-workers@hpc.uh.edu>; Tue, 9 Dec 1997 15:49:53 -0600 (CST)
Received: from FISHKILL by vnet.IBM.COM (IBM VM SMTP V2R4) with BSMTP id 3375;
   Tue, 09 Dec 97 16:49:06 EST
Received: by FISHKILL (XAGENTA 4.0) id 6111; Tue, 9 Dec 1997 16:49:02 -0500 
Received: by cold.fishkill.ibm.com (AIX 4.1/UCB 5.64/4.03)
          id AA46672; Tue, 9 Dec 1997 16:48:22 -0500
Date: Tue, 9 Dec 1997 16:48:22 -0500
Message-Id: <9712092148.AA46672@cold.fishkill.ibm.com>
From: "Charles Hines" <chuck_hines@vnet.IBM.COM>
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
In-Reply-To: <ufad8j6s3ey.fsf@sina.hpc.uh.edu>
References: <199712082042.MAA04302@piecomputer.engr.sgi.com>
        <p5afeb5st9.fsf@baynetworks.com>
        <9712091451.AA29638@cold.fishkill.ibm.com>
        <ufad8j6s3ey.fsf@sina.hpc.uh.edu>
X-Mailer: VM 6.34 under 20.3 "Vatican City" XEmacs  Lucid
X-Face: 'pn"gAx+&w4-=-}\z>*.Y*@(lC;t1<P);@iwiv';)vn3H2\/.x#;>J[a,/Q.Yv0^Wwc6_"H]}}-"?%)ETS`1v[]P`w4,E.9Bgf*XI4<H{C}Mf@'Ms)z?Bqzf"8v/oY\9K){w}\pw
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "Jason" == Jason L Tibbitts <tibbs@hpc.uh.edu> writes:

>>>>> "CH" == Charles Hines <chuck_hines@VNET.IBM.COM> writes:
CH> The GSFR is still planned for sometime after 2.1.0 is out.  I'll try
CH> and get a sketch of my ideas for it into the TO-DO list, in case anyone
CH> is interested or I'm forced to pass on the torch to someone else before
CH> I'm able to take a crack at it.

Jason> Didn't someone essentially do the work already?  I require a
Jason> patch posted here which purported to have dome so.

Dan Espen claimed to do the GSFR in his iconbox patch, but it really
only cleans up the style parsing code a little bit (AFAICT), but I
feel that's only part of the problem.

The actual GSFR (at least the way that I have envisioned it) is going
to require more than that - namely changing ALL of the code that
access the style flags in some way.

Chuck
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec  9 15:53:04 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 09 Dec 1997 15:53:04 -0600 (CST)
Received: from smtp-gw.BayNetworks.COM (ns1.BayNetworks.COM [134.177.3.20]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id PAA15509; Tue, 9 Dec 1997 15:47:05 -0600 (CST)
Received: from mailhost.BayNetworks.COM ([134.177.1.107] (may be forged))
	by smtp-gw.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id NAA00366;
	Tue, 9 Dec 1997 13:46:19 -0800 (PST)
Received: from pobox.engeast.BayNetworks.COM (pobox.corpeast.baynetworks.com [192.32.61.6])
	by mailhost.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id NAA23970;
	Tue, 9 Dec 1997 13:46:17 -0800 (PST)
Received: from lemming.engeast (lemming [192.32.138.39])
	by pobox.engeast.BayNetworks.COM (SMI-8.6/BNET-97/04/24-S) with SMTP
	id QAA27577; Tue, 9 Dec 1997 16:46:18 -0500
	for 
Received: by lemming.engeast (4.1/SMI-4.1)
	id AA29568; Tue, 9 Dec 97 16:46:17 EST
To: "Charles Hines" <chuck_hines@vnet.IBM.COM>
Cc: The FVWM Discussion List <fvwm@hpc.uh.edu>,
        The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: FVWM: window flags bitfield
References: <199712082042.MAA04302@piecomputer.engr.sgi.com>         <p5afeb5st9.fsf@baynetworks.com> <9712091451.AA29638@cold.fishkill.ibm.com>
Reply-To: psmith@BayNetworks.COM
From: psmith@BayNetworks.COM (Paul D. Smith)
In-Reply-To: "Charles Hines"'s message of Tue, 9 Dec 1997 09:51:08 -0500
Date: 09 Dec 1997 16:46:16 -0500
Message-Id: <p567oydwbb.fsf@baynetworks.com>
Lines: 66
X-Mailer: Gnus v5.5/Emacs 20.2
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

%% "Charles Hines" <chuck_hines@vnet.IBM.COM> writes:

  ch> I prefer the term 'semi-mythical' myself.

:)

  ch> I have to admit that my progress with fvwm has been less than optimal
  ch> (as I warned it would be when I started) and I've been sorely tempted
  ch> lately to give up the care and feeding of fvwm to someone else because
  ch> of that.

I notice that no one (including, I'm first to admit, me) is jumping up
and down to take your place, so don't feel bad :)

  ch>   - Work on 2.0.47 is going ok (but slowly).  Quite a bit is going
  ch>     into it.

A comment: in my experience this is extremely common with free software,
and one of the major issues to be addressed for any free software
development process.  I've seen it with perl, Linux, fvwm, gcc, etc.

People just keep adding features, and more features, and more and more
features, and a "stable" release never comes out because with every
release that fixes bugs in the last set of features there are more
features to be debugged.

And it only gets worse the more time that elapses between some kind of
reference release, because people get worried that the _next_ "stable"
release will take as long as the last one, and they're all pushing to
get their favourite item into _this_ one so they don't have to wait a
few years for the next one, and then this one takes longer, etc. etc.

A vicious catch-22 :)

My opinion, FWIW, is that no more new features should be accepted,
period (okay, maybe the autoconf stuff can go in! :).  Make one release
with not a single new feature, but just whatever bug fixes there are,
then cut 2.1 if that looks reasonable after 3 weeks or so (give a hard
deadline to prod people into getting/installing the latest version).

The only way to get out of this is for someone to be hard-hearted and
say "forget it; you have to wait."  Not that these aren't the world's
greatest features, but a line has to be drawn, and kept.

Note this _only_ works if we can commit to getting the release _done_
within a month or so of the feature freeze.  Otherwise things will back
up too much and the dam will break again.

  ch>   - I hope that only one or two more 'betas' will be necessary after
  ch>     that before 2.1.0 can finially appear.  As I said, quite a bit is
  ch>     going into 2.0.47 and some bugs will have to be ironed out, but I
  ch>     think that it's finially getting close...  Hm...  Paul, does that
  ch>     sound familiar? :)

Yep :)

As I said above, IMO we will never be able to stop the "one or two more
betas" until we stop the "just a few more features".

-- 
-------------------------------------------------------------------------------
 Paul D. Smith <psmith@baynetworks.com>         Network Management Development
 "Please remain calm...I may be mad, but I am a professional." --Mad Scientist
-------------------------------------------------------------------------------
     These are my opinions--Bay Networks takes no responsibility for them.

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 05:03:59 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 05:03:59 -0600 (CST)
Received: from hydra.ifh.de (hydra.ifh.de [141.34.100.25]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id FAA26157 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 05:03:40 -0600 (CST)
Received: from localhost (weyers@localhost)
	by hydra.ifh.de (8.8.5/8.8.5) with SMTP id MAA05632
	for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 12:03:12 +0100 (MET)
X-Authentication-Warning: hydra.ifh.de: weyers owned process doing -bs
Date: Wed, 10 Dec 1997 12:03:11 +0100 (MET)
From: "Peter J. Weyers" <weyers@ifh.de>
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Re: FVWM: window flags bitfield
In-Reply-To: <p567oydwbb.fsf@baynetworks.com>
Message-ID: <Pine.SGI.3.96.971210120108.6799L-100000@hydra.ifh.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

On 9 Dec 1997, Paul D. Smith wrote:

> My opinion, FWIW, is that no more new features should be accepted,

I very much agree!

Peter
,------------------------------------------------------------------------.
|+49-033762/77-452 : +49-030/2093-7812 :http://sugra.desy.de/user/weyers/|
`------------------------------------------------------------------------'

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 07:41:01 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 07:41:01 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id HAA27906 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 07:40:52 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id IAA14975
	for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 08:40:05 -0500 (EST)
Message-Id: <199712101340.IAA14975@castle.mk.bellcore.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield 
In-reply-to: Your message of Tue, 09 Dec 1997 16:48:22 -0500.
             <9712092148.AA46672@cold.fishkill.ibm.com> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Wed, 10 Dec 1997 08:40:07 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

"Charles Hines" <chuck_hines@vnet.IBM.COM> writes:
> >>>>> "Jason" == Jason L Tibbitts <tibbs@hpc.uh.edu> writes:
> 
> >>>>> "CH" == Charles Hines <chuck_hines@VNET.IBM.COM> writes:
> CH> The GSFR is still planned for sometime after 2.1.0 is out.  I'll try
> CH> and get a sketch of my ideas for it into the TO-DO list, in case anyone
> CH> is interested or I'm forced to pass on the torch to someone else before
> CH> I'm able to take a crack at it.
> 
> Jason> Didn't someone essentially do the work already?  I require a
> Jason> patch posted here which purported to have done so.
> 
> Dan Espen claimed to do the GSFR in his iconbox patch, but it really
> only cleans up the style parsing code a little bit (AFAICT), but I
> feel that's only part of the problem.
> 
> The actual GSFR (at least the way that I have envisioned it) is going
> to require more than that - namely changing ALL of the code that
> access the style flags in some way.

I didn't  originate the term  GSFR, so I  can't really say whether the
iconbox patch is it or not.  However, I did rewrite  all the code that
has to do with style flags, both the parsing and the access.

All the access is thru the function LookInList in add_window.c.  I got
rid of the huge number of args  this function required  and the way it
was returning the flags bits as  its return code.  I also consolidated
all the code it was doing 3 times for each of  the 3 possible matches.
Plus I managed  to remove all the  individual field initialization and
replace it with one memset.

As far  as the  parsing, I  still don't really   care for the  parsing
itself, but I   don't see anything wrong  with  the way the  flags are
stored now.

If there is a remaining Style flags problem, I don't see it.

Chuck, please take another look and share your thoughts with us.

> Chuck
> --

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 09:12:23 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 09:12:23 -0600 (CST)
Received: from VNET.IBM.COM (vnet.ibm.com [204.146.168.194]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id JAA29254 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 09:12:09 -0600 (CST)
Received: from FISHKILL by VNET.IBM.COM (IBM VM SMTP V2R4) with BSMTP id 9219;
   Wed, 10 Dec 97 10:11:40 EST
Received: by FISHKILL (XAGENTA 4.0) id 6257; Wed, 10 Dec 1997 10:11:36 -0500 
Received: by cold.fishkill.ibm.com (AIX 4.1/UCB 5.64/4.03)
          id AA29648; Wed, 10 Dec 1997 10:11:31 -0500
Date: Wed, 10 Dec 1997 10:11:31 -0500
Message-Id: <9712101511.AA29648@cold.fishkill.ibm.com>
From: "Charles Hines" <chuck_hines@VNET.IBM.COM>
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
In-Reply-To: <199712101340.IAA14975@castle.mk.bellcore.com>
References: <9712092148.AA46672@cold.fishkill.ibm.com>
        <199712101340.IAA14975@castle.mk.bellcore.com>
X-Mailer: VM 6.34 under 20.3 "Vatican City" XEmacs  Lucid
X-Face: 'pn"gAx+&w4-=-}\z>*.Y*@(lC;t1<P);@iwiv';)vn3H2\/.x#;>J[a,/Q.Yv0^Wwc6_"H]}}-"?%)ETS`1v[]P`w4,E.9Bgf*XI4<H{C}Mf@'Ms)z?Bqzf"8v/oY\9K){w}\pw
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "Dan" == Dan Espen <dane@mk.bellcore.com> writes:

Dan> "Charles Hines" <chuck_hines@vnet.IBM.COM> writes:
>> Dan Espen claimed to do the GSFR in his iconbox patch, but it really
>> only cleans up the style parsing code a little bit (AFAICT), but I
>> feel that's only part of the problem.
>>
>> The actual GSFR (at least the way that I have envisioned it) is going
>> to require more than that - namely changing ALL of the code that
>> access the style flags in some way.

Dan> I didn't  originate the term  GSFR,

(That was me)

Dan> so I can't really say whether the iconbox patch is it or not.
Dan> However, I did rewrite all the code that has to do with style
Dan> flags, both the parsing and the access.

Not exactly the "access" I meant.  I'll explain below.

Dan> All the access is thru the function LookInList in add_window.c.  I got
Dan> rid of the huge number of args  this function required  and the way it
Dan> was returning the flags bits as  its return code.  I also consolidated
Dan> all the code it was doing 3 times for each of  the 3 possible matches.
Dan> Plus I managed  to remove all the  individual field initialization and
Dan> replace it with one memset.

And all of these changes were good, as that code needed cleaning up as
part of the GSFR.

Dan> As far  as the  parsing, I  still don't really   care for the  parsing
Dan> itself,

I'd like to make the parsing better as well (using the new parsing
routines I added a while back that probably still need some work
themselves), but that should wait.

Dan> but I don't see anything wrong with the way the flags are stored
Dan> now.

Dan> If there is a remaining Style flags problem, I don't see it.

Dan> Chuck, please take another look and share your thoughts with us.

Well, I think if I explain my idea for the GSFR, that would be a good
way to start.  I had started to put this into the TO-DO list, but
better to talk about it now, I guess.

Currently the style flags are checked and set (which is what I meant
by "accessed") via bit masks, which is why we only have 32 possible
flags.  Setting them & reading them is a "bit" odd (sorry for the bad
pun there):

        set:   tmp_win->flags |= ICONIFIED;
        clear: tmp_win->flags &= ~ICONIFIED;
        check: if (tmp_win->flags & ICONIFIED) {}

Now, adding a second (then third, then fourth, etc) style flag
variable would work to get around the lack of bits problem, obviously,
but there are a couple of problems with that:

        - when someone is writting code that needs to check them, they
          have to remember which mask goes with which flag variable
        - portions of the module code would have to be rewritten each
          time a new style flag variable was added, at both ends

So, what I thought of for the GSFR was this: change the flags variable
from an unsigned int accessed via bitmasks to a union of an array of
unsigned ints and bitfields, perhaps like this:

----------------------------------------------------------------------
typedef struct FvwmWindow
{
  ...
  union flags
  {
    unsigned int allflags[NUM_INTS_FOR_FLAGS];
    struct f
    {
      unsigned int StartIconic:1;
      unsigned int OnTop:1;
      unsigned int Sticky:1;
      unsigned int StickyIcon:1;
      unsigned int SuppressIcon:1;
      unsigned int NoIconTitle:1;
      unsigned int Lenience:1;
      unsigned int WindowListSkip:1;
      unsigned int CirculateSkip:1;
      unsigned int CirculateSkipIcon:1;
      unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */
      unsigned int ShowOnMap:1;
      unsigned int Border:1;
      unsigned int Title:1;
      unsigned int Mapped:1;
      unsigned int Iconified:1;
      unsigned int Transient:1;
      unsigned int Raised:1;
      unsigned int Visible:1;
      unsigned int IconOurs:1;
      unsigned int PixmapOurs:1;
      unsigned int ShapedIcon:1;
      unsigned int Maximized:1;
      ...
    } f;
  } flags;
  ...
} FvwmWindow;
----------------------------------------------------------------------

So now, accessing them is something like so:

        set:   tmp_win->flags.f.Iconified = TRUE;
        clear: tmp_win->flags.f.Iconified = FALSE;
        check: if (tmp_win->flags.f.Iconified) {}

which is a bit more intuitive, and some #defines could probably be
used to hide the 'f.' portion to make it slightly more readable (or
perhaps that extra struct isn't needed, I'll have to test that).  And
no matter how many unsigned int's have to be added, you don't have to
remember which one each flag would fall under, because it's hidden
from you.

And the module code would use the NUM_INTS_FOR_FLAGS define to send
the whole bunch of flags to the modules (via the allflags array), who
would stuff these values into a local style flags union structure
(defined separately in the fvwm.h file for use in by whoever needs it
besides the FvwmWindow struct) for access as above, making that code
generic no matter how many uints are needed for the flags.

Plus, I think the style parsing code could use a local style flags
union structure to hold the values, using memcpy it into the new
FvwmWindow's when needed.

But, as you can see this would require a large amount of code to be
changed, which is why I called it the GSFR...

Plus, I don't know what kind of performance hit this would entail (if
any).  I would hope that on most systems the bitfield code generated
by the compiler would be relatively efficient, but I don't know.  I
should probably code up a small testcase to check this.

Discussion time: How does this all sound?  Is it a good idea, or is it
overkill?  Anyone have a simpler solution?  Etc...

Chuck

--
*******************************************************************************
Charles K. Hines <chuck_hines@vnet.ibm.com>
IBM Logic Synthesis Developer [BooleDozer (TM)]
Martial Arts Instructor [Modern Arnis, Presas Style Filipino Martial Arts]

         "Go back to sleep, Chuck.  You're just havin' a nightmare
             -- of course, we ARE still in Hell." (Gary Larson)
*******************************************************************************
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 11:44:27 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 11:44:27 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id LAA01747 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 11:44:15 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id MAA18266
	for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 12:43:22 -0500 (EST)
Message-Id: <199712101743.MAA18266@castle.mk.bellcore.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield 
In-reply-to: Your message of Wed, 10 Dec 1997 10:11:31 -0500.
             <9712101511.AA29648@cold.fishkill.ibm.com> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Wed, 10 Dec 1997 12:43:23 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

"Charles Hines" <chuck_hines@vnet.ibm.com> writes:
> Well, I think if I explain my idea for the GSFR, that would be a good
> way to start.  I had started to put this into the TO-DO list, but
> better to talk about it now, I guess.
> 
> Currently the style flags are checked and set (which is what I meant
> by "accessed") via bit masks, which is why we only have 32 possible
> flags.  Setting them & reading them is a "bit" odd (sorry for the bad
> pun there):
> 
>         set:   tmp_win->flags |= ICONIFIED;
>         clear: tmp_win->flags &= ~ICONIFIED;
>         check: if (tmp_win->flags & ICONIFIED) {}
> 
> Now, adding a second (then third, then fourth, etc) style flag
> variable would work to get around the lack of bits problem, obviously,
> but there are a couple of problems with that:
> 
>         - when someone is writting code that needs to check them, they
>           have to remember which mask goes with which flag variable
>         - portions of the module code would have to be rewritten each
>           time a new style flag variable was added, at both ends
> 
> So, what I thought of for the GSFR was this: change the flags variable
> from an unsigned int accessed via bitmasks to a union of an array of
> unsigned ints and bitfields, perhaps like this:
> 
> ----------------------------------------------------------------------
> typedef struct FvwmWindow
> {
>   ...
>   union flags
>   {
>     unsigned int allflags[NUM_INTS_FOR_FLAGS];
>     struct f
>     {
>       unsigned int StartIconic:1;
> ...
>       unsigned int Maximized:1;
>       ...
>     } f;
>   } flags;
>   ...
> } FvwmWindow;
> ----------------------------------------------------------------------
> 
> So now, accessing them is something like so:
> 
>         set:   tmp_win->flags.f.Iconified = TRUE;
>         clear: tmp_win->flags.f.Iconified = FALSE;
>         check: if (tmp_win->flags.f.Iconified) {}
> 
> which is a bit more intuitive, and some #defines could probably be
> used to hide the 'f.' portion to make it slightly more readable (or
> perhaps that extra struct isn't needed, I'll have to test that).  And
> no matter how many unsigned int's have to be added, you don't have to
> remember which one each flag would fall under, because it's hidden
> from you.
> 
> And the module code would use the NUM_INTS_FOR_FLAGS define to send
> the whole bunch of flags to the modules (via the allflags array), who
> would stuff these values into a local style flags union structure
> (defined separately in the fvwm.h file for use in by whoever needs it
> besides the FvwmWindow struct) for access as above, making that code
> generic no matter how many uints are needed for the flags.

Don't the modules need access  to the entire FvwmWindow structure, not
just the bitfields?

> Plus, I think the style parsing code could use a local style flags
> union structure to hold the values, using memcpy it into the new
> FvwmWindow's when needed.
> 

In the iconboxes patch, this is currently done like this:

  tmp_win->flags |= styles.on_flags & ALL_COMMON_FLAGS;

Ie. only the common flags  are copied.  We could  use a memcpy, but it
would leave  some  bits unused.  ALL_COMMON_FLAGS  seems  to represent
about 1/2 of the bits.

> But, as you can see this would require a large amount of code to be
> changed, which is why I called it the GSFR...
> 
> Plus, I don't know what kind of performance hit this would entail (if
> any).  I would hope that on most systems the bitfield code generated
> by the compiler would be relatively efficient, but I don't know.  I
> should probably code up a small testcase to check this.

I just coded up a small test case.  I'll mail details if anyone wants.

I'm on Solaris 2.5  using Sun's compiler  version 4.0.  I checked  the
generated  code    using  no optimization,   level    2 and   level  5
optimization.  In all  cases the generated  code is less efficient.  I
used an array  of 2 integers.  It looks  like the compiler  insists on
trying to shift the bit in question out of the array regardless of how
many hints it has about the size of the array and the bit in question.

There were almost twice as many instructions generated.  I didn't time
them.

Is this enough to decide not to use the union?

> Discussion time: How does this all sound?  Is it a good idea, or is it
> overkill?  Anyone have a simpler solution?  Etc...

I didn't see any problem with the flags vs flags2 solution, so I guess
thats why I was clueless about what GSFR meant.

Perhaps some macros for access and setting would be better:

#define ICONIFY_FLAG flags.Iconified
#define NEW_FLAG flags2.new

This has the advantage  of not requiring  everything to be changed  at
once.

> Chuck
> 
> --

-- 
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 11:57:27 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 11:57:27 -0600 (CST)
Received: from smtp-gw.BayNetworks.COM (ns5.baynetworks.com [194.133.90.101]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id LAA01966 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 11:57:18 -0600 (CST)
Received: from mailhost.BayNetworks.COM (occhio.BayNetworks.COM [194.133.90.100])
	by smtp-gw.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id SAA09256;
	Wed, 10 Dec 1997 18:56:01 +0100 (MET)
Received: from pobox.engeast.BayNetworks.COM (pobox.corpeast.baynetworks.com [192.32.61.6])
	by mailhost.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id SAA09815;
	Wed, 10 Dec 1997 18:55:55 +0100 (MET)
Received: from lemming.engeast (lemming [192.32.138.39])
	by pobox.engeast.BayNetworks.COM (SMI-8.6/BNET-97/04/24-S) with SMTP
	id MAA05192; Wed, 10 Dec 1997 12:55:55 -0500
	for 
Received: by lemming.engeast (4.1/SMI-4.1)
	id AA01535; Wed, 10 Dec 97 12:55:54 EST
To: "Charles Hines" <chuck_hines@VNET.IBM.COM>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
References: <9712092148.AA46672@cold.fishkill.ibm.com>         <199712101340.IAA14975@castle.mk.bellcore.com> <9712101511.AA29648@cold.fishkill.ibm.com>
Reply-To: psmith@BayNetworks.COM
From: psmith@BayNetworks.COM (Paul D. Smith)
In-Reply-To: "Charles Hines"'s message of Wed, 10 Dec 1997 10:11:31 -0500
Date: 10 Dec 1997 12:55:53 -0500
Message-Id: <p5u3chccba.fsf@baynetworks.com>
Lines: 126
X-Mailer: Gnus v5.5/Emacs 20.2
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

%% "Charles Hines" <chuck_hines@VNET.IBM.COM> writes:

  ch> Currently the style flags are checked and set (which is what I meant
  ch> by "accessed") via bit masks, which is why we only have 32 possible
  ch> flags.  Setting them & reading them is a "bit" odd (sorry for the bad
  ch> pun there):

  ch>         set:   tmp_win->flags |= ICONIFIED;
  ch>         clear: tmp_win->flags &= ~ICONIFIED;
  ch>         check: if (tmp_win->flags & ICONIFIED) {}

I usually use handy-dandy macros to make this a bit neater: SET_FLAG,
RESET_FLAG, IS_SET, etc.  But whatever :)

  ch> Now, adding a second (then third, then fourth, etc) style flag
  ch> variable would work to get around the lack of bits problem, obviously,
  ch> but there are a couple of problems with that:

  ch>         - when someone is writting code that needs to check them, they
  ch>           have to remember which mask goes with which flag variable
  ch>         - portions of the module code would have to be rewritten each
  ch>           time a new style flag variable was added, at both ends

Yes, as I said in my last mail (did that go to workers?  I'm confused
now :) I don't like this either.

  ch> So, what I thought of for the GSFR was this: change the flags variable
  ch> from an unsigned int accessed via bitmasks to a union of an array of
  ch> unsigned ints and bitfields, perhaps like this:

  ch> typedef struct FvwmWindow
  ch> {
  ch>   ...
  ch>   union flags
  ch>   {
  ch>     unsigned int allflags[NUM_INTS_FOR_FLAGS];
  ch>     struct f
  ch>     {
  ch>       unsigned int StartIconic:1;
  ch>       ...
  ch>     } f;
  ch>   } flags;
  ch>   ...
  ch> } FvwmWindow;

I would make the bitfields a totally separate typedef, instead of
embedding it into the FvwmWindow structure.  I don't see a need for the
union at all, you could just put all the bitfields into a struct, then
you can pass the struct as a whole without even really knowing how large
it is.  What is the allflags array for?

E.g., why not use this:

  typedef struct FvwmWindow_flags {
    unsigned int StartIconic:1;
     ...
  } FvwmWindow_flags;

  typedef struct FvwmWindow {
     ...
    FvwmWindow_flags    flags;
     ...
  } FvwmWindow;

  ch> So now, accessing them is something like so:

  ch>         set:   tmp_win->flags.f.Iconified = TRUE;
  ch>         clear: tmp_win->flags.f.Iconified = FALSE;
  ch>         check: if (tmp_win->flags.f.Iconified) {}

Using my suggestion above, it's just:

  win->flags.StartIconic = TRUE;

  ch> And the module code would use the NUM_INTS_FOR_FLAGS define to send
  ch> the whole bunch of flags to the modules (via the allflags array), who
  ch> would stuff these values into a local style flags union structure
  ch> (defined separately in the fvwm.h file for use in by whoever needs it
  ch> besides the FvwmWindow struct) for access as above, making that code
  ch> generic no matter how many uints are needed for the flags.

Can't you just send the whole win->flags struct to the modules, rather
than the array?  send(&win->flags, sizeof(FvwmWindow_flags)) should be
sufficient I think.  I guess I don't know too much about how this works.

Also, you can take the broken-out typedef I had above, FvwmWindow_flags,
and define that in fvwm.h and then use it in misc.h and also elsewhere,
so everyone is using the exact same typedef instead of a local copy.

  ch> Plus, I think the style parsing code could use a local style flags
  ch> union structure to hold the values, using memcpy it into the new
  ch> FvwmWindow's when needed.

If you use a struct you can just assign them, you don't need memcpy.
This works in ISO C:

  FvwmWindow_flags a, b;

  a.StartIconic = true;

  b = a;

(of course this works for a union, too).

  ch> Plus, I don't know what kind of performance hit this would entail
  ch> (if any).  I would hope that on most systems the bitfield code
  ch> generated by the compiler would be relatively efficient, but I
  ch> don't know.  I should probably code up a small testcase to check
  ch> this.

I'm sure that the compiler's handling of bitfields is at least as good
as doing it "by hand".

  ch> Discussion time: How does this all sound?  Is it a good idea, or is it
  ch> overkill?  Anyone have a simpler solution?  Etc...

My only concern with this is you're restricting fvwm to compilers which
support bitfields, but I guess we're already pretty much assuming an ISO
C compiler, so that's no big deal.

-- 
-------------------------------------------------------------------------------
 Paul D. Smith <psmith@baynetworks.com>         Network Management Development
 "Please remain calm...I may be mad, but I am a professional." --Mad Scientist
-------------------------------------------------------------------------------
     These are my opinions--Bay Networks takes no responsibility for them.
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 12:05:46 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 12:05:46 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id MAA02114 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 12:05:39 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id KAA27633; Wed, 10 Dec 1997 10:02:00 -0800 (PST)
To: Dan Espen <dane@mk.bellcore.com>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
References: <199712101743.MAA18266@castle.mk.bellcore.com>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 10:01:59 -0800
In-Reply-To: Dan Espen's message of "Wed, 10 Dec 1997 12:43:23 -0500"
Message-ID: <qrrg1o13wmg.fsf@elwha.cs.washington.edu>
Lines: 52
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Dan Espen <dane@mk.bellcore.com> writes:

> I just coded up a small test case.  I'll mail details if anyone wants.
> 
> I'm on Solaris 2.5  using Sun's compiler  version 4.0.  I checked  the
> generated  code    using  no optimization,   level    2 and   level  5
> optimization.  In all  cases the generated  code is less efficient.  I
> used an array  of 2 integers.  It looks  like the compiler  insists on
> trying to shift the bit in question out of the array regardless of how
> many hints it has about the size of the array and the bit in question.
> 
> There were almost twice as many instructions generated.  I didn't time
> them.
> 
> Is this enough to decide not to use the union?

IMHO, it shouldn't be.  Clarity of code, ease of evolution, and
simplicity of design all take priority over a couple of cycles.  fvwm2
is plenty fast already, and needs to be written more cleanly and
extensibly.

> 
> > Discussion time: How does this all sound?  Is it a good idea, or is it
> > overkill?  Anyone have a simpler solution?  Etc...
> 
> I didn't see any problem with the flags vs flags2 solution, so I guess
> thats why I was clueless about what GSFR meant.
> 
> Perhaps some macros for access and setting would be better:
> 
> #define ICONIFY_FLAG flags.Iconified
> #define NEW_FLAG flags2.new
> 
> This has the advantage  of not requiring  everything to be changed  at
> once.

If you stick with the current flags implementation, then it makes more
sense to add macros like ICONIFY_FLAG_P(window) and
SET_ICONIFY_FLAG(window) and RESET_ICONIFY_FLAG(window) to abstract out
the bit manipulations, etc., not just to abstract out the bit
locations.  Then you could switch to a union implementation only be
rewriting the macros and the window structure.

We're planning on doing a similar rewrite for scwm in the not too
distant future since the code there is just horendous (e.g., the
WINDOW_SHADE patch exploits the high bit of another field instead of
adding a new byte/word to the structure!  crazy!)

Greg J. Badros
gjb@cs.washington.edu
Seattle, WA  USA
http://www.cs.washington.edu/homes/gjb
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 13:02:40 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 13:02:40 -0600 (CST)
Received: from smtp-gw.BayNetworks.COM (ns4.BayNetworks.COM [192.32.253.7]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id NAA02867 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 13:02:32 -0600 (CST)
Received: from mailhost.BayNetworks.COM ([141.251.211.49] (may be forged))
	by smtp-gw.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id OAA06793;
	Wed, 10 Dec 1997 14:01:46 -0500 (EST)
Received: from pobox.engeast.BayNetworks.COM (pobox.corpeast.baynetworks.com [192.32.61.6])
	by mailhost.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id UAA10880;
	Wed, 10 Dec 1997 20:01:06 +0100 (MET)
Received: from lemming.engeast (lemming [192.32.138.39])
	by pobox.engeast.BayNetworks.COM (SMI-8.6/BNET-97/04/24-S) with SMTP
	id OAA11955; Wed, 10 Dec 1997 14:01:07 -0500
	for 
Received: by lemming.engeast (4.1/SMI-4.1)
	id AA02115; Wed, 10 Dec 97 14:01:06 EST
To: Dan Espen <dane@mk.bellcore.com>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
References: <199712101743.MAA18266@castle.mk.bellcore.com>
Reply-To: psmith@BayNetworks.COM
From: psmith@BayNetworks.COM (Paul D. Smith)
In-Reply-To: Dan Espen's message of Wed, 10 Dec 1997 12:43:23 -0500
Date: 10 Dec 1997 14:01:05 -0500
Message-Id: <p5n2i9c9am.fsf@baynetworks.com>
Lines: 55
X-Mailer: Gnus v5.5/Emacs 20.2
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

%% Dan Espen <dane@mk.bellcore.com> writes:

  de> I just coded up a small test case.  I'll mail details if anyone wants.

Me, please.

  de> There were almost twice as many instructions generated.  I didn't time
  de> them.

  de> Is this enough to decide not to use the union?

It definitely gives me pause.  I'll look at your test and try it with
GCC and if it's that bad, then maybe we should think again.  If GCC does
a good job, then I don't care and I vote for bitfields :)

%% Greg Badros <gjb@cs.washington.edu> writes:

  gb> If you stick with the current flags implementation, then it makes
  gb> more sense to add macros like ICONIFY_FLAG_P(window) and
  gb> SET_ICONIFY_FLAG(window) and RESET_ICONIFY_FLAG(window) to
  gb> abstract out the bit manipulations, etc., not just to abstract out
  gb> the bit locations.  Then you could switch to a union
  gb> implementation only be rewriting the macros and the window
  gb> structure.

Oof.  I'd hate to see 3 macros defined for every flag!  That's some
serious code obfuscation IMO.

I think we should just go ahead and fix it.  If bitfields are too
expensive, we can use an array and hide it behind generic macros:

  SET_FLAG(flags, ICONIFY_FLAG);
  RESET_FLAG(flags, ICONIFY_FLAG);
  if (IS_SET(flags, ICONIFY_FLAG) ...

etc.  As an example, SET_FLAG would be something like:

  #define VSZ   (sizeof(unsigned long)*CHAR_BIT)

  #define SET_FLAG(_v,_f)   ((_v)[(_f)/VSZ]|=((_f)%VSZ))

(I just wrote this off the top of my head but I think it's correct) if
the flag array is of type (unsigned long *).  The others easily derived
from this.

Although that seems like a lot of calculation, remember that _f and VSZ
are both constants, so the compiler will do all that calculation for you
at compile time, not runtime.

-- 
-------------------------------------------------------------------------------
 Paul D. Smith <psmith@baynetworks.com>         Network Management Development
 "Please remain calm...I may be mad, but I am a professional." --Mad Scientist
-------------------------------------------------------------------------------
     These are my opinions--Bay Networks takes no responsibility for them.
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 14:08:04 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 14:08:04 -0600 (CST)
Received: from mail11.digital.com (mail11.digital.com [192.208.46.10]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id OAA03938 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 14:07:55 -0600 (CST)
Received: from quarry.zk3.dec.com (quarry.zk3.dec.com [16.140.16.3])
	by mail11.digital.com (8.7.5/UNX 1.5/1.0/WV) with SMTP id NAA01840; 
	Wed, 10 Dec 1997 13:41:28 -0500 (EST)
Received: from toontown.zk3.dec.com by quarry.zk3.dec.com; (5.65v3.2/1.1.8.2/16Jan95-0946AM)
	id AA07929; Wed, 10 Dec 1997 13:41:18 -0500
Message-Id: <9712101841.AA07929@quarry.zk3.dec.com>
Date: Wed, 10 Dec 1997 13:41:14 -0500 (EST)
From: lar3ry gensch <gensch@zk3.dec.com>
Reply-To: gensch@zk3.dec.com
Subject: Re: FVWM: window flags bitfield
To: chuck_hines@VNET.IBM.COM
Cc: fvwm-workers@hpc.uh.edu
In-Reply-To: <9712101511.AA29648@cold.fishkill.ibm.com>
Mime-Version: 1.0
Content-Type: TEXT/plain; CHARSET=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

On 10 Dec, Charles Hines wrote:

>   union flags
>   {
>     unsigned int allflags[NUM_INTS_FOR_FLAGS];
>     struct f
>     {
>       ...
>       unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */
>       ...
>     } f;
>   } flags;
>   ...
> } FvwmWindow;
> ----------------------------------------------------------------------

A little nit:

Wouldn't it be even nicer to use:

	enum focuspolicy {
	    MOUSE_FOCUS,
	    SLOPPY_FOCUS,
	    CLICK_TO_FOCUS,
	    NEVER_FOCUS
	 } FocusPolicy:2;

rather than

        unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */

This way, you can see what the possible values are at the point of
definition, rather than having the enumerations being listed
elsewhere (and only listed via a comment).

Using an enum can also allow the compiler to ensure that only the
proper values may be placed into the bitfield (i.e., moving a zero
into that field might issue a compiler warning).

Finally, if you add a couple of focus policies later on (such as, say,
FOCUS_20_SECONDS_TOO_LATE, for a silly example), the compiler may also
be able to issue a warning if the number of bits in the bitfield will
not be able to hold the maximum and minimum values.

I've always been a big fan of having the compiler do as much of the
work as possible.  Issuing values for enumerations is a good thing
that the compiler can do.  Providing warning messages when (obvious)
good intentions fail is another.

Finally, when having to debug code, the debugger can possibly show us
the value of our enumeration (eg, 'print f.flags.f.FocusPolicy' can
show the value 'CLICK_TO_FOCUS').

Now, I'm not sure if this is 100% legal ANSI C.  I *did* check it
using 'gcc -ansi -pedantic -Wall' and Digital C, but this only shows us
what the compilers' authors think.  But, even if there are some
compilers that don't support enum bitfields, we could have autoconf
(when it gets working) check for it, and wrap the code as follows:

#ifdef HAVE_ENUM_BITFIELDS
	enum focuspolicy {
	    MOUSE_FOCUS,
	    SLOPPY_FOCUS,
	    CLICK_TO_FOCUS,
	    NEVER_FOCUS
	 } FocusPolicy:2;
#else
	unsigned int FocusPolicy:2;
# define MOUSE_FOCUS		(0)
# define SLOPPY_FOCUS		(1)
# define CLICK_TO_FOCUS		(2)
# define NEVER_FOCUS		(3)
#endif

This gives us the option of having our values checked by compilers
that support the enum-bitfields (to keep us honest), while being able
to still be compiled by the most pedantic compilers.

-- 
(void) lar3ry();                                      gensch@zk3.dec.com

     "Sometimes it happens.  People just explode.  Natural causes."

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 14:30:55 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 14:30:55 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id OAA04583 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 14:30:11 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id PAA20973
	for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 15:29:25 -0500 (EST)
Message-Id: <199712102029.PAA20973@castle.mk.bellcore.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield 
In-reply-to: Your message of 10 Dec 1997 14:01:05 -0500.
             <p5n2i9c9am.fsf@baynetworks.com> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Wed, 10 Dec 1997 15:29:27 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

psmith@BayNetworks.COM (Paul D. Smith) writes:
> %% Dan Espen <dane@mk.bellcore.com> writes:
> 
>   de> I just coded up a small test case.  I'll mail details if anyone wants.
> 
> Me, please.

OK.

Heres bitf.c:

#include <stdio.h>
#define NUM_INTS_FOR_FLAGS 2
typedef struct FvwmWindow
{
  union flags
  {
    unsigned int allflags[NUM_INTS_FOR_FLAGS];
    struct f
    {
      unsigned int StartIconic:1;       /* 1 */
      unsigned int OnTop:1;             /* 2 */
      unsigned int Sticky:1;
      unsigned int StickyIcon:1;
      unsigned int SuppressIcon:1;      /* 5 */
      unsigned int NoIconTitle:1;
      unsigned int Lenience:1;
      unsigned int WindowListSkip:1;
      unsigned int CirculateSkip:1;
      unsigned int CirculateSkipIcon:1; /* 10 */
      unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */
      unsigned int ShowOnMap:1;
      unsigned int Border:1;
      unsigned int Title:1;             /* 15 */
      unsigned int Mapped:1;
      unsigned int Iconified:1;
      unsigned int Transient:1;
      unsigned int Raised:1;
      unsigned int Visible:1;
      unsigned int IconOurs:1;
      unsigned int PixmapOurs:1;
      unsigned int ShapedIcon:1;
      unsigned int Maximized:1;         /* 24 */
      unsigned int t25:1;
      unsigned int t26:1;
      unsigned int t27:1;
      unsigned int t28:1;
      unsigned int t29:1;
      unsigned int t30:1;
      unsigned int t31:1;
      unsigned int t32:1;
      unsigned int t33:1;
      unsigned int t34:1;
      unsigned int t35:1;
      unsigned int t36:1;
    } f;
  } flags;
} FvwmWindow;

FvwmWindow tmp_win;

unsigned long old_way;


main() {

  tmp_win.flags.f.Iconified = 1;
  if (tmp_win.flags.f.Iconified) {
    printf("It's on\n");
  }
  tmp_win.flags.f.Iconified = 0;
  if (!tmp_win.flags.f.Iconified) {
    printf("It's off\n");
  }
  tmp_win.flags.f.t36 = 1;
  if (tmp_win.flags.f.t36) {
    printf("It's on\n");
  }

#define ICONIFIED 2
  old_way &= ~ICONIFIED;
  old_way |= ICONIFIED;
  if (old_way & ICONIFIED) {
    printf("It's on\n");
  }
}

And, without optimization bitf.s (I've trimmed out some useless stuff):


!   54	main() {
!   55	
!   56	  tmp_win.flags.f.Iconified = 1;

	sethi	%hi(tmp_win),%l3
	or	%l3,%lo(tmp_win),%l3
	mov	1,%l0
	and	%l0,1,%l0
	sll	%l0,15,%l2
	ld	[%l3+0],%l0
	sethi	32,%l1
	xor	%l1,-1,%l1
	and	%l0,%l1,%l0
	or	%l0,%l2,%l0
	st	%l0,[%l3+0]

!   57	  if (tmp_win.flags.f.Iconified) {

	sethi	%hi(tmp_win),%l0
	or	%l0,%lo(tmp_win),%l0
	ld	[%l0+0],%l0
	srl	%l0,15,%l0
	and	%l0,1,%l0
	cmp	%l0,%g0
	be	.L80
	nop

	! block 2
.L81:

!   58	    printf("It's on\n");

	sethi	%hi(.L82),%l0
	or	%l0,%lo(.L82),%l0
	mov	%l0,%o0
	call	printf
	nop

	! block 3
.L80:

!   59	  }
!   60	  tmp_win.flags.f.Iconified = 0;

	sethi	%hi(tmp_win),%l3
	or	%l3,%lo(tmp_win),%l3
	mov	0,%l0
	and	%l0,1,%l0
	sll	%l0,15,%l2
	ld	[%l3+0],%l0
	sethi	32,%l1
	xor	%l1,-1,%l1
	and	%l0,%l1,%l0
	or	%l0,%l2,%l0
	st	%l0,[%l3+0]

!   61	  if (!tmp_win.flags.f.Iconified) {

	sethi	%hi(tmp_win),%l0
	or	%l0,%lo(tmp_win),%l0
	ld	[%l0+0],%l0
	srl	%l0,15,%l0
	and	%l0,1,%l0
	cmp	%l0,%g0
	bne	.L83
	nop

	! block 4
.L84:

!   62	    printf("It's off\n");

	sethi	%hi(.L85),%l0
	or	%l0,%lo(.L85),%l0
	mov	%l0,%o0
	call	printf
	nop

	! block 5
.L83:

!   63	  }
!   64	  tmp_win.flags.f.t36 = 1;

	sethi	%hi(tmp_win),%l3
	or	%l3,%lo(tmp_win),%l3
	mov	1,%l0
	and	%l0,1,%l0
	sll	%l0,28,%l2
	ld	[%l3+4],%l0
	sethi	262144,%l1
	xor	%l1,-1,%l1
	and	%l0,%l1,%l0
	or	%l0,%l2,%l0
	st	%l0,[%l3+4]

!   65	  if (tmp_win.flags.f.t36) {

	sethi	%hi(tmp_win),%l0
	or	%l0,%lo(tmp_win),%l0
	ld	[%l0+4],%l0
	srl	%l0,28,%l0
	and	%l0,1,%l0
	cmp	%l0,%g0
	be	.L86
	nop

	! block 6
.L87:

!   66	    printf("It's on\n");

	sethi	%hi(.L88),%l0
	or	%l0,%lo(.L88),%l0
	mov	%l0,%o0
	call	printf
	nop

	! block 7
.L86:

!   67	  }
!   68	
!   69	#define ICONIFIED 2
!   70	  old_way &= ~ICONIFIED;

	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	ld	[%l0+0],%l0
	and	%l0,-3,%l1
	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	st	%l1,[%l0+0]

!   71	  old_way |= ICONIFIED;

	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	ld	[%l0+0],%l0
	or	%l0,2,%l1
	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	st	%l1,[%l0+0]

!   72	  if (old_way & ICONIFIED) {

	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	ld	[%l0+0],%l0
	and	%l0,2,%l0
	cmp	%l0,%g0
	be	.L89
	nop

	! block 8
.L90:

!   73	    printf("It's on\n");

	sethi	%hi(.L91),%l0
	or	%l0,%lo(.L91),%l0
	mov	%l0,%o0
	call	printf
	nop

	! block 9


So to set a bit the new way (11 instructions):

!   56	  tmp_win.flags.f.Iconified = 1;

	sethi	%hi(tmp_win),%l3
	or	%l3,%lo(tmp_win),%l3
	mov	1,%l0
	and	%l0,1,%l0
	sll	%l0,15,%l2
	ld	[%l3+0],%l0
	sethi	32,%l1
	xor	%l1,-1,%l1
	and	%l0,%l1,%l0
	or	%l0,%l2,%l0
	st	%l0,[%l3+0]

Vs. the old way (7 instructions):

!   71	  old_way |= ICONIFIED;

	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	ld	[%l0+0],%l0
	or	%l0,2,%l1
	sethi	%hi(old_way),%l0
	or	%l0,%lo(old_way),%l0
	st	%l1,[%l0+0]


Optimization gave  less instructions in   both  cases, but  it  looked
similar.


>  Paul D. Smith <psmith@baynetworks.com>         Network Management Developmen

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 14:40:56 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 14:40:56 -0600 (CST)
Received: from mail11.digital.com (mail11.digital.com [192.208.46.10]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id OAA04846 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 14:40:48 -0600 (CST)
Received: from quarry.zk3.dec.com (quarry.zk3.dec.com [16.140.16.3])
	by mail11.digital.com (8.7.5/UNX 1.5/1.0/WV) with SMTP id NAA01840; 
	Wed, 10 Dec 1997 13:41:28 -0500 (EST)
Received: from toontown.zk3.dec.com by quarry.zk3.dec.com; (5.65v3.2/1.1.8.2/16Jan95-0946AM)
	id AA07929; Wed, 10 Dec 1997 13:41:18 -0500
Message-Id: <9712101841.AA07929@quarry.zk3.dec.com>
Date: Wed, 10 Dec 1997 13:41:14 -0500 (EST)
From: lar3ry gensch <gensch@zk3.dec.com>
Reply-To: gensch@zk3.dec.com
Subject: Re: FVWM: window flags bitfield
To: chuck_hines@VNET.IBM.COM
Cc: fvwm-workers@hpc.uh.edu
In-Reply-To: <9712101511.AA29648@cold.fishkill.ibm.com>
Mime-Version: 1.0
Content-Type: TEXT/plain; CHARSET=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

On 10 Dec, Charles Hines wrote:

>   union flags
>   {
>     unsigned int allflags[NUM_INTS_FOR_FLAGS];
>     struct f
>     {
>       ...
>       unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */
>       ...
>     } f;
>   } flags;
>   ...
> } FvwmWindow;
> ----------------------------------------------------------------------

A little nit:

Wouldn't it be even nicer to use:

	enum focuspolicy {
	    MOUSE_FOCUS,
	    SLOPPY_FOCUS,
	    CLICK_TO_FOCUS,
	    NEVER_FOCUS
	 } FocusPolicy:2;

rather than

        unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */

This way, you can see what the possible values are at the point of
definition, rather than having the enumerations being listed
elsewhere (and only listed via a comment).

Using an enum can also allow the compiler to ensure that only the
proper values may be placed into the bitfield (i.e., moving a zero
into that field might issue a compiler warning).

Finally, if you add a couple of focus policies later on (such as, say,
FOCUS_20_SECONDS_TOO_LATE, for a silly example), the compiler may also
be able to issue a warning if the number of bits in the bitfield will
not be able to hold the maximum and minimum values.

I've always been a big fan of having the compiler do as much of the
work as possible.  Issuing values for enumerations is a good thing
that the compiler can do.  Providing warning messages when (obvious)
good intentions fail is another.

Finally, when having to debug code, the debugger can possibly show us
the value of our enumeration (eg, 'print f.flags.f.FocusPolicy' can
show the value 'CLICK_TO_FOCUS').

Now, I'm not sure if this is 100% legal ANSI C.  I *did* check it
using 'gcc -ansi -pedantic -Wall' and Digital C, but this only shows us
what the compilers' authors think.  But, even if there are some
compilers that don't support enum bitfields, we could have autoconf
(when it gets working) check for it, and wrap the code as follows:

#ifdef HAVE_ENUM_BITFIELDS
	enum focuspolicy {
	    MOUSE_FOCUS,
	    SLOPPY_FOCUS,
	    CLICK_TO_FOCUS,
	    NEVER_FOCUS
	 } FocusPolicy:2;
#else
	unsigned int FocusPolicy:2;
# define MOUSE_FOCUS		(0)
# define SLOPPY_FOCUS		(1)
# define CLICK_TO_FOCUS		(2)
# define NEVER_FOCUS		(3)
#endif

This gives us the option of having our values checked by compilers
that support the enum-bitfields (to keep us honest), while being able
to still be compiled by the most pedantic compilers.

-- 
(void) lar3ry();                                      gensch@zk3.dec.com

     "Sometimes it happens.  People just explode.  Natural causes."

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 14:41:09 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 14:41:09 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id OAA04884; Wed, 10 Dec 1997 14:41:02 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Why development spinoffs? (Was: window flags bitfield)
References: <199712101743.MAA18266@castle.mk.bellcore.com> <qrrg1o13wmg.fsf@elwha.cs.washington.edu>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 14:41:02 -0600
In-Reply-To: Greg Badros's message of 10 Dec 1997 10:01:59 -0800
Message-ID: <ufak9dddj8h.fsf_-_@sina.hpc.uh.edu>
Lines: 34
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:

GB> We're planning on doing a similar rewrite for scwm in the not too
GB> distant future since the code there is just horendous (e.g., the
GB> WINDOW_SHADE patch exploits the high bit of another field instead of
GB> adding a new byte/word to the structure!  crazy!)

Time and time again we've seen projects branch from FVWM (Bowman,
AfterStep, FVWM95, Enlightenment, scwm, probably more) and with the
exception of FVWM95 (and the wharf from AfterStep, I suppose) none of it
ever comes back into the core.  Why is this?  It seems we'd get a whole
bunch more work done if, say, the the GSFR only had to be done once instead
of repeatedly for every divergent branch.  I don't recall that any of the
branch developers tried to find a way to do what they wanted without
branching.  And after something like the GSFR is done (differently) for
each branch, a merge becomes essentially impossible.  So we're left with
several more window managers, which confuses and partitions the users and
divides up the available development manpower.

I wish that before things between, say, fvwm and scwm diverge too far, at
least a little thought would be put in to decide how to put them together.
Could we have a core which handles communication between modules and deals
with event bindings, define the necessary interfaces, and write everything
else as modules (drawing/decoration, user input, configuration/interaction
language, etc.)?  If it were done via shared libraries it would probably
have less overhead (performance and memory) and more flexibility than the
current modules-as-programs implementation.

I suppose it's a bit idealistic, but I think that if all of the programming
talent that has fractured between the various near-branches of fvwm could
converge for just a few months it could all be dome.  scwm and fvwm are
both looking at reasonably large changes in the near term anyway.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 14:54:14 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 14:54:14 -0600 (CST)
Received: from tempest.pdnt.net (root@tempest.pdnt.net [207.15.29.25]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id OAA05305 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 14:54:07 -0600 (CST)
Received: from DAR.cu-online.com (mail.eresnet.com [205.198.248.159])
	by tempest.pdnt.net (8.8.7/8.8.7) with SMTP id OAA01416
	for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 14:53:51 -0600 (CST)
Message-Id: <3.0.5.32.19971210145557.007e2ea0@pdnt.com>
X-Sender: darogers@pdnt.com (Unverified)
X-Mailer: QUALCOMM Windows Eudora Light Version 3.0.5 (32)
Date: Wed, 10 Dec 1997 14:55:57 -0600
To: fvwm-workers@hpc.uh.edu
From: "David A. Rogers" <darogers@pdnt.com>
Subject: Re: FVWM: window flags bitfield
In-Reply-To: <9712101841.AA07929@quarry.zk3.dec.com>
References: <9712101511.AA29648@cold.fishkill.ibm.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

At 01:41 PM 12/10/97 -0500, lar3ry gensch wrote:
>Wouldn't it be even nicer to use:
>
>	enum focuspolicy {
>	    MOUSE_FOCUS,
>	    SLOPPY_FOCUS,
>	    CLICK_TO_FOCUS,
>	    NEVER_FOCUS
>	 } FocusPolicy:2;
>
>rather than
>
>        unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */
>

Yeah, I like this approach for things like this that make sense.  For
things that are truly boolean, I think it makes sense to use a magic cookie
approach.  typedef whatever you like to the magic cookie type and use
setter, unsetter, and getter functions to process the magic cookie.  Then
you can change your mind about how to implement at a later date.


Encapsulation.  Its a good thing.


Regards,
David

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 15:04:32 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 15:04:32 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id PAA05563; Wed, 10 Dec 1997 15:04:22 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id NAA27925; Wed, 10 Dec 1997 13:04:04 -0800 (PST)
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712101743.MAA18266@castle.mk.bellcore.com> <qrrg1o13wmg.fsf@elwha.cs.washington.edu> <ufak9dddj8h.fsf_-_@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 13:04:04 -0800
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 14:41:02 -0600"
Message-ID: <qrr4t4g52rf.fsf@elwha.cs.washington.edu>
Lines: 82
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> >>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:
> 
> GB> We're planning on doing a similar rewrite for scwm in the not too
> GB> distant future since the code there is just horendous (e.g., the
> GB> WINDOW_SHADE patch exploits the high bit of another field instead of
> GB> adding a new byte/word to the structure!  crazy!)
> 
> Time and time again we've seen projects branch from FVWM (Bowman,
> AfterStep, FVWM95, Enlightenment, scwm, probably more) and with the
> exception of FVWM95 (and the wharf from AfterStep, I suppose) none of it
> ever comes back into the core.  Why is this?  It seems we'd get a whole
> bunch more work done if, say, the the GSFR only had to be done once instead
> of repeatedly for every divergent branch.  I don't recall that any of the
> branch developers tried to find a way to do what they wanted without
> branching.  And after something like the GSFR is done (differently) for

I agree completely w.r.t., e.g., Fvwm95 and AfterStep.  For SCWM,
however, we're not looking for a visual change, but a fundamental
rewrite replacing the static configuration language with guile scheme.
This is something you can't do incrementally and can't merge back in.

> each branch, a merge becomes essentially impossible.  So we're left with
> several more window managers, which confuses and partitions the users and
> divides up the available development manpower.
> 
> I wish that before things between, say, fvwm and scwm diverge too far, at
> least a little thought would be put in to decide how to put them together.

Too late-- even a month ago the scwm code was too far removed from fvwm
to even hand-patch my menu animation change that I made to fvwm2 into
the working scwm version.  I instead did a much nicer rewrite from scratch.

> Could we have a core which handles communication between modules and deals
> with event bindings, define the necessary interfaces, and write everything
> else as modules (drawing/decoration, user input, configuration/interaction
> language, etc.)?  If it were done via shared libraries it would probably
> have less overhead (performance and memory) and more flexibility than the
> current modules-as-programs implementation.

This is exactly what scwm is designed to be; we already have the menu
drawing code abstracted out, we are ripping the window decoration stuff
out, and we're reworking the event model completely.

> I suppose it's a bit idealistic, but I think that if all of the programming
> talent that has fractured between the various near-branches of fvwm could
> converge for just a few months it could all be dome.  scwm and fvwm are
> both looking at reasonably large changes in the near term anyway.

Ideally, scwm can be that one window manager that people can add
features to and customize arbitrarily while staying within the basic
framework (i.e., not needing to separate off new wm-s to add simple
primitives).   fvwm2's fundamental infrastructure is terribly lacking,
so staying inside fvwm2 would've been far too constraining for what
we're doing.   I'd really like to see fvwm2 stabilize with the changes
Charles has on the table now, and that be the end of fvwm2.  Then have
more people working on scwm, porting different WM's decorations to the
scwm interface, etc.  Believe me, it's a lot nicer to work with a wm
fully supported by a real, increasingly-popular language like Guile than 
to hand-parse every argument and implement each dynamic feature in an
ad-hoc way.

We're really striving to make scwm an upgrade path for fvwm2 users--
I've worked out most of a legacy module interface to provide access to
fvwm2 modules in Scheme code, with only limited C support.  The scwm
binary is smaller than fvwm2 because so much code duplication is
eliminated.  (The memory image is bigger, but that's mostly due to
guile, not fundamental to scwm).  Hopefully we'll also have a script to
aid converting .fvwm2rc to scwmrc-s, etc.

Yes, one extensible window manager should be enough.  But that window
manager is *not* fvwm2 -- not without major changes.  The scwm project
was born out of a desire to not reimplement the wheel and is positioned
to become the "Emacs of Window Managers", made even more powerful by
dynamically loaded C extensions implementing clean interfaces to lots of 
useful functionality.

Greg J. Badros
gjb@cs.washington.edu
Seattle, WA  USA
http://www.cs.washington.edu/homes/gjb
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 15:45:49 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 15:45:49 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id PAA06196; Wed, 10 Dec 1997 15:45:43 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712101743.MAA18266@castle.mk.bellcore.com> <qrrg1o13wmg.fsf@elwha.cs.washington.edu> <ufak9dddj8h.fsf_-_@sina.hpc.uh.edu> <qrr4t4g52rf.fsf@elwha.cs.washington.edu>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 15:45:43 -0600
In-Reply-To: Greg Badros's message of 10 Dec 1997 13:04:04 -0800
Message-ID: <ufahg8geut4.fsf@sina.hpc.uh.edu>
Lines: 62
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:

GB> I agree completely w.r.t., e.g., Fvwm95 and AfterStep.  For SCWM,
GB> however, we're not looking for a visual change, but a fundamental
GB> rewrite replacing the static configuration language with guile
GB> scheme.

I wasn't either.  I still don't see the need for a complete development
split, but maybe it's too late now.

GB> Too late-- even a month ago the scwm code was too far removed from fvwm
GB> to even hand-patch my menu animation change that I made to fvwm2 into
GB> the working scwm version.

I don't recall even hearing about it until even a month ago, which would
mean that the divergence happened without even being talked about here.
Too bad.  (Forgive my memory if I'm wrong, but do correct it.)  The
earliest mention of scwm in the list archives came in September with Bruce
Stephens saying basically the same things I'm saying, but no additional
messages from anyone involved with scwm.

I'm not trying to slight anybody, but all of this divergence just doesn't
seem to be in the spirit of cooperation that this free software thing is
supposed to be.  Saying "our way is superior" isn't any kind of
justification.  Saying "we tried to talk about it and nobody listened"
definitely is, but I just don't recall any of that.

GB> This is exactly what scwm is designed to be; we already have the menu
GB> drawing code abstracted out, we are ripping the window decoration stuff
GB> out, and we're reworking the event model completely.

But why does this all have to be tied to scheme?.  It's not really that bad
and if no better alternative comes about then I suppose I'll have no other
choice, but the language should be just another module that tells the core
what events to bind (and feeds events to the core itself).  The language
should not _be_ the core.

GB> Yes, one extensible window manager should be enough.  But that window
GB> manager is *not* fvwm2 -- not without major changes.

But you made those major changes.  You could have picked up all of the fvwm
development effort for free if you had wanted to, just by saying "here's a
plan for fvwm3; I'm going to eventually do this anyway but I want to
include you folks in it."  Now we have confusion and work going towards
post-2.1 fvwm that could be going into your project.  (You could say,
though, that you'd never get any consensus, but that's hard to say.)

GB> The scwm project was born out of a desire to not reimplement the wheel
GB> and is positioned to become the "Emacs of Window Managers",

You don't really want to say that, do you?  Emacs may be the paragon of
extensibility, but the price is a lot more than some people want to pay for
a few rectangles with buttons.  (I do everything in emacs, but I'm not sure
I want it managing my windows.)

In the spirit of optimism I'll say that its never too late to do anything,
but that scwm may already have gone in a direction that the fvwm folks just
don't find interesting.  I don't really know.  Am I the only one that
really cares about this?  Does anyone besides Greg and I have an opinion
here?

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:09:17 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:09:17 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id QAA07001 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 16:09:09 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id RAA22803
	for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 17:08:23 -0500 (EST)
Message-Id: <199712102208.RAA22803@castle.mk.bellcore.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield) 
In-reply-to: Your message of 10 Dec 1997 15:45:43 -0600.
             <ufahg8geut4.fsf@sina.hpc.uh.edu> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Wed, 10 Dec 1997 17:08:25 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:
> 
> In the  spirit of optimism  I'll say that  its never too late  to do
> anything, but  that scwm may already have  gone in a  direction that
> the fvwm  folks just don't find interesting.   I don't  really know.
> Am I the only one that really cares about this?  Does anyone besides
> Greg and I have an opinion here?

Jason,

  It's like you read my mind.

  There must be a way that we can all work together.

  In scwm's defense,  I notice that there seems to be active development
in the ctwm camp, so I guess that fvwm2 is a spinoff also.

  But really, we are only making a tiny fraction of the progess possible
with all these variants.  Its a damn shame.

> 
>  - J<
> --

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:19:04 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:19:04 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id QAA07315; Wed, 10 Dec 1997 16:18:56 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id OAA28016; Wed, 10 Dec 1997 14:18:41 -0800 (PST)
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712101743.MAA18266@castle.mk.bellcore.com> <qrrg1o13wmg.fsf@elwha.cs.washington.edu> <ufak9dddj8h.fsf_-_@sina.hpc.uh.edu> <qrr4t4g52rf.fsf@elwha.cs.washington.edu> <ufahg8geut4.fsf@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 14:18:41 -0800
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 15:45:43 -0600"
Message-ID: <qrru3cg3kqm.fsf@elwha.cs.washington.edu>
Lines: 107
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> GB> Too late-- even a month ago the scwm code was too far removed from fvwm
> GB> to even hand-patch my menu animation change that I made to fvwm2 into
> GB> the working scwm version.
> 
> I don't recall even hearing about it until even a month ago, which would
> mean that the divergence happened without even being talked about here.
> Too bad.  (Forgive my memory if I'm wrong, but do correct it.)  The
> earliest mention of scwm in the list archives came in September with Bruce
> Stephens saying basically the same things I'm saying, but no additional
> messages from anyone involved with scwm.

As much as we'd like to think it, fvwm2 is *not* the only wm around.
There was only a slight bit more reason to discuss scwm's inception on
the fvwm2 list as there was to discuss it on the gwm list or the
afterstep list, etc.  The bottom line is that several people
independently thought that lots of the window managers out there were
getting it all wrong, and wanted to get it right.  Fvwm2 was a
reasonable starting place, but GWM was almost used.  Scwm was born not
out of a "geez, if only fvwm2 could do this", but more out of a "we want 
a wm like this and fvwm2 might be a place to start to get up and running 
quickly".

> I'm not trying to slight anybody, but all of this divergence just doesn't
> seem to be in the spirit of cooperation that this free software thing is
> supposed to be.  Saying "our way is superior" isn't any kind of
> justification.  Saying "we tried to talk about it and nobody listened"
> definitely is, but I just don't recall any of that.

But our way is superior! :-)

The biggest reason scwm was not discussed here (given my remarks above)
is that I was not the one who split it off, and only got involved in
scwm development at version 0.2.

> GB> This is exactly what scwm is designed to be; we already have the menu
> GB> drawing code abstracted out, we are ripping the window decoration stuff
> GB> out, and we're reworking the event model completely.
> 
> But why does this all have to be tied to scheme?.  It's not really that bad

It doesn't have to be tied to scheme at all-- that's why we chose Guile
since it's one of their goals to have Scheme, Ctax, Lisp, etc., all
working from the same infrastructure.  I considered using perl for a
while, but guile's multiple front-ends and simplicity were hard to overlook.

> and if no better alternative comes about then I suppose I'll have no other
> choice, but the language should be just another module that tells the core
> what events to bind (and feeds events to the core itself).  The language
> should not _be_ the core.

I tend to disagree.  Scwm is guile with primitives for managing
windows.  The language is the framework within which the window manager
is written.  I think choosing to make the language infrastructure
decision a module would've unnecessarily complicated the design
dramatically.  The point is getting a real language available to the
window manager and its configuration.

> GB> Yes, one extensible window manager should be enough.  But that window
> GB> manager is *not* fvwm2 -- not without major changes.
> 
> But you made those major changes.  You could have picked up all of the fvwm
> development effort for free if you had wanted to, just by saying "here's a
> plan for fvwm3; I'm going to eventually do this anyway but I want to
> include you folks in it."  Now we have confusion and work going towards
> post-2.1 fvwm that could be going into your project.  (You could say,
> though, that you'd never get any consensus, but that's hard to say.)

There are others who work on fvwm2 who are interested in scwm.  One of
the reasons for branching from fvwm2 was that it has one of the most
active development communities, and we can provide a reasonable upgrade
path.  If it's pretty painless to switch to scwm from fvwm, then I see
no reason for fvwm2 development to continue (certainly my efforts will
be directed elsewhere, but my efforts are such a tiny fraction of fvwm2
that it's insignificant) after the next stable version.  We want scwm to 
provide a superset of the functionality and configurability of fvwm2,
and it pretty much already does (not counting modules as that piece
still does not work).

> GB> The scwm project was born out of a desire to not reimplement the wheel
> GB> and is positioned to become the "Emacs of Window Managers",
> 
> You don't really want to say that, do you?  Emacs may be the paragon of
> extensibility, but the price is a lot more than some people want to pay for
> a few rectangles with buttons.  (I do everything in emacs, but I'm not sure
> I want it managing my windows.)

Right, and there are other wm-s for those who value low memory
consumption in exchange for configurability.  e.g., wm2, fvwm1 (and to a 
lesser extent fvwm2).

> In the spirit of optimism I'll say that its never too late to do anything,
> but that scwm may already have gone in a direction that the fvwm folks just
> don't find interesting.  I don't really know.  Am I the only one that
> really cares about this?  Does anyone besides Greg and I have an opinion
> here?

Scwm isn't for all fvwm2 folks -- it's a fundamental rethinking of what
a wm could (and should, to us) be.  As such, it's never going to be
fvwm3, but we think it's a more useful place for developer energy to
focus.

Greg J. Badros
gjb@cs.washington.edu
Seattle, WA  USA
http://www.cs.washington.edu/homes/gjb
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:22:02 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:22:02 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id QAA07396; Wed, 10 Dec 1997 16:21:56 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 16:21:56 -0600
In-Reply-To: Dan Espen's message of Wed, 10 Dec 1997 17:08:25 -0500
Message-ID: <ufaen3ket4r.fsf@sina.hpc.uh.edu>
Lines: 20
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "DE" == Dan Espen <dane@mk.bellcore.com> writes:

DE> In scwm's defense, I notice that there seems to be active development
DE> in the ctwm camp, so I guess that fvwm2 is a spinoff also.

Oops; I forget that fvwm is in no way the original.  I can only say that
when people started up different development projects back then, things
were different.  Now I think there has to be a major push for quality and
that development groups can't be frivolous with talent.  The fact that it
happened before is no reason for it to happen now.

DE> But really, we are only making a tiny fraction of the progess possible
DE> with all these variants.  Its a damn shame.

It seems to be that way all over.  Emacs/XEmacs, Gnome/KDE, etc.  But with
fvwm we have no "RMS attitude" and no Qt license issues.  Instead we have
two pieces of software with essentially the same design philosophies and
implementation.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:27:57 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:27:57 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id QAA07517; Wed, 10 Dec 1997 16:27:50 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id OAA28384; Wed, 10 Dec 1997 14:27:18 -0800 (PST)
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <ufaen3ket4r.fsf@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 14:27:18 -0800
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 16:21:56 -0600"
Message-ID: <qrrra7k3kc9.fsf@elwha.cs.washington.edu>
Lines: 7
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> It seems to be that way all over.  Emacs/XEmacs, Gnome/KDE, etc.  But with

FWIW, scwm is part of the Gnome project last I heard.

Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:28:54 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:28:54 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id QAA07553 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 16:28:40 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id OAA28336; Wed, 10 Dec 1997 14:25:03 -0800 (PST)
To: Dan Espen <dane@mk.bellcore.com>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 14:25:02 -0800
In-Reply-To: Dan Espen's message of "Wed, 10 Dec 1997 17:08:25 -0500"
Message-ID: <qrrsos03kg1.fsf@elwha.cs.washington.edu>
Lines: 26
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Dan Espen <dane@mk.bellcore.com> writes:

>   It's like you read my mind.
> 
>   There must be a way that we can all work together.
> 
>   In scwm's defense,  I notice that there seems to be active development
> in the ctwm camp, so I guess that fvwm2 is a spinoff also.

And I'd claim that the difference between scwm and fvwm2 (now only 3
months into development, or so) is more fundamental (if not greater)
than between fvwm2 and ctwm.

>   But really, we are only making a tiny fraction of the progess possible
> with all these variants.  Its a damn shame.

Our hope with scwm is to be a superset of a handful of wm-s, and invite
development to continue on scwm alone.  If fvwm2, ctwm, piewm, Afterstep, 
etc., users all could switch to scwm painlessly, then maybe we'd have a
chance of combining these efforts.  Some window managers (e.g., wm2)
have fundamentally different goals (really small memory footprint) and
the best we'll be able to do is get a module for their look so people
who like the look can have it w/o giving up the behavioural flexibility
of scwm.

Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:41:54 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:41:54 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id QAA07916; Wed, 10 Dec 1997 16:41:45 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712101743.MAA18266@castle.mk.bellcore.com> <qrrg1o13wmg.fsf@elwha.cs.washington.edu> <ufak9dddj8h.fsf_-_@sina.hpc.uh.edu> <qrr4t4g52rf.fsf@elwha.cs.washington.edu> <ufahg8geut4.fsf@sina.hpc.uh.edu> <qrru3cg3kqm.fsf@elwha.cs.washington.edu>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 16:41:45 -0600
In-Reply-To: Greg Badros's message of 10 Dec 1997 14:18:41 -0800
Message-ID: <ufad8j4es7q.fsf@sina.hpc.uh.edu>
Lines: 83
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:

GB> As much as we'd like to think it, fvwm2 is *not* the only wm
GB> around.

Never said it was.  It doesn't really affect things.

GB> The bottom line is that several people independently thought that lots
GB> of the window managers out there were getting it all wrong, and wanted
GB> to get it right.

But if they were all 'wrong', why didn't you start from scratch?

GB> Fvwm2 was a reasonable starting place, but GWM was almost used.  Scwm
GB> was born not out of a "geez, if only fvwm2 could do this", but more out
GB> of a "we want a wm like this and fvwm2 might be a place to start to get
GB> up and running quickly".

Wouldn't it have been nicer to get up and running with all of the
development folks, too?  You see, I still haven't seen a good reason.

GB> The biggest reason scwm was not discussed here (given my remarks above)
GB> is that I was not the one who split it off, and only got involved in
GB> scwm development at version 0.2.

I'm beginning to realize that after reading the announcements.

GB> It doesn't have to be tied to scheme at all-- that's why we chose Guile
GB> since it's one of their goals to have Scheme, Ctax, Lisp, etc., all
GB> working from the same infrastructure.  I considered using perl for a
GB> while, but guile's multiple front-ends and simplicity were hard to
GB> overlook.

Perl is probably too heavy for this.  (I use perl for just about everything
I do, but like emacs I don't want it in my window manager.) 

>> and if no better alternative comes about then I suppose I'll have no
>> other choice, but the language should be just another module that tells
>> the core what events to bind (and feeds events to the core itself).  The
>> language should not _be_ the core.

GB> I tend to disagree.

In light of your previous paragraph (quoted above), this seems to be
contradictory.  If its language independent to the degree that you could
use perl if you wanted to, then you have a library.  Or have I
misunderstood you?

GB> There are others who work on fvwm2 who are interested in scwm.  One of
GB> the reasons for branching from fvwm2 was that it has one of the most
GB> active development communities, and we can provide a reasonable upgrade
GB> path.

Again, I ask: then why branch at all?  The feeling I get is that something
like scwm was what just about everyone involved with fvwm has wanted.

GB> If it's pretty painless to switch to scwm from fvwm, then I see no
GB> reason for fvwm2 development to continue (certainly my efforts will be
GB> directed elsewhere, but my efforts are such a tiny fraction of fvwm2
GB> that it's insignificant) after the next stable version.

But that begs the same question again.  The point is that if everyone
involved makes the effort, scwm could be _the_ upgrade path.  (Although it
might be nice to capitalize on the name recognition and call it fvwmSC or
something.)

GB> Scwm isn't for all fvwm2 folks -- it's a fundamental rethinking of what
GB> a wm could (and should, to us) be.  As such, it's never going to be
GB> fvwm3, but we think it's a more useful place for developer energy to
GB> focus.

How can you say what fvwm3 would be?  Especially if scwm hadn't
fragmented...

Besides, it looks as if fvwm3 may never exist because the spinoffs have
sucked away the critical mass of interest.  That makes scwm as good a
choice as any, and perhaps a better choice than most.

If I'm not confused, you still need to deal with the popular fvwm modules.
There's some good functionality there, and I hope that the plan wasn't to
just split development of the modules, too.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 16:49:32 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 16:49:32 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id QAA08046; Wed, 10 Dec 1997 16:49:25 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <ufaen3ket4r.fsf@sina.hpc.uh.edu> <qrrra7k3kc9.fsf@elwha.cs.washington.edu>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 16:49:25 -0600
In-Reply-To: Greg Badros's message of 10 Dec 1997 14:27:18 -0800
Message-ID: <ufaafe8eruy.fsf@sina.hpc.uh.edu>
Lines: 79
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:

GB> FWIW, scwm is part of the Gnome project last I heard.

On the Gnome list just yesterday I believe they said they don't want to
connect it to a window manager.  I'll have to look up a reference....

Here's one (sorry for not doing proper MIME inclusion):

To: Edward Betts <edward@hairnet.demon.co.uk>
Cc: gnome@nuclecu.unam.mx
Subject: Re: Is gnome a windows manager?
References: <01bd0230$1f2758c0$0400a8c0@pyramid.hairnet>
X-Url: http://www.jimpick.com/
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: multipart/signed; protocol="application/pgp-signature";
 boundary="pgp-sign-Multipart_Sat_Dec__6_16:07:43_1997-1"; micalg=pgp-md5
Content-Transfer-Encoding: 7bit
From: Jim Pick <jim@jimpick.com>
Date: 06 Dec 1997 16:08:00 -0800
In-Reply-To: Edward Betts's message of "Sat, 6 Dec 1997 10:17:13 -0000"
Message-ID: <87en3qxbfj.fsf@fleming.jimpick.com>
X-Mailer: Gnus v5.4.66/XEmacs 20.2
X-Face:  Hz"C77\53<,u1}C~=DFwS#Ddj161XLl6W!3g7xjxh*P'`FF^-IYQXX$a*WC~=^8rvy"~<3z
 UeQqGo&KZe[}lJg`\+SDMGRVIUJ~P,#(=w~yYv{g9i%"k|\J|jYVvv^Bzfwo=@AddrDMO<xV_IAl`(
 TW7;|vH6Kik(,iljluXex0vrnM:SedI@lbAeNvM
Sender: owner-gnome@nuclecu.unam.mx
Precedence: bulk
Lines: 47
Xref: sina.hpc.uh.edu gnome:566


--pgp-sign-Multipart_Sat_Dec__6_16:07:43_1997-1
Content-Type: text/plain; charset=US-ASCII


Edward Betts <edward@hairnet.demon.co.uk> writes:

> but where is the windows manager? is there something like
> startkde ?? I have played with some of the programs, but i am yet to find
> the windows manager

Gnome does not include a window manager.  It should be able to run with
any window manager.  Think of it as more of a collection of applications
and libraries.  Try the 'panel' application - it will create an application
launching menu at the bottom of your screen.  You can access the other
Gnome apps from there.

Maciej Stachowiak is a Gnome contributor and is working on a Scheme based
window manager:

http://web.mit.edu/mstachow/www/scwm.html

It will probably work very nicely with Gnome (I haven't tried it yet).  But,
I think it's been decided that Gnome is not going to depend on or prefer any
single window manager.

Cheers,

 - Jim

--pgp-sign-Multipart_Sat_Dec__6_16:07:43_1997-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP MESSAGE-----
Version: 2.6.3a
Comment: Processed by Mailcrypt 3.4, an Emacs/PGP interface

iQCVAwUBNIno3uQz770qyIfJAQG61wP+OuQ0J+q45s1crFASU6QVGGqzqQSeIJ1d
6HS3Ddx046lursd3UOoGHRPHGyzWSB7jaBeHq1FmxrZbj7hqszRdYmdU40hBRiTw
8aW+/bZM/l9jDJtTKZpEUy3nsJU4AeudytPgqxfBlji8E379WXrt2MewOVMqUTrB
3OT9R8AJIu0=
=dKu6
-----END PGP MESSAGE-----

--pgp-sign-Multipart_Sat_Dec__6_16:07:43_1997-1--

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 17:06:00 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 17:06:00 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id RAA08299; Wed, 10 Dec 1997 17:05:54 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <qrrsos03kg1.fsf@elwha.cs.washington.edu>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 17:05:54 -0600
In-Reply-To: Greg Badros's message of 10 Dec 1997 14:25:02 -0800
Message-ID: <ufa90tser3h.fsf@sina.hpc.uh.edu>
Lines: 24
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:

GB> And I'd claim that the difference between scwm and fvwm2 (now only 3
GB> months into development, or so) is more fundamental (if not greater)
GB> than between fvwm2 and ctwm.

Not from where I see it.  To me, over ctwm fvwm2 has modules and an attempt
at an internal language.  Over fvwm2, scwm has, a real internal language,
which is something that we always wanted fvwm to have.  I don't see much
difference at all.  Sure, it has substantive code differences but not
substantive philosophical differences.

GB> Our hope with scwm is to be a superset of a handful of wm-s, and invite
GB> development to continue on scwm alone.

I don't recall seeing an invitation.  I guess that's the point of all of
this.  Until now nobody's talking, and in the end it's all about
communication.  The reason I'm going to all of this trouble is to show that
(IMHO) scwm has a good chance of subsuming fvwm development almost
entirely.  (Again, that's IMHO; I won't speak for anyone else here.)  But
it's getting a little late in the game for that, and it seems to me rather
daft for the scwm folks not to have done anything about it so far.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 17:38:41 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 17:38:41 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id RAA09081; Wed, 10 Dec 1997 17:38:34 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id PAA28832; Wed, 10 Dec 1997 15:38:19 -0800 (PST)
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <ufaen3ket4r.fsf@sina.hpc.uh.edu> <qrrra7k3kc9.fsf@elwha.cs.washington.edu> <ufaafe8eruy.fsf@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 15:38:19 -0800
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 16:49:25 -0600"
Message-ID: <qrrpvn43h1w.fsf@elwha.cs.washington.edu>
Lines: 14
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> >>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:
> 
> GB> FWIW, scwm is part of the Gnome project last I heard.
> 
> On the Gnome list just yesterday I believe they said they don't want to
> connect it to a window manager.  I'll have to look up a reference....
> 

Your information is more recent than mine -- I was basing my statement
only on the GNOME Web page which listed scwm as part of GNOME last I checked.

Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 17:48:46 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 17:48:46 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id RAA09298 for <fvwm-workers@hpc.uh.edu>; Wed, 10 Dec 1997 17:48:39 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id PAA28849; Wed, 10 Dec 1997 15:48:22 -0800 (PST)
To: Greg Badros <gjb@cs.washington.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <qrrsos03kg1.fsf@elwha.cs.washington.edu> <ufa90tser3h.fsf@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 17:05:54 -0600"
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Date: 10 Dec 1997 15:48:22 -0800
Message-ID: <qrrn2i83gl5.fsf@elwha.cs.washington.edu>
Lines: 66
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> >>>>> "GB" == Greg Badros <gjb@cs.washington.edu> writes:
> 
> GB> And I'd claim that the difference between scwm and fvwm2 (now only 3
> GB> months into development, or so) is more fundamental (if not greater)
> GB> than between fvwm2 and ctwm.
> 
> Not from where I see it.  To me, over ctwm fvwm2 has modules and an attempt
> at an internal language.  Over fvwm2, scwm has, a real internal language,

Modules are a terrible hack at getting a real language -- they serve the 
same fundamental purpose.

> which is something that we always wanted fvwm to have.  I don't see much
> difference at all.  Sure, it has substantive code differences but not
> substantive philosophical differences.

scwm also is separating out the major interfaces so that small plug-in C 
code can decorate windows, draw menus, etc.

> 
> GB> Our hope with scwm is to be a superset of a handful of wm-s, and invite
> GB> development to continue on scwm alone.
> 
> I don't recall seeing an invitation.  I guess that's the point of all of
> this.  Until now nobody's talking, and in the end it's all about

Because in the early stages of a project, many people tend to hinder,
not help development.  We needed to get an infrastructure implemented
and working before having lots of contributing developers.  Even on the
scwm list people have gotten a bit frustrated with us being when they
report bugs, we say "Thanks much, but in fact, that entire piece of code 
has just been rewritten from scratch, so your bug has been replaced with 
other unrelated ones".   There is a tension between moving development
along quickly, and providing a reasonably stable version from which
modifications can be made.  We've still got a small handful of rewrites
(each of which is a weekend project) before the infrastructure and
interfaces will be semi-stable.

Your point about communication is well taken, and is why I'm really glad 
we're having this conversation now.  We're on the same team...

> communication.  The reason I'm going to all of this trouble is to show that
> (IMHO) scwm has a good chance of subsuming fvwm development almost
> entirely.  (Again, that's IMHO; I won't speak for anyone else here.)  But

I'd like to see this happen as there's definitely good work done on fvwm2.

> it's getting a little late in the game for that, and it seems to me rather
> daft for the scwm folks not to have done anything about it so far.

It's because of the infrastructure issue --- as a simplistic example,
consider reindenting all the code -- no patches made before the reindentation
will easily apply after the indentation.  Similarly for all the
non-trivial re-architecting we've done.  Our standard error handling and 
type handling idioms aren't yet set in stone.  Recent effort has spent
some time on formalizing these and writing developer documentation, but
it's not done yet.

We're close, and I encourage developers capable of writing solid code
who are interested in contributing to take a look at scwm and see what
we've got -- we intend to make nightly snapshots available soon, as the
last semi-stable release is considerably behind where the sources now stand.

Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 18:05:48 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 18:05:48 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id SAA09784; Wed, 10 Dec 1997 18:05:38 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id QAA28916; Wed, 10 Dec 1997 16:05:21 -0800 (PST)
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712101743.MAA18266@castle.mk.bellcore.com> <qrrg1o13wmg.fsf@elwha.cs.washington.edu> <ufak9dddj8h.fsf_-_@sina.hpc.uh.edu> <qrr4t4g52rf.fsf@elwha.cs.washington.edu> <ufahg8geut4.fsf@sina.hpc.uh.edu> <qrru3cg3kqm.fsf@elwha.cs.washington.edu> <ufad8j4es7q.fsf@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
Date: 10 Dec 1997 16:05:20 -0800
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 16:41:45 -0600"
Message-ID: <qrrlnxs3fsv.fsf@elwha.cs.washington.edu>
Lines: 98
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> But if they were all 'wrong', why didn't you start from scratch?

Because we wanted to be up and going faster than that would
necessitate.  We have been replacing fvwm2 functionality piecewise with
cleaner versions with well-dilineated interfaces, and moving appropriate 
functionality out of the C code, into the scheme code where performance
was not essential.

> >> and if no better alternative comes about then I suppose I'll have no
> >> other choice, but the language should be just another module that tells
> >> the core what events to bind (and feeds events to the core itself).  The
> >> language should not _be_ the core.
> 
> GB> I tend to disagree.
> 
> In light of your previous paragraph (quoted above), this seems to be
> contradictory.  If its language independent to the degree that you could
> use perl if you wanted to, then you have a library.  Or have I
> misunderstood you?

More precise: the *language* is not the core, but the choice of language
implementation infrastrcture is.  ie. it's not Scheme that matters, but
the guile way of interfacing primitives to the dynamic configuration
language.  Any choice made regarding this is pervasive in the system and 
is difficult to permit to be interchangeable.

> GB> There are others who work on fvwm2 who are interested in scwm.  One of
> GB> the reasons for branching from fvwm2 was that it has one of the most
> GB> active development communities, and we can provide a reasonable upgrade
> GB> path.
> 
> Again, I ask: then why branch at all?  The feeling I get is that something
> like scwm was what just about everyone involved with fvwm has wanted.

I didn't necessarily have that sentiment, but anyway you look at it, a
branch is necessary for parallel development -- either a CVS branch or a 
split source tree.  I think the latter was chosen because I believe
Maciej's intent is/was to rewrite all the code eventually to permit GPL
as the sole distribution terms. 

> 
> GB> If it's pretty painless to switch to scwm from fvwm, then I see no
> GB> reason for fvwm2 development to continue (certainly my efforts will be
> GB> directed elsewhere, but my efforts are such a tiny fraction of fvwm2
> GB> that it's insignificant) after the next stable version.
> 
> But that begs the same question again.  The point is that if everyone
> involved makes the effort, scwm could be _the_ upgrade path.  (Although it
> might be nice to capitalize on the name recognition and call it fvwmSC or
> something.)

Sometimes changing a name is necessary to make it clear that there's
something fundamentally different happening.  (I'm not sure I've
convinced you that that's the case, but that's our goal).

> 
> GB> Scwm isn't for all fvwm2 folks -- it's a fundamental rethinking of what
> GB> a wm could (and should, to us) be.  As such, it's never going to be
> GB> fvwm3, but we think it's a more useful place for developer energy to
> GB> focus.
> 
> How can you say what fvwm3 would be?  Especially if scwm hadn't
> fragmented...

I can't but the discussion on this list has generally been about very
simple changes and incremental improvements.

> Besides, it looks as if fvwm3 may never exist because the spinoffs have
> sucked away the critical mass of interest.  That makes scwm as good a
> choice as any, and perhaps a better choice than most.
> 
> If I'm not confused, you still need to deal with the popular fvwm modules.
> There's some good functionality there, and I hope that the plan wasn't to
> just split development of the modules, too.

Nope... as I mentioned before, modules are really high on my list to get 
working again as the lack of a pager is the main reason for my not using 
scwm as my main wm yet (still using a patched fvwm2).

Like I said, we're on the same team, and the communication channels are
definitely open.  Maciej and I don't mean to alienate anyone by doing
early stages of development more privately -- we just felt that that was 
best while code is/was changing dramatically.

Your input is valuable, and we encourage more of the same -- the scwm
url is :

http://web.mit.edu/mstachow/www/scwm.html

and I encourage fvwm2 folks who are intrigued to take a look.

Thanks,
Greg J. Badros
gjb@cs.washington.edu
Seattle, WA  USA
http://www.cs.washington.edu/homes/gjb
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 10 23:31:42 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 10 Dec 1997 23:31:42 -0600 (CST)
Received: (from tibbs@localhost) by sina.hpc.uh.edu (8.7.3/8.7.3) id XAA13584; Wed, 10 Dec 1997 23:31:35 -0600 (CST)
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <qrrsos03kg1.fsf@elwha.cs.washington.edu> <ufa90tser3h.fsf@sina.hpc.uh.edu> <qrrn2i83gl5.fsf@elwha.cs.washington.edu>
Mime-Version: 1.0 (generated by tm-edit 7.100)
Content-Type: text/plain; charset=US-ASCII
From: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Date: 10 Dec 1997 23:31:35 -0600
In-Reply-To: Greg Badros's message of 10 Dec 1997 15:48:22 -0800
Message-ID: <ufa7m9ce98o.fsf@sina.hpc.uh.edu>
Lines: 32
X-Mailer: Gnus v5.4.46/Emacs 19.34
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

>>>>> "H" == Greg Badros <gjb@cs.washington.edu> writes:

H> scwm also is separating out the major interfaces so that small plug-in C
H> code can decorate windows, draw menus, etc.

Some people wanted that, and I do recall that it was rejected in the short
term because it would require too many changes.  There were also some
questions as to efficiency, but nobody ever provided any hard data.  I'd be
interested to see what the tradeoffs were.  (I figured it could be done
with very little overhead.)

H> Because in the early stages of a project, many people tend to hinder,
H> not help development.

OK, I can understand that.  I've been at that phase with Majordomo, but its
large enough that someone could work on a piece for quite a while before I
got back to it.  Something weird is that with Majordomo I threw away _all_
of the existing code but kept the name; you kept some code (at least for
the near term) and changed the name.  Name recognition is important to me;
I'm probably keeping less backwards compatibility with Majordomo than
you're keeping with fvwm->scwm, but if I were to lose the name I'd lose
almost all interest.

H> Your point about communication is well taken, and is why I'm really glad
H> we're having this conversation now.  We're on the same team...

Good enough for me.  Keep the fvwm development community in mind for the
time when you want more developers.  Also, if your team needs any
infrastructure (lists, web pages, etc.) just ask.  I see you have most of
that, although I don't see any kind of list archives.

 - J<
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 00:31:53 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 00:31:53 -0600 (CST)
Received: from pcnet1.pcnet.com (pcnet1.pcnet.com [204.213.232.3]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id AAA14393 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 00:31:45 -0600 (CST)
Received: from drbob.woodsway.com (ts9-pt15.pcnet.com [199.249.196.115])
	by pcnet1.pcnet.com (8.8.7/PCNet) with ESMTP id BAA03326;
	Thu, 11 Dec 1997 01:27:19 -0500 (EST)
Received: (from root@localhost)
	by drbob.woodsway.com (8.8.5/8.8.5) id BAA01012;
	Thu, 11 Dec 1997 01:26:09 -0500
Message-ID: <XFMail.971211012604.proteus@pcnet.com>
X-Mailer: XFMail 1.2-beta-111797 [p0] on Linux
X-Priority: 3 (Normal)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
In-Reply-To: <9712101511.AA29648@cold.fishkill.ibm.com>
Date: Thu, 11 Dec 1997 01:26:04 -0500 (EST)
Reply-To: Bob Woodside <proteus@pcnet.com>
Organization: Woodsway Consulting
From: Bob Woodside <proteus@pcnet.com>
To: Charles Hines <chuck_hines@VNET.IBM.COM>
Subject: Re: FVWM: window flags bitfield
Cc: fvwm-workers@hpc.uh.edu
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


        Whew! It's been a busy day in the neighborhood! Think I'll stay
out of the emotional thread and stick to this one. It's been a long day,
and a nasty, snowy drive home.

On 10-Dec-97 Charles Hines wrote:

> So, what I thought of for the GSFR was this: change the flags variable
> from an unsigned int accessed via bitmasks to a union of an array of
> unsigned ints and bitfields, perhaps like this:

                 [snip]

> (or perhaps that extra struct isn't needed, I'll have to test that). 

        I'm not sure what the extra level of struct and union will buy
us. I suspect that it may cause some compilers, at least, to generate
more convoluted code than they need to. But, as you say, this could
stand some testing on a variety of systems and compilers.

        Also, you might consider whether you want to split the flags
into 2 groups: the style-related flags (which the style code cares about
outside of the context of any window), and the window-state flags. A
style-flag struct that's common to the style and window code doesn't
really need to carry window-state flags.

        Otherwise, I really like the idea. Dan's first test suggests
some possible reservations, of course, but it'd be nice to see that
sort of thing done in a few different environments before we decide to
panic. And, as I replied to Dan, I'd like to see a little refinement
of the test.

        - Bob



 
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 00:33:11 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 00:33:11 -0600 (CST)
Received: from pcnet1.pcnet.com (pcnet1.pcnet.com [204.213.232.3]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id AAA14457 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 00:32:57 -0600 (CST)
Received: from drbob.woodsway.com (ts9-pt15.pcnet.com [199.249.196.115])
	by pcnet1.pcnet.com (8.8.7/PCNet) with ESMTP id BAA03401;
	Thu, 11 Dec 1997 01:28:31 -0500 (EST)
Received: (from root@localhost)
	by drbob.woodsway.com (8.8.5/8.8.5) id BAA01034;
	Thu, 11 Dec 1997 01:27:21 -0500
Message-ID: <XFMail.971211012721.proteus@pcnet.com>
X-Mailer: XFMail 1.2-beta-111797 [p0] on Linux
X-Priority: 3 (Normal)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
In-Reply-To: <199712102029.PAA20973@castle.mk.bellcore.com>
Date: Thu, 11 Dec 1997 01:27:21 -0500 (EST)
Reply-To: Bob Woodside <proteus@pcnet.com>
Organization: Woodsway Consulting
From: Bob Woodside <proteus@pcnet.com>
To: Dan Espen <dane@mk.bellcore.com>
Subject: Re: FVWM: window flags bitfield
Cc: fvwm-workers@hpc.uh.edu
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


On 10-Dec-97 Dan Espen wrote:
> psmith@BayNetworks.COM (Paul D. Smith) writes:
>> %% Dan Espen <dane@mk.bellcore.com> writes:
>> 
>>   de> I just coded up a small test case.  I'll mail details if anyone wants.
>> 
>> Me, please.
> 
> OK.
> 
> Heres bitf.c:

                  [snip]

        I don't think this is a totally accurate comparison. The bitfields are
imbedded within a struct within a union within a struct, whereas the int is
just a stand-alone variable. Wonder what would happen if you imbedded the int
"old_way" within another struct that mimicked the FvwmWindow.flags.f setup?
The bitfields might still lose, but I suspect it'd be a closer contest. Mind
you, I have no knowledge of your compiler, so I can't claim it's anything more
than a suspicion. Just a thought....

        - Bob



 
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 08:51:42 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 08:51:42 -0600 (CST)
Received: from tempest.pdnt.net (root@tempest.pdnt.net [207.15.29.25]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id IAA19667 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 08:51:36 -0600 (CST)
Received: from DAR.cu-online.com (mail.eresnet.com [205.198.248.159])
	by tempest.pdnt.net (8.8.7/8.8.7) with SMTP id IAA12072;
	Thu, 11 Dec 1997 08:47:59 -0600 (CST)
Message-Id: <3.0.5.32.19971211085005.00803970@pdnt.com>
X-Sender: darogers@pdnt.com
X-Mailer: QUALCOMM Windows Eudora Light Version 3.0.5 (32)
Date: Thu, 11 Dec 1997 08:50:05 -0600
To: Dan Espen <dane@mk.bellcore.com>, fvwm-workers@hpc.uh.edu
From: "David A. Rogers" <darogers@pdnt.com>
Subject: Re: FVWM: window flags bitfield 
In-Reply-To: <199712102029.PAA20973@castle.mk.bellcore.com>
References: <Your message of 10 Dec 1997 14:01:05 -0500.             <p5n2i9c9am.fsf@baynetworks.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

At 03:29 PM 12/10/97 -0500, Dan Espen wrote:
>So to set a bit the new way (11 instructions):
>
>!   56	  tmp_win.flags.f.Iconified = 1;
>
>	sethi	%hi(tmp_win),%l3
>	or	%l3,%lo(tmp_win),%l3
>	mov	1,%l0
>	and	%l0,1,%l0
>	sll	%l0,15,%l2
>	ld	[%l3+0],%l0
>	sethi	32,%l1
>	xor	%l1,-1,%l1
>	and	%l0,%l1,%l0
>	or	%l0,%l2,%l0
>	st	%l0,[%l3+0]
>
>Vs. the old way (7 instructions):
>
>!   71	  old_way |= ICONIFIED;
>
>	sethi	%hi(old_way),%l0
>	or	%l0,%lo(old_way),%l0
>	ld	[%l0+0],%l0
>	or	%l0,2,%l1
>	sethi	%hi(old_way),%l0
>	or	%l0,%lo(old_way),%l0
>	st	%l1,[%l0+0]
>
>

I know UNIX/Linux programmers like to optimize everything, but _four
instructions_???  Surely, time is better spent on other things.

Regards,
David

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 09:12:30 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 09:12:30 -0600 (CST)
Received: from vnet.IBM.COM (vnet.ibm.com [204.146.168.194]) by sina.hpc.uh.edu (8.7.3/8.7.3) with SMTP id JAA19942 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 09:12:22 -0600 (CST)
Received: from FISHKILL by vnet.IBM.COM (IBM VM SMTP V2R4) with BSMTP id 6114;
   Thu, 11 Dec 97 10:11:51 EST
Received: by FISHKILL (XAGENTA 4.0) id 6484; Thu, 11 Dec 1997 10:11:48 -0500 
Received: by cold.fishkill.ibm.com (AIX 4.1/UCB 5.64/4.03)
          id AA47190; Thu, 11 Dec 1997 10:11:44 -0500
Date: Thu, 11 Dec 1997 10:11:44 -0500
Message-Id: <9712111511.AA47190@cold.fishkill.ibm.com>
From: "Charles Hines" <chuck_hines@vnet.IBM.COM>
To: The FVWM Discussion List <fvwm@hpc.uh.edu>,
        The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Thankfully, the mailing lists are archived...
X-Mailer: VM 6.34 under 20.3 "Vatican City" XEmacs  Lucid
X-Face: 'pn"gAx+&w4-=-}\z>*.Y*@(lC;t1<P);@iwiv';)vn3H2\/.x#;>J[a,/Q.Yv0^Wwc6_"H]}}-"?%)ETS`1v[]P`w4,E.9Bgf*XI4<H{C}Mf@'Ms)z?Bqzf"8v/oY\9K){w}\pw
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


Howdy all.

Just wanted to send a quick note saying that my mail died for a few
hours yesterday, and I lost a lot of the very good discussion (and
emotional feud) that was generated.  But, as the subject says,
thankfully the mailing lists are archvied, so I'm catching up on
everything that I missed...

A few notes on things I've seen so far:

        - I had also coded up a bitfield vs bitmasks test like Dan
          did, and under AIX (have to try Linux still) running like
          100,000,000 sets & clears, the times it took for each (under
          both xlc and gcc) were VERY similar.  Didn't compare the
          generated assembler though, I'll have to do that.  But since
          the times are so similar, I doubt a performance hit will
          actually be noticed.  The times, in case anyone is
          interested:

       AIX xlc -g:          23 seconds for both
               -O2:         3 seconds for bitfield, 0 for bitwise &/|
       AIX gcc 2.7.2.1 -g:  29 for bitfield, 27 for bitwise
                       -O2: 6 seconds for both

          Still need to do some more testing though.

        - I like all of the feedback I saw.  Thanks!  Still reading it
          all...

I'll try and make more responses to mail I missed as I can.  If anyone
sent anything to me directly and didn't copy the list, you may want to
resend it...

Thanks,
Chuck

--
*******************************************************************************
Charles K. Hines <chuck_hines@vnet.ibm.com>
IBM Logic Synthesis Developer [BooleDozer (TM)]
Martial Arts Instructor [Modern Arnis, Presas Style Filipino Martial Arts]

         "Go back to sleep, Chuck.  You're just havin' a nightmare
             -- of course, we ARE still in Hell." (Gary Larson)
*******************************************************************************
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 12:00:08 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 12:00:08 -0600 (CST)
Received: from elwha.cs.washington.edu (elwha.cs.washington.edu [128.95.1.153]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id LAA22257; Thu, 11 Dec 1997 11:59:58 -0600 (CST)
Received: (gjb@localhost) by elwha.cs.washington.edu (8.8.5+CS/7.2ws+) id JAA02416; Thu, 11 Dec 1997 09:59:44 -0800 (PST)
To: Jason L Tibbitts III <tibbs@hpc.uh.edu>
Cc: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? (Was: window flags bitfield)
References: <199712102208.RAA22803@castle.mk.bellcore.com> <qrrsos03kg1.fsf@elwha.cs.washington.edu> <ufa90tser3h.fsf@sina.hpc.uh.edu> <qrrn2i83gl5.fsf@elwha.cs.washington.edu> <ufa7m9ce98o.fsf@sina.hpc.uh.edu>
From: Greg Badros <gjb@cs.washington.edu>
Date: 11 Dec 1997 09:59:44 -0800
In-Reply-To: Jason L Tibbitts III's message of "10 Dec 1997 23:31:35 -0600"
Message-ID: <qrriusv3gmn.fsf@elwha.cs.washington.edu>
Lines: 41
X-Mailer: Gnus v5.4.65/XEmacs 20.3 - "Vatican City"
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Jason L Tibbitts III <tibbs@hpc.uh.edu> writes:

> Some people wanted that, and I do recall that it was rejected in the short
> term because it would require too many changes.  There were also some
> questions as to efficiency, but nobody ever provided any hard data.  I'd be
> interested to see what the tradeoffs were.  (I figured it could be done
> with very little overhead.)

Re: the tradeoffs, it's hard to say, yet.  I've abstracted clean
interfaces, but not written a second implementation.  Obviously
simplicity of interface trades off with flexibility, but I tried to
remain flexible so that different menu code implementations could vary
pretty widely and support button-bar menus, pie menus, horizontal menus, 
table menus, etc.  Menus in scwm will not need to do a server grab --
rip-offs will be allowed, replacing button bar functionality.

> H> Because in the early stages of a project, many people tend to hinder,
> H> not help development.
> 
> OK, I can understand that.  I've been at that phase with Majordomo, but its
> large enough that someone could work on a piece for quite a while before I
> got back to it.  Something weird is that with Majordomo I threw away _all_
> of the existing code but kept the name; you kept some code (at least for
> the near term) and changed the name.  Name recognition is important to me;
> I'm probably keeping less backwards compatibility with Majordomo than
> you're keeping with fvwm->scwm, but if I were to lose the name I'd lose
> almost all interest.
> 
> H> Your point about communication is well taken, and is why I'm really glad
> H> we're having this conversation now.  We're on the same team...
> 
> Good enough for me.  Keep the fvwm development community in mind for the
> time when you want more developers.  Also, if your team needs any
> infrastructure (lists, web pages, etc.) just ask.  I see you have most of
> that, although I don't see any kind of list archives.

I'm going to talk to Maciej about getting some of the cleanup and
policy-decisions ironed out so that we can really start asking for help
in development, and begin moving forward more rapidly.

Greg
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 15:07:51 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 15:07:51 -0600 (CST)
Received: from castle.mk.bellcore.com (castle.mk.bellcore.com [128.96.133.172]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id PAA25992 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 15:07:42 -0600 (CST)
Received: from mk.bellcore.com (fork [128.96.133.4])
	by castle.mk.bellcore.com (8.8.8/8.8.8) with ESMTP id QAA05563
	for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 16:06:53 -0500 (EST)
Message-Id: <199712112106.QAA05563@castle.mk.bellcore.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield 
In-reply-to: Your message of Thu, 11 Dec 1997 01:27:21 -0500.
             <XFMail.971211012721.proteus@pcnet.com> 
x-face: -:-!LDdizWr~[l?RsG!7/BSm'=,`y>~^N7a#qX+.-ZUy"%YF.bP?t_E$lZG54!X1`_>u8>V
 /DpeH-oUPJ".cJfU'!(om[k{>?!DzZP&UYPi!W/]`[K`Ga+S()<~)mZlm;m}0fId<>1}XS.O+zV%w"
 1)-+K#MqP:&_@FrPF}_}R?_\"z9mHc!)e{e/DNzDY&*QoH,HGZJP#LszzhoGERD7$J4ebNt9oh-nvL
 *IX4w6m=+qtbLQrrI{-jd2Q+(ZUg,a`n58O}z/zl"
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Thu, 11 Dec 1997 16:06:55 -0500
From: Dan Espen <dane@mk.bellcore.com>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Bob Woodside <proteus@pcnet.com> writes:

> I don't  think this is  a totally accurate comparison. The bitfields
> are imbedded within a struct within a union within a struct, whereas
> the int is just a stand-alone variable. Wonder  what would happen if
> you imbedded the  int "old_way" within  another struct that mimicked
> the FvwmWindow.flags.f setup?  The bitfields might still lose, but I
> suspect it'd be  a closer contest. Mind you,  I have no knowledge of
> your  compiler,   so  I  can't claim   it's   anything more  than  a
> suspicion. Just a thought....

I tried this:

#include <stdio.h>
#define NUM_INTS_FOR_FLAGS 2
typedef struct FvwmWindow {
  union flags {
    unsigned int allflags[NUM_INTS_FOR_FLAGS];
    struct f {
      unsigned int StartIconic:1;       /* 1 */
      unsigned int OnTop:1;             /* 2 */
...
      unsigned int t36:1;
    } f;
  } flags;
} FvwmWindow;

FvwmWindow tmp_win;

typedef struct OldWindow {
  unsigned long flags;
  unsigned long old_way;
} OldWindow;

OldWindow old_win;

main() {

  tmp_win.flags.f.t36 = 0;
  tmp_win.flags.f.t36 = 1;
  if (!tmp_win.flags.f.t36) {
    printf("It's off\n");
  }

#define ICONIFIED 2
  old_win.old_way &= ~ICONIFIED;
  old_win.old_way |= ICONIFIED;
  if (old_win.old_way & ICONIFIED) {
    printf("It's on\n");
  }
}


The results with  Suns 4.0 compiler are  the same.   I also tried  gcc
2.7.2.2.  With gcc it is a little harder to follow, they don't mark up
the assembler as well, but the results seemed to  be about the same as
with Sun's compiler.   With  optimization  I  got the  old  way at  10
instructions, the new way at 13.

It  does  seem like  the compilers aren't  doing a   very  good job of
figuring out   what  the  source code  is  doing.   The   source  code
instructions are equivalent.

After looking at all this, and  finally understanding what the GSFR is
all  about, I feel patch  writers should go ahead  and add flags using
whatever approach they like to  the Style structure and the FvwmWindow
structure.   Whenever and however the  GSFR happens,  a few additional
bits to worry about won't make a significant difference.

>         - Bob

--
Dan Espen                                Phone: (732) 699-5570
444 Hoes Lane  Room RRC 1C-214           E-mail: dane@mk.bellcore.com
Piscataway, NJ 08854
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 16:45:23 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 16:45:23 -0600 (CST)
Received: from lady-slings-the-booze.mit.edu (LADY-SLINGS-THE-BOOZE.MIT.EDU [18.244.0.66]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id QAA28655 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 16:45:16 -0600 (CST)
Received: (from mstachow@localhost)
	by lady-slings-the-booze.mit.edu (8.8.5/8.8.5) id RAA07399;
	Thu, 11 Dec 1997 17:45:17 -0500
Message-Id: <199712112245.RAA07399@lady-slings-the-booze.mit.edu>
To: fvwm-workers@hpc.uh.edu
Subject: Re: Why development spinoffs? 
Date: Thu, 11 Dec 1997 17:45:16 EST
From: Maciej Stachowiak <mstachow@mit.edu>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


Hi people,

I'm not on this mailing list, but I'm the guy who originally started
scwm. I read the list archive and noted that some people have been
wondering why I split off development effort rather than trying to do
the same thing in the context of fvwm development. The were a couple
of reasons.

* When I started scwm, I had no clue about window managers or even X11
programming in general. I also didn't have any real experience working
on internet-wide projects of that kind of scale. I figured it would be
pretty arrogant to pop up on the fvwm lists out of nowhere and say "I
have this cool idea, how about using it for fvwm3?" I figured people
would rightly tell me to put some code where my mouth was, so I just
went off and started working on a prototype of my ideas. Greg said
that scwm has been in development for three months, but that's not
entirely accurate. I actually started working on it sometime last may,
but it took me a long time to get up to speed with the fvwm code and
with the guile library, as witnessed by the long time before scwm 0.0
came out.

* I thought that fvwm had pretty different goals than I did when I was
starting out. This may have been a misunderstanding of the fvwm
developer community on my part, but it was my distinct impression that
minimal system overhead was a relatively high priority, and I wasn't
sure at the time what effect replacing the fvwm configuration language
with Guile Scheme would have on that. Also I thought that since fvwm
was already much more widely deployed, people would be much more
suspicious of my dynamic loading ideas, since that wouldn't be
feasible on many older systems. Overall, I had the impression that as
compared to the fvwm community, I was more interested in features
relative to resource consumption.


So in summary, I never in my wildest dreams imagined that anyone would
possibly want what I was working on to be fvwm3 or such. I'm actually
flattered that anyone at all thinks that would be a reasonable
idea. 'mnot unreasonably attached to the name "scwm", but I am, at
this point, attached to maintaining a fair degree of control over the
source at least until the basic architecture is fully in place. The
latter would probably be more of a hindrance than the former to scwm
being fvwm3 I suspect. However, I definitely welcome fvwm developers
to take a look at the source and if they like what they see so far,
contribute code or just test things out.



Finally, a word on why I used Guile as the configuration language
rather than abstracting configurability out in some way: doing such a
thing would have complicated the implementation immensely. 

* One of the biggest motivations for me for starting scwm was the desire
to be able to connect complicated code wirtten in the configuration
language for callbacks. Making that work reasonably with one real
language is hard enough; doing it generically so that any language can
be plugged in is, I'm convinced, near impossible. Callbacks would have
to be represented by some C data structure that would abstract out the
difference between code for the various langauges, the differing and
possibly incompatible garbage collection needs of many langauages
would have to be dealt with in a generic way, and the differing
language concepts of a datatype (from Java's strong typing to Scheme's
dynamic typing to Tcl's "everything is a string" type system) would
all have to be accomodated. 

* Guile will supposedly eventually support multiple languages through
translation. Currently this is vaporware, but since RMS seems to be
sufficiently obsessed with the concept, I believe it will happen in
time. So this way I'd get support for other languages for free without
having to go through the pain outlined above.


I anyone wants to ccontinue the discussion, please cc me, since I'm
not on the fvwm-workers list.

 - Maciej Stachowiak



--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 16:54:37 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 16:54:37 -0600 (CST)
Received: from pcnet1.pcnet.com (pcnet1.pcnet.com [204.213.232.3]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id QAA28823 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 16:54:29 -0600 (CST)
Received: from drbob.woodsway.com (ts9-pt11.pcnet.com [199.249.196.111])
	by pcnet1.pcnet.com (8.8.7/PCNet) with ESMTP id RAA03105;
	Thu, 11 Dec 1997 17:46:13 -0500 (EST)
Received: (from root@localhost)
	by drbob.woodsway.com (8.8.5/8.8.5) id RAA02691;
	Thu, 11 Dec 1997 17:45:08 -0500
Message-ID: <XFMail.971211174502.proteus@pcnet.com>
X-Mailer: XFMail 1.2-beta-111797 [p0] on Linux
X-Priority: 3 (Normal)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
In-Reply-To: <XFMail.971211012604.proteus@pcnet.com>
Date: Thu, 11 Dec 1997 17:45:02 -0500 (EST)
Reply-To: Bob Woodside <proteus@pcnet.com>
Organization: Woodsway Consulting
From: Bob Woodside <proteus@pcnet.com>
To: fvwm-workers@hpc.uh.edu
Subject: Re: FVWM: window flags bitfield
Cc: Charles Hines <chuck_hines@VNET.IBM.COM>
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


            BITFIELD WINS BIG on ARMONK IRON
                   - Details at 11

    Couldn't resist trying out Dan's bitfield test on a big
ol' mainframe compiler - IBM's LE/370 on a 3090. Blew away
my theory that the struct-within-a-struct might induce
the compiler to perform more gyrations than were really
necessary. With this compiler, it's not the struct definition
but the int declaration that adds the contortions. But YMMV. 
I'd like to see this tried on a few different systems/compilers.
(No, the compiler doesn't generate those assembler comments.)


        /* Bitfield in struct-in-union-in-struct... */
 *  s1.flags.bf.bf3       =  True;
           OI    144(r13),32    /* Aww, just set the damn bit. */
        /* Int in struct-in-union-in-struct... */
 *  s2.flags2.bf2.Other1 |=  ThirdBit; 
           L     r4,152(,r13)        /* Get the var...         */  
           O     r4,=F'536870912'    /* Apply the or-mask...   */
           ST    r4,152(,r13)        /* Put 'er back.          */
        /* Simple int variable... */
 *  AnotherInt           |=  ThirdBit; 
           L     r4,160(,r13)        /* Get the var...         */
           O     r4,=F'536870912'    /* Apply the or-mask...   */
           ST    r4,160(,r13)        /* Put it back.           */

    This is with no optimization specified. It would be 
difficult to optimize the bitfield operation any more than
this. (Well, I did think of one way: by commenting out subsequent 
references to any of these local variables, you can optimize the 
whole program away. There's performance for you!)

    Actually, turning optimization on generated less efficient 
code for the bitfield case, because the compiler tried so hard to 
keep as much stuff as it could in registers; but the overall 
sequence was probably faster. 

    For a really conclusive test, the structs/variables/whatever
should be external to the funcion operating on them, referenced
by a passed pointer. This would better mimick the way the new Style
flags would actually be used, and keep the optimizer from getting
*too* carried away. Matter of fact, the three operations should 
probably be isolated into three separate functions that do just one
thing. Otherwise, when you start optimizing, the first operation 
may appear to be doing a lot more because it's picking up some 
setup overhead that's common to all three. 

    All that said, based on the feedback that's come in today, I
think two things seem to be emerging:

    1. Not all optimizing compilers are created equal.
    2. The bit-field performance penalty, where it exists, is
       *probably* not a show-stopper.


        - Bob



--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 18:14:30 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 18:14:30 -0600 (CST)
Received: from smtp-gw.BayNetworks.COM (ns3.BayNetworks.COM [192.32.253.3]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id SAA00057 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 18:14:17 -0600 (CST)
Received: from mailhost.BayNetworks.COM ([141.251.211.49] (may be forged))
	by smtp-gw.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id TAA15806
	for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 19:12:26 -0500 (EST)
Received: from pobox.engeast.BayNetworks.COM (pobox.corpeast.baynetworks.com [192.32.61.6])
	by mailhost.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id BAA00597
	for <fvwm-workers@hpc.uh.edu>; Fri, 12 Dec 1997 01:11:50 +0100 (MET)
Received: from lemming.engeast (lemming [192.32.138.39])
	by pobox.engeast.BayNetworks.COM (SMI-8.6/BNET-97/04/24-S) with SMTP
	id OAA20402; Thu, 11 Dec 1997 14:55:16 -0500
	for <fvwm-workers@hpc.uh.edu>
Received: by lemming.engeast (4.1/SMI-4.1)
	id AA22124; Thu, 11 Dec 97 14:55:15 EST
To: Fvwm Workers List <fvwm-workers@hpc.uh.edu>
Subject: GCC assembly of my bittest.c
Reply-To: psmith@BayNetworks.COM
From: psmith@BayNetworks.COM (Paul D. Smith)
Date: 11 Dec 1997 14:55:15 -0500
Message-Id: <p5yb1rbqos.fsf@baynetworks.com>
Lines: 131
X-Mailer: Gnus v5.5/Emacs 20.2
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

OK, I got gas compiled on my SunOS system.  The assembly generated by
GCC is almost exactly the same in each case.

Note that all of these were compiled without any optimization.

  73:bittest.c     ****     bit_win.Iconified = 1;
  43              	LM2:
  44 000c 11000000 		sethi %hi(_bit_win),%o0
  45 0010 D2022000 		ld [%o0+%lo(_bit_win)],%o1
  46 0014 15000020 		sethi %hi(32768),%o2
  47 0018 9212400A 		or %o1,%o2,%o1
  48 001c D2222000 		st %o1,[%o0+%lo(_bit_win)]

  75:bittest.c     ****     bit_win.Iconified = 0;
  50              	LM3:
  51 0020 11000000 		sethi %hi(_bit_win),%o0
  52 0024 D2022000 		ld [%o0+%lo(_bit_win)],%o1
  53 0028 173FFFDF 		sethi %hi(-32769),%o3
  54 002c 9412E3FF 		or %o3,%lo(-32769),%o2
  55 0030 920A400A 		and %o1,%o2,%o1
  56 0034 D2222000 		st %o1,[%o0+%lo(_bit_win)]

  77:bittest.c     ****     bit_win.t36 = 1;
  58              	LM4:
  59 0038 11000000 		sethi %hi(_bit_win),%o0
  60 003c 92102004 		mov 4,%o1
  61 0040 94122000 		or %o0,%lo(_bit_win),%o2
  62 0044 9002400A 		add %o1,%o2,%o0
  63 0048 D2020000 		ld [%o0],%o1
  64 004c 15040000 		sethi %hi(268435456),%o2
  65 0050 9212400A 		or %o1,%o2,%o1
  66 0054 D2220000 		st %o1,[%o0]

  79:bittest.c     ****     bit_win.t36 = 0;
  68              	LM5:
  69 0058 11000000 		sethi %hi(_bit_win),%o0
  70 005c 92102004 		mov 4,%o1
  71 0060 94122000 		or %o0,%lo(_bit_win),%o2
  72 0064 9002400A 		add %o1,%o2,%o0
  73 0068 D2020000 		ld [%o0],%o1
  74 006c 173BFFFF 		sethi %hi(-268435457),%o3
  75 0070 9412E3FF 		or %o3,%lo(-268435457),%o2
  76 0074 920A400A 		and %o1,%o2,%o1
  77 0078 D2220000 		st %o1,[%o0]

For the multi-int method:

  87:bittest.c     ****     old_win.flag1 |= OLD_ICONIFIED;
  83              	LM7:
  84 0084 11000000 		sethi %hi(_old_win),%o0
  85 0088 13000000 		sethi %hi(_old_win),%o1
  86 008c D4026000 		ld [%o1+%lo(_old_win)],%o2
  87 0090 9212A002 		or %o2,2,%o1
  88 0094 D2222000 		st %o1,[%o0+%lo(_old_win)]

  89:bittest.c     ****     old_win.flag1 &= ~OLD_ICONIFIED;
  90              	LM8:
  91 0098 11000000 		sethi %hi(_old_win),%o0
  92 009c 13000000 		sethi %hi(_old_win),%o1
  93 00a0 D4026000 		ld [%o1+%lo(_old_win)],%o2
  94 00a4 920ABFFD 		and %o2,-3,%o1
  95 00a8 D2222000 		st %o1,[%o0+%lo(_old_win)]

  91:bittest.c     ****     old_win.flag2 |= OLD_T36;
  97              	LM9:
  98 00ac 11000000 		sethi %hi(_old_win),%o0
  99 00b0 92102004 		mov 4,%o1
 100 00b4 94122000 		or %o0,%lo(_old_win),%o2
 101 00b8 9002400A 		add %o1,%o2,%o0
 102 00bc 13000000 		sethi %hi(_old_win+4),%o1
 103 00c0 D4026000 		ld [%o1+%lo(_old_win+4)],%o2
 104 00c4 9212A008 		or %o2,8,%o1
 105 00c8 D2220000 		st %o1,[%o0]

  93:bittest.c     ****     old_win.flag2 &= ~OLD_T36;
 107              	LM10:
 108 00cc 11000000 		sethi %hi(_old_win),%o0
 109 00d0 92102004 		mov 4,%o1
 110 00d4 94122000 		or %o0,%lo(_old_win),%o2
 111 00d8 9002400A 		add %o1,%o2,%o0
 112 00dc 13000000 		sethi %hi(_old_win+4),%o1
 113 00e0 D4026000 		ld [%o1+%lo(_old_win+4)],%o2
 114 00e4 920ABFF7 		and %o2,-9,%o1
 115 00e8 D2220000 		st %o1,[%o0]

For the array with macros method:

 101:bittest.c     ****     SET_FLAG(array_win.flags, ARRAY_ICONIFIED);
 122              	LM12:
 123 00f8 11000000 		sethi %hi(_array_win),%o0
 124 00fc 13000000 		sethi %hi(_array_win),%o1
 125 0100 D4026000 		ld [%o1+%lo(_array_win)],%o2
 126 0104 9212A002 		or %o2,2,%o1
 127 0108 D2222000 		st %o1,[%o0+%lo(_array_win)]

 103:bittest.c     ****     RESET_FLAG(array_win.flags, ARRAY_ICONIFIED);
 129              	LM13:
 130 010c 11000000 		sethi %hi(_array_win),%o0
 131 0110 13000000 		sethi %hi(_array_win),%o1
 132 0114 D4026000 		ld [%o1+%lo(_array_win)],%o2
 133 0118 920ABFFD 		and %o2,-3,%o1
 134 011c D2222000 		st %o1,[%o0+%lo(_array_win)]

 105:bittest.c     ****     SET_FLAG(array_win.flags, ARRAY_T36);
 136              	LM14:
 137 0120 11000000 		sethi %hi(_array_win),%o0
 138 0124 92102004 		mov 4,%o1
 139 0128 94122000 		or %o0,%lo(_array_win),%o2
 140 012c 9002400A 		add %o1,%o2,%o0
 141 0130 13000000 		sethi %hi(_array_win+4),%o1
 142 0134 D4026000 		ld [%o1+%lo(_array_win+4)],%o2
 143 0138 9212A008 		or %o2,8,%o1
 144 013c D2220000 		st %o1,[%o0]

 107:bittest.c     ****     RESET_FLAG(array_win.flags, ARRAY_T36);
 146              	LM15:
 147 0140 11000000 		sethi %hi(_array_win),%o0
 148 0144 92102004 		mov 4,%o1
 149 0148 94122000 		or %o0,%lo(_array_win),%o2
 150 014c 9002400A 		add %o1,%o2,%o0
 151 0150 13000000 		sethi %hi(_array_win+4),%o1
 152 0154 D4026000 		ld [%o1+%lo(_array_win+4)],%o2
 153 0158 920ABFF7 		and %o2,-9,%o1
 154 015c D2220000 		st %o1,[%o0]

-- 
-------------------------------------------------------------------------------
 Paul D. Smith <psmith@baynetworks.com>         Network Management Development
 "Please remain calm...I may be mad, but I am a professional." --Mad Scientist
-------------------------------------------------------------------------------
     These are my opinions--Bay Networks takes no responsibility for them.
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Thu Dec 11 18:20:45 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Thu, 11 Dec 1997 18:20:45 -0600 (CST)
Received: from smtp-gw.BayNetworks.COM (ns3.BayNetworks.COM [192.32.253.3]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id SAA00207 for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 18:20:32 -0600 (CST)
Received: from mailhost.BayNetworks.COM ([141.251.211.49] (may be forged))
	by smtp-gw.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id TAA16844
	for <fvwm-workers@hpc.uh.edu>; Thu, 11 Dec 1997 19:19:32 -0500 (EST)
Received: from pobox.engeast.BayNetworks.COM (pobox.corpeast.baynetworks.com [192.32.61.6])
	by mailhost.BayNetworks.COM (8.8.6/8.8.6) with ESMTP id BAA01899
	for <fvwm-workers@hpc.uh.edu>; Fri, 12 Dec 1997 01:18:57 +0100 (MET)
Received: from lemming.engeast (lemming [192.32.138.39])
	by pobox.engeast.BayNetworks.COM (SMI-8.6/BNET-97/04/24-S) with SMTP
	id LAA03179; Thu, 11 Dec 1997 11:53:40 -0500
	for <fvwm-workers@hpc.uh.edu>
Received: by lemming.engeast (4.1/SMI-4.1)
	id AA14378; Thu, 11 Dec 97 11:53:40 EST
To: Fvwm Workers List <fvwm-workers@hpc.uh.edu>
Subject: New bittest.c
Reply-To: psmith@BayNetworks.COM
From: psmith@BayNetworks.COM (Paul D. Smith)
Date: 11 Dec 1997 11:53:39 -0500
Message-Id: <p5en3jddnw.fsf@baynetworks.com>
Lines: 120
X-Mailer: Gnus v5.5/Emacs 20.2
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

I enclose here what I think is a slightly fairer comparison between the
bitfield vs. multiple integer methods, which wraps the integers into a
struct and uses them that way.

I also added an implementation of my originally suggested array
solution, along with SET_FLAG and RESET_FLAG macros.

Unfortunately, I've discovered that GCC itself won't generate annotated
assembly; you have to get GAS for that.  I don't have a copy, and
binutils is a honkin' big package, but I'm working on it :).  But from
an eyeballing of the raw assembly it doesn't look like there's much
difference at all between them.

$ cat bittest.c
#include <stdio.h>
#include <limits.h>

/* struct for using the old method, and adding a new flag member */
typedef struct
{
  unsigned long flag1;
  unsigned long flag2;
} old;

old old_win;

/* Struct for using bitfields */
typedef struct
{
  unsigned int StartIconic:1;       /* 1 */
  unsigned int OnTop:1;             /* 2 */
  unsigned int Sticky:1;
  unsigned int StickyIcon:1;
  unsigned int SuppressIcon:1;      /* 5 */
  unsigned int NoIconTitle:1;
  unsigned int Lenience:1;
  unsigned int WindowListSkip:1;
  unsigned int CirculateSkip:1;
  unsigned int CirculateSkipIcon:1; /* 10 */
  unsigned int FocusPolicy:2; /* MOUSE, SLOPPY, CLICK, NEVER */
  unsigned int ShowOnMap:1;
  unsigned int Border:1;
  unsigned int Title:1;             /* 15 */
  unsigned int Mapped:1;
  unsigned int Iconified:1;
  unsigned int Transient:1;
  unsigned int Raised:1;
  unsigned int Visible:1;
  unsigned int IconOurs:1;
  unsigned int PixmapOurs:1;
  unsigned int ShapedIcon:1;
  unsigned int Maximized:1;         /* 24 */
  unsigned int t25:1;
  unsigned int t26:1;
  unsigned int t27:1;
  unsigned int t28:1;
  unsigned int t29:1;
  unsigned int t30:1;
  unsigned int t31:1;
  unsigned int t32:1;
  unsigned int t33:1;
  unsigned int t34:1;
  unsigned int t35:1;
  unsigned int t36:1;
} bit;

bit bit_win;

/* New method, but use an array and macro instead of bitfields */
typedef struct {
  unsigned long flags[2];
} array;

array array_win;

#define VSZ               (sizeof(unsigned long)*CHAR_BIT)

#define SET_FLAG(_v,_f)   ((_v)[(_f)/VSZ]|=(1<<((_f)-1)%VSZ))
#define RESET_FLAG(_v,_f) ((_v)[(_f)/VSZ]&=~((1<<((_f)-1)%VSZ)))

int tmp;

int
main()
{
    /* bitfields */
    bit_win.Iconified = 1;

    bit_win.t36 = 1;

    bit_win.Iconified = 0;

    bit_win.t36 = 0;

    /* Old way, adding new flag element */
#define OLD_ICONIFIED   2
#define OLD_T36         8  /* 1 << (36 - 32 - 1) */

    old_win.flag1 |= OLD_ICONIFIED;

    old_win.flag2 |= OLD_T36;

    old_win.flag1 &= ~OLD_ICONIFIED;

    old_win.flag2 &= ~OLD_T36;

    /* Use an array */
#define ARRAY_ICONIFIED   2
#define ARRAY_T36         36

    SET_FLAG(array_win.flags, ARRAY_ICONIFIED);

    SET_FLAG(array_win.flags, ARRAY_T36);

    RESET_FLAG(array_win.flags, ARRAY_ICONIFIED);

    RESET_FLAG(array_win.flags, ARRAY_T36);

    return (0);
}
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Sat Dec 13 22:19:00 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Sat, 13 Dec 1997 22:19:00 -0600 (CST)
Received: from pcnet1.pcnet.com (pcnet1.pcnet.com [204.213.232.3]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id WAA04454 for <fvwm-workers@hpc.uh.edu>; Sat, 13 Dec 1997 22:18:53 -0600 (CST)
Received: from drbob.woodsway.com (ts9-pt9.pcnet.com [199.249.196.109])
	by pcnet1.pcnet.com (8.8.7/PCNet) with ESMTP id XAA18105;
	Sat, 13 Dec 1997 23:14:23 -0500 (EST)
Received: (from root@localhost)
	by drbob.woodsway.com (8.8.5/8.8.5) id XAA03035;
	Sat, 13 Dec 1997 23:13:16 -0500
Message-ID: <XFMail.971213231310.proteus@pcnet.com>
X-Mailer: XFMail 1.2-beta-111797 [p0] on Linux
X-Priority: 3 (Normal)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
In-Reply-To: <XFMail.971211174502.proteus@pcnet.com>
Date: Sat, 13 Dec 1997 23:13:10 -0500 (EST)
Reply-To: Bob Woodside <proteus@pcnet.com>
Organization: Woodsway Consulting
From: Bob Woodside <proteus@pcnet.com>
To: Bob Woodside <proteus@pcnet.com>
Subject: Re: FVWM: window flags bitfield
Cc: Charles Hines <chuck_hines@VNET.IBM.COM>, fvwm-workers@hpc.uh.edu
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7


        One more test of the bitfield vs. old-style flag
treatment.... This was generated by GCC under Linux on a
Wintel box, no optimization. It's hard to see a great deal
to recommend one technique over the other (from a performance
point of view) in this case. And once again it quashes my sug-
gestion that the struct-union-struct construct might cause
less efficient code to be generated. The only way to soup this
up any more would be to fold the 2 or's into a single instruction.

        - Bob


================ The Assembler Code =================

Assembler code courtesy of GDB.
Hand interpolated C code courtesy of yours truly.


Dump of assembler code for function main:

           [uninteresting stuff deleted]

*   printf("About to set some bits the new way...\n");

    0x8048189 <main+85>:    pushl  $0x80591bf
    0x804818e <main+90>:    call   0x8048290 <_IO_printf>
    0x8048193 <main+95>:    addl   $0x4,%esp


*   s1.flags.fb.f3          =  True;

    0x8048196 <main+98>:    orb    $0x4,0xfffffff8(%ebp)


*   s1.flags.fb.f10         =  True;

    0x804819a <main+102>:   orb    $0x2,0xfffffff9(%ebp)


*   s1.flags.fb.f6          =  False;

    0x804819e <main+106>:   andb   $0xdf,0xfffffff8(%ebp)


*   printf("About to set some bits the old way...\n");

    0x80481a2 <main+110>:   pushl  $0x80591e6
    0x80481a7 <main+115>:   call   0x8048290 <_IO_printf>
    0x80481ac <main+120>:   addl   $0x4,%esp


*   s2.flags2.TheOtherFlagWords[0]    |=  ThirdBit;  

    0x80481af <main+123>:   orb    $0x4,0xfffffff0(%ebp)


*   s2.flags2.TheOtherFlagWords[0]    |=  TenthBit;  

    0x80481b3 <main+127>:   orl    $0x200,0xfffffff0(%ebp)


*   s2.flags2.TheOtherFlagWords[0]    &=  ~SixthBit;  

    0x80481ba <main+134>:   andl   $0xffffffdf,0xfffffff0(%ebp)


           [etc.]

End of assembler dump.

==================== The C Source =====================

#include <stdio.h>
void  main ()
{
#define True        1
#define False       0
/*
#define ThirdBit    0x20000000
#define SixthBit    0x04000000
#define TenthBit    0x00200000
*/
/*  
    Hmm...looks like GCC is assigning bitfields in the old PDP-11 
    style, at least for Wintel machines. Ok, we will too.
*/
#define ThirdBit          4
#define SixthBit          32
#define TenthBit          512

struct s1
{
  union flags
  {
    unsigned long int TheFlagWords[2];
    struct fb
    {
    unsigned    f1:   1;
    unsigned    f2:   1;
    unsigned    f3:   1;
    unsigned    f4:   1;
    unsigned    f5:   1;
    unsigned    f6:   1;
    unsigned    f7:   1;
    unsigned    f8:   1;
    unsigned    f9:   1;
    unsigned    f10:  1;
    unsigned    f11:  1;
    unsigned    f12:  1;
    unsigned    f13:  1;
    unsigned    f14:  1;
    unsigned    f15:  1;
    unsigned    f16:  1;
    unsigned    f17:  1;
    unsigned    f18:  1;
    unsigned    f19:  1;
    unsigned    f20:  1;
    unsigned    f21:  1;
    unsigned    f22:  1;
    unsigned    f23:  1;
    unsigned    f24:  1;
    unsigned    f25:  1;
    unsigned    f26:  1;
    unsigned    f27:  1;
    unsigned    f28:  1;
    unsigned    f29:  1;
    unsigned    f30:  1;
    unsigned    f31:  1;
    unsigned    f32:  1;
    unsigned    f33:  1;
    unsigned    f34:  1;
    unsigned    f35:  1;
    }  fb;
  }  flags;
}  s1;

struct s2
{
  union flags2
  {
    unsigned long int TheOtherFlagWords[2];
    struct fb2
    {
    unsigned    f1:   1;
    unsigned    f2:   1;
    unsigned    f3:   1;
    unsigned    f4:   1;
    unsigned    f5:   1;
    unsigned    f6:   1;
    unsigned    f7:   1;
    unsigned    f8:   1;
    unsigned    f9:   1;
    unsigned    f10:  1;
    unsigned    f11:  1;
    unsigned    f12:  1;
    unsigned    f13:  1;
    unsigned    f14:  1;
    unsigned    f15:  1;
    unsigned    f16:  1;
    unsigned    f17:  1;
    unsigned    f18:  1;
    unsigned    f19:  1;
    unsigned    f20:  1;
    unsigned    f21:  1;
    unsigned    f22:  1;
    unsigned    f23:  1;
    unsigned    f24:  1;
    unsigned    f25:  1;
    unsigned    f26:  1;
    unsigned    f27:  1;
    unsigned    f28:  1;
    unsigned    f29:  1;
    unsigned    f30:  1;
    unsigned    f31:  1;
    unsigned    f32:  1;
    unsigned    f33:  1;
    unsigned    f34:  1;
    unsigned    f35:  1;
    }  fb2;
  }  flags2;
}  s2;

memset(&s1, '\0', sizeof(s1));
memset(&s2, '\0', sizeof(s2));

printf("Hello, world!  Let's set some bits.\n");
printf("About to set some bits the new way...\n");
s1.flags.fb.f3          =  True;
s1.flags.fb.f10         =  True;
s1.flags.fb.f6          =  False;


printf("About to set some bits the old way...\n");
s2.flags2.TheOtherFlagWords[0]    |=  ThirdBit;  
s2.flags2.TheOtherFlagWords[0]    |=  TenthBit;  
s2.flags2.TheOtherFlagWords[0]    &=  ~SixthBit;  

printf("After: 1st flag word 1 = %d.\n", s1.flags.TheFlagWords[0]);
printf("After: 2nd flag word 1 = %d.\n", s2.flags2.TheOtherFlagWords[0]);
printf("About to leave now...\n");



return ;
}

 
--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Wed Dec 17 01:39:36 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Wed, 17 Dec 1997 01:39:36 -0600 (CST)
Received: from dfw-ix2.ix.netcom.com (dfw-ix2.ix.netcom.com [206.214.98.2]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id BAA28307; Wed, 17 Dec 1997 01:32:06 -0600 (CST)
From: szzsm@ix.netcom.com
Received: (from smap@localhost)
          by dfw-ix2.ix.netcom.com (8.8.4/8.8.4)
	  id BAA02199; Wed, 17 Dec 1997 01:30:51 -0600 (CST)
Date: Wed, 17 Dec 1997 01:30:51 -0600 (CST)
Received: from whx-ca6-20.ix.netcom.com(204.31.115.212) by dfw-ix2.ix.netcom.com via smap (V1.3)
	id rma028799; Wed Dec 17 01:30:23 1997
Subject: what's up doc
Message-Id: <eaep.3.0.reg.PetHD6.35780.9786012732@smtp.ix.netcom.com>
Content-Type: TEXT/PLAIN charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7




(please print and save)
            

Dear Future Executive: 


2Hour Resume/Cover Letter Package
_______________________________________________________________________
Please pardon us if this important message doesn't concern you.

INTRODUCTION
The Resume Doctor has created generic resumes and cover letters for both
the general public and college graduates. All you do is modify them 
(delete the text which is there) with the inclusion of your information. 
There is no need to format anything. It's already done for you. We save you
time even if you're an expert with word processors. Using this package is
easier than using a resume program or having your resume or cover letter 
prepared by a resume specialist whom you don't know. The Resume Doctor has
examined both options and find them too costly and cumbersome. You could
have a superb looking resume in less than two hours with our resume package. 
In fact, we guarantee it. We'll finish it for you if you are unable to. 
(please read below).
 
The Resume Doctor treats every customer as if they would a member of thier
family. In order to continue to provide superior service to our clients, 
we are offering this package for a limited time only. If you're serious about 
looking for work, we're serious about helping you. So order today before 
we sell out. The Resume Doctor has been preparing resumes since 1988 and 
we know what works.

Our complete package, detailed below, may either be mailed to you on a
diskette or attached as an E-mail download. In both cases, you will simply 
save the files as a document (doc ext.) or a rich-text (rtf ext). Please
indicate on the order form below which method you require.




                                 THE PACKAGE

There's simply nothing that compares to what you get with our resume package. 
A complete package like ours could easily retail for more than $75.00. 
Your cost is just $29.95.


PREFORMATTED RESUMES  
You will receive a variety of resume templates. All of the templates are 
formatted differently. Just choose the one best suited for you. We also 
include the most common formatting instructions in case you get lost. 
Everything you need will be at your finger tips for fast and easy 
processing. 


TOP COVER LETTERS
Our cover letters are the best. "You have to see to believe". Our cover 
letters are written for cold-calls, replies to classified advertisements,
and self-promotion. The cover letters are motivational in style. There's a 
chock-full of paragraph options to choose from.  We think that our cover 
letters alone will get you in the door. 
Attn: Graduating students - "Our cover letters will level the playing field
for you." (if you're writing your own cover letters, our cover letters will
           serve as a perfect demonstration on how they should be written.)

60 SECRET WORDS/PHRASES
Similar to internet search engines, more and more businesses are using 
scanners that search for certain words/phrases in resumes. We'll provide you
with the top 60 words/phrases and tell you where to put them. This is vital
if you're applying at large companies.

LIST OF FIELD HEADERS
You get field headers too. Some of the most common headers in resumes are 
Objective, Summary, and Experience. You'll get a comprehensive list from us
with your package.

OVER 120 ACTION WORDS
Words such as collaborated, systemized, rehabilitated, and inspired are 
examples of action word. Action words help get your message across. The 
Resume Doctor has more than 120 of them to give you.

FAQ 
Want answers to our most common questions such as do you include salary
history in a resume or cover letter or does a resume have to be just one
page?
Answers to those questions are included in our package.

INTERVIEW TIPS
We have the best. Don't even think about going on an interview without them. 
They're that good!

CUSTOMER SUPPORT AND GUARANTEE
As indicated above, The Resume Doctor will finish-up your resume for you if
you're not able to do it within two hours. We also anticipate reviewing your
completed resume and cover letters. Just E-mail them back to us. We are
responsible. You get interviews or a refund. It's that simple! All
information provided to The Resume Doctor is kept completely confidential.
Please contact us at 818-710-6474 and we'll be happy to answer any question
you may have regarding our service.

CAREER HELP
Now that you have a great looking resume and cover letter, you'll want to do 
something with them. Our package presents you with the very best career links
on the internet. 

RESUME POSTING FOR COLLEGE GRADUATES
We've included in the package top web sites for posting your resume. You 
could cut and paste them into a bulletin board in about five minutes.
(We will have a list of sites for the general public soon) 


AS WE TOLD YOU, YOU CAN'T BUY A MORE COMPLETE RESUME PACKAGE LIKE THIS 
ANYWHERE. ALSO, WE'LL FINISH IT FOR YOU IF YOUR UNABLE TO DO IT WITHIN TWO
HOURS.

__________________________________________________________________________


                               ORDER FORM

2HOUR RESUME PACKAGE-$29.95

(select one)

General Package______  Name______________________________

Student Package______  Telephone#_________________

File Extensions:

Document(.doc)_____

Rich-Text (rtf.)______

Address_______________________ City____________________State_____ Zip______
                   (please print clearly)                   (abrev.)

E-mail Address to send package______________________

Fax#_____________________

Name on Credit Card______________________ 


_____________________________________________

Signature

Visa Card#______________________ Exp. Month and Year______________

MasterCard#_____________________ Exp. Month and Year______________

Discover Card#__________________ Exp. Month and Year______________

My check or money order is included within. Please send me the package on 
diskette____
(please allow up to two weeks when ordering my mail and include this order 
form)

My check or money order is included within. Please E-mail me the package _____
(please allow up to two weeks when ordering my mail and include this order form)

Mail checks and money orders to:

 
4872 Topanga Canyon Boulevard, Suite# 122, Woodland Hills, California 91364
Telephone# (818)710-6474                                 Fax# (818)340-6074
                                                          
Please fax us you order between 9am-5pm pst. 
______________________________________________________________________________
     
We thank you for your time and consideration.
     
The Resume Doctor

Robert Johnson
Sales Manager

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

From owner-fvwm-workers@hpc.uh.edu  Tue Dec 23 17:30:38 1997
Received: by sina.hpc.uh.edu (TLB v0.09a (1.20 tibbs 1996/10/09 22:03:07)); Tue, 23 Dec 1997 17:30:38 -0600 (CST)
Received: from Athena.McRCIM.McGill.EDU (root@Athena.McRCIM.McGill.EDU [132.206.4.20]) by sina.hpc.uh.edu (8.7.3/8.7.3) with ESMTP id RAA15758 for <fvwm-workers@hpc.uh.edu>; Tue, 23 Dec 1997 17:30:31 -0600 (CST)
Received: from Chart.McRCIM.McGill.EDU (uucp@Chart.McRCIM.McGill.EDU [132.206.4.7]) by 19163 on Athena.McRCIM.McGill.EDU (8.8.5) with ESMTP id SAA19163 for <hpc.uh.edu!fvwm-workers>; Tue, 23 Dec 1997 18:30:15 -0500 (EST)
Received: from hilbert.UUCP (uucp@localhost) by 3980 on Chart.McRCIM.McGill.EDU (8.8.5) with UUCP id SAA03980 for hpc.uh.edu!fvwm-workers; Tue, 23 Dec 1997 18:30:14 -0500 (EST)
Received: from localhost by hilbert.nyongwa.montreal.qc.ca
	via sendmail with smtp
	id <m0xkdlK-0000uSC@hilbert.nyongwa.montreal.qc.ca>
	for <fvwm-workers@hpc.uh.edu>; Tue, 23 Dec 1997 18:29:22 -0500 (EST)
	(Smail-3.2.0.95 1997-May-7 #1 built 1997-May-25)
Date: Tue, 23 Dec 1997 18:29:21 -0500 (EST)
From: Steve Robbins <steve@nyongwa.montreal.qc.ca>
To: The FVWM Workers List <fvwm-workers@hpc.uh.edu>
Subject: Facing the GNU year
Message-ID: <Pine.LNX.3.96.971223181418.26630C-100000@hilbert.nyongwa.montreal.qc.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-fvwm-workers@hpc.uh.edu
Precedence: list
X-Majordomo: 1.94.jlt7

Hi,

I've polished off an autoconf'd version of 2.0.46 that -- I hope -- is
decent enough to use in the next release.  It is now on my web page:
http://www.cs.mcgill.ca/~stever/software/fvwm

The major changes since the last time I announced here:

* I dropped the "patch kit" of diff file & script; it got too
  cumbersome to maintain.  Now there is just a complete 2.0.46
  distribution.

* the binary name is reverted to fvwm
* config suffix reverted to .fvwmrc
* modules get installed into ${prefix}/libexec/fvwm/$(VERSION)
  -- nominally /usr/local/libexec/fvwm/2.0.46
* system configuration file read from ${sysconfdir}/system.fvwmrc
  -- i.e. /usr/local/etc/system.fvwmrc

* modules in "extras" are configured and built, with the exception of
  fvwmperl and fvwmpython

* a detailed description of the changes and a short primer on working with
  autoconf is included for maintainers

I have to confess that I haven't checked out many of the modules ("extra"
or otherwise) closely, for I don't use them.  They do build: I have built
this version on linux, irix, and osf1.

Comments, success or horror stories are most welcome.

--
Steve Robbins                              <steve@nyongwa.montreal.qc.ca>

I'd probably be famous now, if I wasn't such a good waitress.

--
Visit the official FVWM web page at <URL:http://www.hpc.uh.edu/fvwm/>.
To unsubscribe from the list, send "unsubscribe fvwm-workers" in the
body of a message to majordomo@hpc.uh.edu.
To report problems, send mail to fvwm-workers-owner@hpc.uh.edu.

